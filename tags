!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
101	src/metric.f	/^ 101              format(' ', a, g12.5, a, 3(tr1,i3) )$/;"	l	subroutine:METRIC	file:
ADDBSTRESSWRESC	src/rhs4th3fort.f	/^      subroutine ADDBSTRESSWRESC(/;"	s
ADDSGD4_BLOCKX	src/EWCuda.h	59;"	d
ADDSGD4_BLOCKY	src/EWCuda.h	60;"	d
ASSEMBLE	src/dgmodule.f90	/^  SUBROUTINE ASSEMBLE(/;"	s	module:dgmodule
ASSEMBLE_CONST_COEFF	src/dgmodule.f90	/^  SUBROUTINE ASSEMBLE_CONST_COEFF(/;"	s	module:dgmodule
ASSERT	src/Require.h	101;"	d
ASSERT	src/Require.h	112;"	d
ASSERT2	src/Require.h	50;"	d
ASSERT2	src/Require.h	96;"	d
BASIC_PATH	Makefile	/^  BASIC_PATH = \/opt\/intel\/lib\/intel64$/;"	m
BCForcing	src/EW.h	/^   vector<float_sw4**> BCForcing;$/;"	m	class:EW
BOPEXT4TH	src/boundaryOp.f	/^      subroutine BOPEXT4TH(/;"	s
BOPEXT4TH	tests/testil/boundaryOp.f	/^      subroutine BOPEXT4TH(/;"	s
BX	src/device-routines.C	9384;"	d	file:
BY	src/device-routines.C	9386;"	d	file:
Brune	src/time_functions.C	/^float_sw4 Brune( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Brune	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Brune( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
BruneSmoothed	src/time_functions.C	/^float_sw4 BruneSmoothed( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
BruneSmoothed	src/time_functions_cu.C	/^__host__ __device__ float_sw4 BruneSmoothed( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
BruneSmoothed_om	src/time_functions.C	/^float_sw4 BruneSmoothed_om( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
BruneSmoothed_om	src/time_functions_cu.C	/^__host__ __device__ float_sw4 BruneSmoothed_om( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
BruneSmoothed_omtt	src/time_functions.C	/^float_sw4 BruneSmoothed_omtt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
BruneSmoothed_omtt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 BruneSmoothed_omtt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
BruneSmoothed_t	src/time_functions.C	/^float_sw4 BruneSmoothed_t( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
BruneSmoothed_t	src/time_functions_cu.C	/^__host__ __device__ float_sw4 BruneSmoothed_t( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
BruneSmoothed_tt	src/time_functions.C	/^float_sw4 BruneSmoothed_tt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
BruneSmoothed_tt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 BruneSmoothed_tt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
BruneSmoothed_ttt	src/time_functions.C	/^float_sw4 BruneSmoothed_ttt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
BruneSmoothed_ttt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 BruneSmoothed_ttt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Brune_om	src/time_functions.C	/^float_sw4 Brune_om( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Brune_om	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Brune_om( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Brune_omtt	src/time_functions.C	/^float_sw4 Brune_omtt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Brune_omtt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Brune_omtt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Brune_t	src/time_functions.C	/^float_sw4 Brune_t( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Brune_t	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Brune_t( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Brune_tt	src/time_functions.C	/^float_sw4 Brune_tt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Brune_tt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Brune_tt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Brune_ttt	src/time_functions.C	/^float_sw4 Brune_ttt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Brune_ttt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Brune_ttt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
BufferToHaloKernelX_dev	src/device-routines.C	/^__global__ void BufferToHaloKernelX_dev(float_sw4* block_left, float_sw4* block_right, float_sw4 * leftSideEdge, $/;"	f
BufferToHaloKernelX_dev_rev	src/device-routines.C	/^__global__ void BufferToHaloKernelX_dev_rev(float_sw4* block_left, float_sw4* block_right,$/;"	f
BufferToHaloKernelY_dev	src/device-routines.C	/^__global__ void BufferToHaloKernelY_dev(float_sw4* block_up, float_sw4* block_down,$/;"	f
BufferToHaloKernelY_dev_rev	src/device-routines.C	/^__global__ void BufferToHaloKernelY_dev_rev(float_sw4* block_up, float_sw4* block_down,$/;"	f
BufferToHaloKernel_dev	src/device-routines.C	/^__global__ void BufferToHaloKernel_dev(float_sw4* block_left, float_sw4* block_right, float_sw4* block_up, float_sw4* block_down,$/;"	f
BufferToHaloKernel_dev_rev	src/device-routines.C	/^__global__ void BufferToHaloKernel_dev_rev(float_sw4* block_left, float_sw4* block_right, float_sw4* block_up, float_sw4* block_down,$/;"	f
BufferToHaloKernel_dev_rev_v2	src/device-routines.C	/^__global__ void BufferToHaloKernel_dev_rev_v2(float_sw4* block_left, float_sw4* block_right, $/;"	f
Byteswapper	src/Byteswapper.h	/^class Byteswapper$/;"	c
C6SBTP	src/EW.C	/^float_sw4 EW::C6SBTP(float_sw4 Lim, float_sw4 t)$/;"	f	class:EW
C6SBTP	src/dgmodule.f90	/^  real(kind = dp) function C6SBTP(/;"	f	module:dgmodule
C6SmoothBump	src/EW.C	/^float_sw4 EW::C6SmoothBump(float_sw4 t, float_sw4 R, float_sw4 c)$/;"	f	class:EW
C6SmoothBump	src/time_functions.C	/^float_sw4 C6SmoothBump(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
C6SmoothBump	src/time_functions_cu.C	/^__host__ __device__ float_sw4 C6SmoothBump(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
C6SmoothBump_f	src/dgmodule.f90	/^  real(dp) function C6SmoothBump_f(/;"	f	module:dgmodule
C6SmoothBump_om	src/time_functions.C	/^float_sw4 C6SmoothBump_om(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
C6SmoothBump_om	src/time_functions_cu.C	/^__host__ __device__ float_sw4 C6SmoothBump_om(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
C6SmoothBump_omom	src/time_functions.C	/^float_sw4 C6SmoothBump_omom(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
C6SmoothBump_omom	src/time_functions_cu.C	/^__host__ __device__ float_sw4 C6SmoothBump_omom(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
C6SmoothBump_omtt	src/time_functions.C	/^float_sw4 C6SmoothBump_omtt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
C6SmoothBump_omtt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 C6SmoothBump_omtt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
C6SmoothBump_t	src/time_functions.C	/^float_sw4 C6SmoothBump_t(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
C6SmoothBump_t	src/time_functions_cu.C	/^__host__ __device__ float_sw4 C6SmoothBump_t(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
C6SmoothBump_tom	src/time_functions.C	/^float_sw4 C6SmoothBump_tom(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
C6SmoothBump_tom	src/time_functions_cu.C	/^__host__ __device__ float_sw4 C6SmoothBump_tom(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
C6SmoothBump_tt	src/time_functions.C	/^float_sw4 C6SmoothBump_tt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
C6SmoothBump_tt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 C6SmoothBump_tt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
C6SmoothBump_ttomom	src/time_functions.C	/^float_sw4 C6SmoothBump_ttomom(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
C6SmoothBump_ttomom	src/time_functions_cu.C	/^__host__ __device__ float_sw4 C6SmoothBump_ttomom(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
C6SmoothBump_ttt	src/time_functions.C	/^float_sw4 C6SmoothBump_ttt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
C6SmoothBump_ttt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 C6SmoothBump_ttt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
C6SmoothBump_tttom	src/time_functions.C	/^float_sw4 C6SmoothBump_tttom(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
C6SmoothBump_tttom	src/time_functions_cu.C	/^__host__ __device__ float_sw4 C6SmoothBump_tttom(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
C6SmoothBump_tttt	src/time_functions.C	/^float_sw4 C6SmoothBump_tttt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
C6SmoothBump_tttt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 C6SmoothBump_tttt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
C6SmoothBump_x_T_Integral	src/EW.C	/^float_sw4 EW::C6SmoothBump_x_T_Integral(float_sw4 t, float_sw4 R, float_sw4 alpha, float_sw4 beta)$/;"	f	class:EW
C6SmoothBump_x_T_Integral_f	src/dgmodule.f90	/^  real(kind = dp) function C6SmoothBump_x_T_Integral_f(/;"	f	module:dgmodule
CC	Makefile	/^  CC = icc$/;"	m
CC	tests/testil/makefile	/^CC = icc$/;"	m
CFLAGS	Makefile	/^   CFLAGS    = -g$/;"	m
CFLAGS	Makefile	/^   CFLAGS   = $(OPT)$/;"	m
CFLAGS	tests/testil/makefile	/^CFLAGS =  -O2 -Wall $/;"	m
CHECK_ERROR	src/EW_cuda.C	43;"	d	file:
CHECK_ERROR	src/EW_cuda.C	49;"	d	file:
CHECK_INPUT	src/Require.h	62;"	d
CHECK_INPUT	src/Require.h	70;"	d
CHECK_INPUT2	src/Require.h	66;"	d
CHECK_INPUT2	src/Require.h	78;"	d
COBJ	tests/testil/makefile	/^COBJ = rhs4sg.o rhs4sg_rev.o gettimec.o grid-utilities.o rhs4sgcurv.o rhs4sgcurv_rev.o metricC.o \\$/;"	m
CURVILINEAR4SG	src/curvilinear4sg.f	/^      subroutine CURVILINEAR4SG(/;"	s
CURVILINEAR4SG	tests/testil/curvilinear4sg.f	/^      subroutine CURVILINEAR4SG(/;"	s
CXX	Makefile	/^  CXX = CC$/;"	m
CXX	Makefile	/^  CXX = mpic++$/;"	m
CXX	Makefile	/^  CXX = mpicc_icc$/;"	m
CXX	Makefile	/^  CXX = mpicxx$/;"	m
CXX	Makefile	/^  CXX = mpiicpc$/;"	m
CXX	tests/testil/makefile	/^CXX= icpc$/;"	m
CXXFLAGS	Makefile	/^   CXXFLAGS  = -g -I..\/src -DBZ_DEBUG$/;"	m
CXXFLAGS	Makefile	/^   CXXFLAGS = $(OPT) -I..\/src$/;"	m
CXXFLAGS	tests/testil/makefile	/^CXXFLAGS =-O2 -Wall $/;"	m
CartesianGrid	src/EW.h	/^   enum InputMode { UNDEFINED, Efile, GaussianHill, GridFile, CartesianGrid, TopoImage, Rfile};$/;"	e	enum:EW::InputMode
CheckCudaCall	src/EW.C	/^void EW::CheckCudaCall(cudaError_t command, const char * commandName, const char * fileName, int line)$/;"	f	class:EW
CheckPoint	src/CheckPoint.C	/^CheckPoint::CheckPoint( EW* a_ew, string fname, size_t bufsize ) :$/;"	f	class:CheckPoint
CheckPoint	src/CheckPoint.C	/^CheckPoint::CheckPoint( EW* a_ew,$/;"	f	class:CheckPoint
CheckPoint	src/CheckPoint.h	/^class CheckPoint$/;"	c
Comminfo	src/Parallel_IO.C	/^Comminfo::Comminfo()$/;"	f	class:Comminfo
Comminfo	src/Parallel_IO.h	/^class Comminfo$/;"	c
Curl	src/TimeSeries.h	/^  enum receiverMode{Displacement, Div, Curl, Strains, Velocity, DisplacementGradient \/*, DivVelo, CurlVelo, StrainsVelo *\/ };$/;"	e	enum:TimeSeries::receiverMode
DBC_ASSERTION	src/Require.h	84;"	d
DBrune	src/time_functions.C	/^float_sw4 DBrune( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
DBrune	src/time_functions_cu.C	/^__host__ __device__ float_sw4 DBrune( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
DBrune_om	src/time_functions.C	/^float_sw4 DBrune_om( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
DBrune_om	src/time_functions_cu.C	/^__host__ __device__ float_sw4 DBrune_om( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
DBrune_omtt	src/time_functions.C	/^float_sw4 DBrune_omtt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
DBrune_omtt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 DBrune_omtt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
DBrune_t	src/time_functions.C	/^float_sw4 DBrune_t( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
DBrune_t	src/time_functions_cu.C	/^__host__ __device__ float_sw4 DBrune_t( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
DBrune_tt	src/time_functions.C	/^float_sw4 DBrune_tt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
DBrune_tt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 DBrune_tt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
DBrune_ttt	src/time_functions.C	/^float_sw4 DBrune_ttt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
DBrune_ttt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 DBrune_ttt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
DEBUG_CUDA	src/EW_cuda.C	41;"	d	file:
DIAMETER	src/EWCuda.h	56;"	d
Dirac	src/time_functions.C	/^float_sw4 Dirac( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Dirac	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Dirac( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Dirac_om	src/time_functions.C	/^float_sw4 Dirac_om( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Dirac_om	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Dirac_om( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Dirac_omom	src/time_functions.C	/^float_sw4 Dirac_omom( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Dirac_omom	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Dirac_omom( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Dirac_omtt	src/time_functions.C	/^float_sw4 Dirac_omtt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Dirac_omtt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Dirac_omtt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Dirac_t	src/time_functions.C	/^float_sw4 Dirac_t( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Dirac_t	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Dirac_t( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Dirac_tom	src/time_functions.C	/^float_sw4 Dirac_tom( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Dirac_tom	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Dirac_tom( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Dirac_tt	src/time_functions.C	/^float_sw4 Dirac_tt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Dirac_tt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Dirac_tt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Dirac_ttomom	src/time_functions.C	/^float_sw4 Dirac_ttomom( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Dirac_ttomom	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Dirac_ttomom( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Dirac_ttt	src/time_functions.C	/^float_sw4 Dirac_ttt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Dirac_ttt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Dirac_ttt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Dirac_tttom	src/time_functions.C	/^float_sw4 Dirac_tttom( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Dirac_tttom	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Dirac_tttom( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Dirac_tttt	src/time_functions.C	/^float_sw4 Dirac_tttt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Dirac_tttt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Dirac_tttt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Discrete	src/time_functions.C	/^float_sw4 Discrete( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Discrete	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Discrete( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Discrete_om	src/time_functions.C	/^float_sw4 Discrete_om( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Discrete_om	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Discrete_om( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Discrete_omom	src/time_functions.C	/^float_sw4 Discrete_omom( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Discrete_omom	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Discrete_omom( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Discrete_omtt	src/time_functions.C	/^float_sw4 Discrete_omtt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Discrete_omtt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Discrete_omtt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Discrete_t	src/time_functions.C	/^float_sw4 Discrete_t( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Discrete_t	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Discrete_t( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Discrete_tom	src/time_functions.C	/^float_sw4 Discrete_tom( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Discrete_tom	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Discrete_tom( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Discrete_tt	src/time_functions.C	/^float_sw4 Discrete_tt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Discrete_tt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Discrete_tt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Discrete_ttomom	src/time_functions.C	/^float_sw4 Discrete_ttomom( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Discrete_ttomom	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Discrete_ttomom( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Discrete_ttt	src/time_functions.C	/^float_sw4 Discrete_ttt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Discrete_ttt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Discrete_ttt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Discrete_tttom	src/time_functions.C	/^float_sw4 Discrete_tttom( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Discrete_tttom	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Discrete_tttom( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Discrete_tttt	src/time_functions.C	/^float_sw4 Discrete_tttt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Discrete_tttt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Discrete_tttt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Displacement	src/TimeSeries.h	/^  enum receiverMode{Displacement, Div, Curl, Strains, Velocity, DisplacementGradient \/*, DivVelo, CurlVelo, StrainsVelo *\/ };$/;"	e	enum:TimeSeries::receiverMode
DisplacementGradient	src/TimeSeries.h	/^  enum receiverMode{Displacement, Div, Curl, Strains, Velocity, DisplacementGradient \/*, DivVelo, CurlVelo, StrainsVelo *\/ };$/;"	e	enum:TimeSeries::receiverMode
Div	src/TimeSeries.h	/^  enum receiverMode{Displacement, Div, Curl, Strains, Velocity, DisplacementGradient \/*, DivVelo, CurlVelo, StrainsVelo *\/ };$/;"	e	enum:TimeSeries::receiverMode
EVAL_LEGENDRE	src/dgmodule.f90	/^  SUBROUTINE EVAL_LEGENDRE(/;"	s	module:dgmodule
EW	src/EW.C	/^EW::EW( const string& filename ) :$/;"	f	class:EW
EW	src/EW.h	/^class EW$/;"	c
EWCuda	src/EWCuda.C	/^EWCuda::EWCuda( int ndevice, int nstream )$/;"	f	class:EWCuda
EWCuda	src/EWCuda.h	/^class EWCuda $/;"	c
EW_SARRAY_H	src/Sarray.h	34;"	d
EW_SOURCE_H	src/Source.h	34;"	d
EW_TIMEFUNCTIONS_H	src/time_functions.h	33;"	d
EW_TIMEFUNCTIONS_H	src/time_functions_cu.h	33;"	d
EW_WPPPIO_H	src/Parallel_IO.h	34;"	d
EXTRA_CXX_FLAGS	Makefile	/^  EXTRA_CXX_FLAGS = -xCORE-AVX2$/;"	m
EXTRA_CXX_FLAGS	Makefile	/^  EXTRA_CXX_FLAGS = -xmic-avx2$/;"	m
EXTRA_CXX_FLAGS	Makefile	/^  EXTRA_CXX_FLAGS = -xmic-avx512$/;"	m
EXTRA_C_FLAGS	Makefile	/^  EXTRA_C_FLAGS = -xmic-avx512$/;"	m
EXTRA_FORT_FLAGS	Makefile	/^  EXTRA_FORT_FLAGS = -xCORE-AVX2$/;"	m
EXTRA_FORT_FLAGS	Makefile	/^  EXTRA_FORT_FLAGS = -xmic-avx512 $/;"	m
EXTRA_FORT_FLAGS	Makefile	/^  EXTRA_FORT_FLAGS = -xmic-avx512,core-avx2$/;"	m
EXTRA_LINK_FLAGS	Makefile	/^  EXTRA_LINK_FLAGS =  -lpthread -lm -ldl -lifcore$/;"	m
EXTRA_LINK_FLAGS	Makefile	/^  EXTRA_LINK_FLAGS = -Wl,-rpath=$(SW4ROOT)\/lib -Wl,-rpath=${MKL_PATH} -L${MKL_PATH} -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -lm -ldl -lifcore$/;"	m
EXTRA_LINK_FLAGS	Makefile	/^  EXTRA_LINK_FLAGS = -Wl,-rpath=$(SW4ROOT)\/lib -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -lm -ldl -lifcore$/;"	m
EXTRA_LINK_FLAGS	Makefile	/^  EXTRA_LINK_FLAGS = -Wl,-rpath=${MKL_PATH} -Wl,-rpath=${BASIC_PATH} -L${MKL_PATH} -lmkl_intel_lp64 -lmkl_core -lmkl_sequential -lpthread -lm -ldl -Wl,-rpath=${OTHER_PATH} -L${OTHER_PATH} -lifcore -L${BASIC_PATH} -limf -lsvml -lintlc$/;"	m
EXTRA_LINK_FLAGS	Makefile	/^  EXTRA_LINK_FLAGS = -framework Accelerate -lomp -L\/usr\/local\/Cellar\/gcc\/8.2.0\/lib\/gcc\/8 -lgfortran$/;"	m
EXTRA_LINK_FLAGS	Makefile	/^  EXTRA_LINK_FLAGS = -lblas -llapack -lifcore$/;"	m
EXTRA_LINK_FLAGS	Makefile	/^  EXTRA_LINK_FLAGS = -lgfortran  -llapack -lblas$/;"	m
EXTRA_LINK_FLAGS	Makefile	/^  EXTRA_LINK_FLAGS = -lgfortran -lblas -llapack$/;"	m
EXTRA_LINK_FLAGS	Makefile	/^  EXTRA_LINK_FLAGS = -lifcore -lblas -llapack$/;"	m
Efile	src/EW.h	/^   enum InputMode { UNDEFINED, Efile, GaussianHill, GridFile, CartesianGrid, TopoImage, Rfile};$/;"	e	enum:EW::InputMode
Erf	src/time_functions.C	/^float_sw4 Erf( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Erf	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Erf( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Erf_om	src/time_functions.C	/^float_sw4 Erf_om(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Erf_om	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Erf_om(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Erf_omtt	src/time_functions.C	/^float_sw4 Erf_omtt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Erf_omtt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Erf_omtt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Erf_t	src/time_functions.C	/^float_sw4 Erf_t(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Erf_t	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Erf_t(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Erf_tt	src/time_functions.C	/^float_sw4 Erf_tt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Erf_tt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Erf_tt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Erf_ttt	src/time_functions.C	/^float_sw4 Erf_ttt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Erf_ttt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Erf_ttt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
F77_FUNC	src/F77_FUNC.h	45;"	d
F77_FUNC	src/F77_FUNC.h	50;"	d
F77_FUNC	src/F77_FUNC.h	54;"	d
F77_FUNC	src/F77_FUNC.h	60;"	d
F77_FUNC	src/F77_FUNC.h	64;"	d
F77_FUNC	src/F77_FUNC.h	70;"	d
F77_FUNC_H	src/F77_FUNC.h	33;"	d
FC	Makefile	/^  FC  = mpif90$/;"	m
FC	Makefile	/^  FC = ftn$/;"	m
FC	Makefile	/^  FC = mpif90$/;"	m
FC	Makefile	/^  FC = mpif90_ifort$/;"	m
FC	Makefile	/^  FC = mpiifort$/;"	m
FC	tests/testil/makefile	/^FC = ifort$/;"	m
FFLAGS	Makefile	/^   FFLAGS    = -g $/;"	m
FFLAGS	Makefile	/^   FFLAGS   = $(OPT)$/;"	m
FFLAGS	tests/testil/makefile	/^FFLAGS =  -O2 -warn all $/;"	m
FILTER_H	src/Filter.h	34;"	d
FMODS	Makefile	/^FMODS = type_defs.mod$/;"	m
FOBJ	Makefile	/^FOBJ = $(addprefix $(builddir)\/,$(OBJ))$/;"	m
FOBJ	tests/testil/makefile	/^FOBJ = rhs4th3fortsgstr.o boundaryOp.o curvilinear4sg.o metric.o addsgd4.o$/;"	m
FOBJ2	Makefile	/^FOBJ2 = $(addprefix $(builddir)\/,$(OBJ2))$/;"	m
FOROBJ	Makefile	/^FOROBJ = rhs4th3fort.o boundaryOp.o addsgd.o solerr3.o bcfort.o type_defs.o lglnodes.o dgmodule.o metric.o curvilinear4sg.o freesurfcurvisg.o$/;"	m
FREESURFCURVISG	src/freesurfcurvisg.f	/^      subroutine FREESURFCURVISG(/;"	s
False	src/sacsubc.h	39;"	d
Filter	src/Filter.C	/^Filter::Filter(FilterType type, unsigned int numberOfPoles, unsigned int numberOfPasses, float_sw4 f1, float_sw4 f2)$/;"	f	class:Filter
Filter	src/Filter.h	/^class Filter{$/;"	c
FilterType	src/Filter.h	/^enum FilterType{lowPass, bandPass};$/;"	g
Force	src/EW.C	/^void EW::Force(float_sw4 a_t, vector<Sarray> & a_F, vector<GridPointSource*> point_sources,$/;"	f	class:EW
ForceCU	src/EW_cuda.C	/^void EW::ForceCU( float_sw4 t, Sarray* dev_F, bool tt, int st )$/;"	f	class:EW
GETBOP4S2	src/boundaryOp.f	/^      subroutine GETBOP4S2(/;"	s
GETBOP4S2	tests/testil/boundaryOp.f	/^      subroutine GETBOP4S2(/;"	s
GRIDINFO	src/metric.f	/^      subroutine GRIDINFO(/;"	s
GRID_POINT_SOURCE_H	src/GridPointSource.h	34;"	d
Gaussian	src/EW.C	/^float_sw4 EW::Gaussian(float_sw4 t, float_sw4 R, float_sw4 c, float_sw4 f )$/;"	f	class:EW
Gaussian	src/time_functions.C	/^float_sw4 Gaussian(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Gaussian	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Gaussian(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
GaussianHill	src/EW.h	/^   enum InputMode { UNDEFINED, Efile, GaussianHill, GridFile, CartesianGrid, TopoImage, Rfile};$/;"	e	enum:EW::InputMode
GaussianWindow	src/time_functions.C	/^float_sw4 GaussianWindow( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
GaussianWindow	src/time_functions_cu.C	/^__host__ __device__ float_sw4 GaussianWindow( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
GaussianWindow_om	src/time_functions.C	/^float_sw4 GaussianWindow_om( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
GaussianWindow_om	src/time_functions_cu.C	/^__host__ __device__ float_sw4 GaussianWindow_om( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
GaussianWindow_omtt	src/time_functions.C	/^float_sw4 GaussianWindow_omtt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
GaussianWindow_omtt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 GaussianWindow_omtt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
GaussianWindow_t	src/time_functions.C	/^float_sw4 GaussianWindow_t( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
GaussianWindow_t	src/time_functions_cu.C	/^__host__ __device__ float_sw4 GaussianWindow_t( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
GaussianWindow_tt	src/time_functions.C	/^float_sw4 GaussianWindow_tt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
GaussianWindow_tt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 GaussianWindow_tt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
GaussianWindow_ttt	src/time_functions.C	/^float_sw4 GaussianWindow_ttt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
GaussianWindow_ttt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 GaussianWindow_ttt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Gaussian_om	src/time_functions.C	/^float_sw4 Gaussian_om(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Gaussian_om	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Gaussian_om(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Gaussian_omom	src/time_functions.C	/^float_sw4 Gaussian_omom(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Gaussian_omom	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Gaussian_omom(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Gaussian_omtt	src/time_functions.C	/^float_sw4 Gaussian_omtt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Gaussian_omtt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Gaussian_omtt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Gaussian_t	src/time_functions.C	/^float_sw4 Gaussian_t(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Gaussian_t	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Gaussian_t(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Gaussian_tom	src/time_functions.C	/^float_sw4 Gaussian_tom(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Gaussian_tom	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Gaussian_tom(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Gaussian_tt	src/time_functions.C	/^float_sw4 Gaussian_tt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Gaussian_tt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Gaussian_tt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Gaussian_ttomom	src/time_functions.C	/^float_sw4 Gaussian_ttomom(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Gaussian_ttomom	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Gaussian_ttomom(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Gaussian_ttt	src/time_functions.C	/^float_sw4 Gaussian_ttt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Gaussian_ttt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Gaussian_ttt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Gaussian_tttom	src/time_functions.C	/^float_sw4 Gaussian_tttom(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Gaussian_tttom	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Gaussian_tttom(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Gaussian_tttt	src/time_functions.C	/^float_sw4 Gaussian_tttt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Gaussian_tttt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Gaussian_tttt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Gaussian_x_T_Integral	src/EW.C	/^float_sw4 EW::Gaussian_x_T_Integral(float_sw4 t, float_sw4 R, float_sw4 f, float_sw4 alpha, float_sw4 beta)$/;"	f	class:EW
GetStencilCoefficients	src/ew-cfromfort.C	/^void EW::GetStencilCoefficients( float_sw4* _acof, float_sw4* _ghcof,$/;"	f	class:EW
GridFile	src/EW.h	/^   enum InputMode { UNDEFINED, Efile, GaussianHill, GridFile, CartesianGrid, TopoImage, Rfile};$/;"	e	enum:EW::InputMode
GridPointSource	src/GridPointSource.C	/^GridPointSource::GridPointSource( float_sw4 frequency, float_sw4 t0,$/;"	f	class:GridPointSource
GridPointSource	src/GridPointSource.C	/^GridPointSource::GridPointSource()$/;"	f	class:GridPointSource
GridPointSource	src/GridPointSource.h	/^class GridPointSource$/;"	c
HDIRICHLET5	src/bcfort.f	/^      subroutine HDIRICHLET5(/;"	s
HOSTNAME	Makefile	/^HOSTNAME := $(shell hostname)$/;"	m
HaloToBufferKernelX_dev	src/device-routines.C	/^__global__ void HaloToBufferKernelX_dev(float_sw4* block_left, float_sw4* block_right,$/;"	f
HaloToBufferKernelX_dev_rev	src/device-routines.C	/^__global__ void HaloToBufferKernelX_dev_rev(float_sw4* block_left, float_sw4* block_right,$/;"	f
HaloToBufferKernelY_dev	src/device-routines.C	/^__global__ void HaloToBufferKernelY_dev(float_sw4* block_up, float_sw4* block_down,$/;"	f
HaloToBufferKernelY_dev_rev	src/device-routines.C	/^__global__ void HaloToBufferKernelY_dev_rev(float_sw4* block_up, float_sw4* block_down,$/;"	f
HaloToBufferKernel_dev	src/device-routines.C	/^__global__ void HaloToBufferKernel_dev(float_sw4* block_left, float_sw4* block_right, float_sw4* block_up, float_sw4* block_down,$/;"	f
HaloToBufferKernel_dev_rev	src/device-routines.C	/^__global__ void HaloToBufferKernel_dev_rev(float_sw4* block_left, float_sw4* block_right, float_sw4* block_up, float_sw4* block_down,$/;"	f
HaloToBufferKernel_dev_rev_v2	src/device-routines.C	/^__global__ void HaloToBufferKernel_dev_rev_v2(float_sw4* block_left, float_sw4* block_right, $/;"	f
IBMF77FLAG	Makefile	/^   IBMF77FLAG = -qfixed$/;"	m
INT	src/sacsubc.h	42;"	d
INT	src/sacsubc.h	44;"	d
InputMode	src/EW.h	/^   enum InputMode { UNDEFINED, Efile, GaussianHill, GridFile, CartesianGrid, TopoImage, Rfile};$/;"	g	class:EW
Istr	src/sacsubc.C	/^const char *Istr[] = {$/;"	v
Liu	src/time_functions.C	/^float_sw4 Liu( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Liu	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Liu( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Liu_om	src/time_functions.C	/^float_sw4 Liu_om( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Liu_om	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Liu_om( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Liu_omtt	src/time_functions.C	/^float_sw4 Liu_omtt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Liu_omtt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Liu_omtt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Liu_t	src/time_functions.C	/^float_sw4 Liu_t( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Liu_t	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Liu_t( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Liu_tt	src/time_functions.C	/^float_sw4 Liu_tt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Liu_tt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Liu_tt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Liu_ttt	src/time_functions.C	/^float_sw4 Liu_ttt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Liu_ttt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Liu_ttt( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
MATERIALBLOCK_H	src/MaterialBlock.h	34;"	d
MATERIALDATA_H	src/MaterialData.h	34;"	d
METRIC	src/metric.f	/^      subroutine METRIC(/;"	s
METRIC	tests/testil/metric.f	/^      subroutine METRIC(/;"	s
METRICEXGH	src/metric.f	/^      subroutine METRICEXGH(/;"	s
METRICEXGH	tests/testil/metric.f	/^      subroutine METRICEXGH(/;"	s
MKL_PATH	Makefile	/^  MKL_PATH = \/opt\/intel\/compilers_and_libraries_2017\/linux\/mkl\/lib\/intel64$/;"	m
MKL_PATH	Makefile	/^  MKL_PATH = \/usr\/common\/software\/intel\/compilers_and_libraries_2016.3.210\/linux\/mkl\/lib\/intel64$/;"	m
MaterialBlock	src/MaterialBlock.C	/^MaterialBlock::MaterialBlock( EW * a_ew, float_sw4 rho, float_sw4 vs, float_sw4 vp, float_sw4 xmin, $/;"	f	class:MaterialBlock
MaterialBlock	src/MaterialBlock.h	/^class MaterialBlock : public MaterialData$/;"	c
MaterialData	src/MaterialData.C	/^MaterialData::MaterialData()$/;"	f	class:MaterialData
MaterialData	src/MaterialData.h	/^class MaterialData$/;"	c
NCSTR	src/sacsubc.C	/^static int NCSTR=24;$/;"	v	file:
NESTR	src/sacsubc.C	/^static int NESTR=50;$/;"	v	file:
NISTR	src/sacsubc.C	/^static int NISTR=40;$/;"	v	file:
NIVAL	src/sacsubc.C	/^static int NIVAL=50;$/;"	v	file:
NRSTR	src/sacsubc.C	/^static int  NRSTR=70;$/;"	v	file:
NullFunc	src/time_functions.C	/^float_sw4 NullFunc( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
NullFunc	src/time_functions_cu.C	/^__host__ __device__ float_sw4 NullFunc( float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
OBJ	Makefile	/^OBJ  = main.o EW.o Sarray.o Source.o SuperGrid.o GridPointSource.o time_functions.o EW_cuda.o ew-cfromfort.o rhs4sg.o rhs4sg_rev.o EWCuda.o CheckPoint.o Parallel_IO.o EW-dg.o MaterialData.o MaterialBlock.o Polynomial.o SecondOrderSection.o Filter.o TimeSeries.o sacsubc.o curvilinear-c.o rhs4sgcurv.o rhs4sgcurv_rev.o$/;"	m
OBJ2	Makefile	/^OBJ2 =  testil.o rhs4sg.o rhs4sg_rev.o gettimec.o rhs4th3fort.o boundaryOp.o$/;"	m
OMPOPT	Makefile	/^  OMPOPT = -Xpreprocessor -fopenmp$/;"	m
OMPOPT	Makefile	/^  OMPOPT = -fopenmp$/;"	m
OMPOPT	Makefile	/^  OMPOPT = -qopenmp$/;"	m
OMPOPT	tests/testil/makefile	/^OMPOPT = -qopenmp$/;"	m
OPT	Makefile	/^  OPT = -O3 -qoverride-limits$/;"	m
OPT	Makefile	/^OPT = -O3$/;"	m
OTHER_PATH	Makefile	/^  OTHER_PATH = \/opt\/intel\/compilers_and_libraries_2017\/linux\/lib\/intel64$/;"	m
PMODS	Makefile	/^PMODS  = $(addprefix $(builddir)\/,$(FMODS))$/;"	m
POLYNOMIAL_H	src/Polynomial.h	34;"	d
Parallel_IO	src/Parallel_IO.C	/^Parallel_IO::Parallel_IO( int iwrite, int pfs, int globalsizes[3], int localsizes[3],$/;"	f	class:Parallel_IO
Parallel_IO	src/Parallel_IO.h	/^class Parallel_IO$/;"	c
Polynomial	src/Polynomial.C	/^Polynomial::Polynomial()$/;"	f	class:Polynomial
Polynomial	src/Polynomial.C	/^Polynomial::Polynomial(float_sw4 c[3])$/;"	f	class:Polynomial
Polynomial	src/Polynomial.h	/^class Polynomial{$/;"	c
Psi0	src/SuperGrid.C	/^float_sw4 SuperGrid::Psi0(float_sw4 xi) const$/;"	f	class:SuperGrid
PsiAux	src/SuperGrid.C	/^float_sw4 SuperGrid::PsiAux(float_sw4 x) const$/;"	f	class:SuperGrid
PsiDamp	src/SuperGrid.C	/^float_sw4 SuperGrid::PsiDamp(float_sw4 x) const$/;"	f	class:SuperGrid
RADIUS	src/EWCuda.h	55;"	d
RAJA_LOCATION	Makefile	/^  RAJA_LOCATION=\/g\/g12\/andersp\/src\/RAJA\/install\/usr\/local$/;"	m
REQUIRE	src/Require.h	105;"	d
REQUIRE	src/Require.h	113;"	d
REQUIRE2	src/Require.h	54;"	d
REQUIRE2	src/Require.h	95;"	d
REQUIRE_H	src/Require.h	33;"	d
RHS4_BLOCKX	src/EWCuda.h	57;"	d
RHS4_BLOCKY	src/EWCuda.h	58;"	d
RHSCorrCU_boundary	src/EW_cuda.C	/^void EW::RHSCorrCU_boundary(vector<Sarray> & a_Up, vector<Sarray> & a_U,$/;"	f	class:EW
RHSCorrCU_center	src/EW_cuda.C	/^void EW::RHSCorrCU_center(vector<Sarray> & a_Up, vector<Sarray> & a_U,$/;"	f	class:EW
RHSPredCU_boundary	src/EW_cuda.C	/^void EW::RHSPredCU_boundary(vector<Sarray> & a_Up, vector<Sarray> & a_U, vector<Sarray> & a_Um,$/;"	f	class:EW
RHSPredCU_center	src/EW_cuda.C	/^void EW::RHSPredCU_center(vector<Sarray> & a_Up, vector<Sarray> & a_U, vector<Sarray> & a_Um,$/;"	f	class:EW
Ramp	src/time_functions.C	/^float_sw4 Ramp(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Ramp	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Ramp(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Ramp_om	src/time_functions.C	/^float_sw4 Ramp_om(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Ramp_om	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Ramp_om(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Ramp_omtt	src/time_functions.C	/^float_sw4 Ramp_omtt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Ramp_omtt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Ramp_omtt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Ramp_t	src/time_functions.C	/^float_sw4 Ramp_t(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Ramp_t	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Ramp_t(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Ramp_tt	src/time_functions.C	/^float_sw4 Ramp_tt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Ramp_tt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Ramp_tt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Ramp_ttt	src/time_functions.C	/^float_sw4 Ramp_ttt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Ramp_ttt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Ramp_ttt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Rfile	src/EW.h	/^   enum InputMode { UNDEFINED, Efile, GaussianHill, GridFile, CartesianGrid, TopoImage, Rfile};$/;"	e	enum:EW::InputMode
RickerInt	src/time_functions.C	/^float_sw4 RickerInt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
RickerInt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 RickerInt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
RickerInt_om	src/time_functions.C	/^float_sw4 RickerInt_om(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
RickerInt_om	src/time_functions_cu.C	/^__host__ __device__ float_sw4 RickerInt_om(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
RickerInt_omtt	src/time_functions.C	/^float_sw4 RickerInt_omtt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
RickerInt_omtt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 RickerInt_omtt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
RickerInt_t	src/time_functions.C	/^float_sw4 RickerInt_t(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
RickerInt_t	src/time_functions_cu.C	/^__host__ __device__ float_sw4 RickerInt_t(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
RickerInt_tt	src/time_functions.C	/^float_sw4 RickerInt_tt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
RickerInt_tt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 RickerInt_tt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
RickerInt_ttt	src/time_functions.C	/^float_sw4 RickerInt_ttt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
RickerInt_ttt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 RickerInt_ttt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
RickerWavelet	src/time_functions.C	/^float_sw4 RickerWavelet(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
RickerWavelet	src/time_functions_cu.C	/^__host__ __device__ float_sw4 RickerWavelet(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
RickerWavelet_om	src/time_functions.C	/^float_sw4 RickerWavelet_om(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
RickerWavelet_om	src/time_functions_cu.C	/^__host__ __device__ float_sw4 RickerWavelet_om(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
RickerWavelet_omtt	src/time_functions.C	/^float_sw4 RickerWavelet_omtt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
RickerWavelet_omtt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 RickerWavelet_omtt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
RickerWavelet_t	src/time_functions.C	/^float_sw4 RickerWavelet_t(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
RickerWavelet_t	src/time_functions_cu.C	/^__host__ __device__ float_sw4 RickerWavelet_t(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
RickerWavelet_tt	src/time_functions.C	/^float_sw4 RickerWavelet_tt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
RickerWavelet_tt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 RickerWavelet_tt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
RickerWavelet_ttt	src/time_functions.C	/^float_sw4 RickerWavelet_ttt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
RickerWavelet_ttt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 RickerWavelet_ttt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
SACSUB_C	src/sacsubc.C	33;"	d	file:
SECOND_ORDER_SECTION_H	src/SecondOrderSection.h	34;"	d
SOLVEATTFREEAC	src/rhs4th3fort.f	/^      subroutine SOLVEATTFREEAC(/;"	s
SOLVEATTFREEC	src/rhs4th3fort.f	/^      subroutine SOLVEATTFREEC(/;"	s
SQR	src/EW.C	5064;"	d	file:
SQR	src/EW.C	5130;"	d	file:
SQR	src/EW.C	6090;"	d	file:
SQR	src/EW.C	6123;"	d	file:
SQR	src/Source.C	49;"	d	file:
SUPERGRID_H	src/SuperGrid.h	34;"	d
SW4_CHECKPOINT_H	src/CheckPoint.h	33;"	d
SW4_EW	src/EW.h	33;"	d
SW4_EWCUDA	src/EWCuda.h	33;"	d
SW4_H	src/double/sw4.h	33;"	d
SW4_H	src/float/sw4.h	33;"	d
SW4_H	tests/testil/sw4.h	2;"	d
SW4_HDDECLARE	src/Sarray.h	49;"	d
SW4_HDDECLARE	src/Sarray.h	51;"	d
SWTP	src/EW.C	/^float_sw4 EW::SWTP(float_sw4 Lim, float_sw4 t)$/;"	f	class:EW
SafeCudaCall	src/EW.h	35;"	d
Sarray	src/Sarray.C	/^Sarray::Sarray( Sarray& u, int nc )$/;"	f	class:Sarray
Sarray	src/Sarray.C	/^Sarray::Sarray( const Sarray& u )$/;"	f	class:Sarray
Sarray	src/Sarray.C	/^Sarray::Sarray( int ibeg, int iend, int jbeg, int jend, int kbeg, int kend )$/;"	f	class:Sarray
Sarray	src/Sarray.C	/^Sarray::Sarray( int iend, int jend, int kend )$/;"	f	class:Sarray
Sarray	src/Sarray.C	/^Sarray::Sarray( int nc, int ibeg, int iend, int jbeg, int jend, int kbeg, int kend )$/;"	f	class:Sarray
Sarray	src/Sarray.C	/^Sarray::Sarray( int nc, int iend, int jend, int kend )$/;"	f	class:Sarray
Sarray	src/Sarray.C	/^Sarray::Sarray()$/;"	f	class:Sarray
Sarray	src/Sarray.h	/^class Sarray$/;"	c
Sawtooth	src/time_functions.C	/^float_sw4 Sawtooth(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Sawtooth	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Sawtooth(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Sawtooth_om	src/time_functions.C	/^float_sw4 Sawtooth_om(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Sawtooth_om	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Sawtooth_om(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Sawtooth_omtt	src/time_functions.C	/^float_sw4 Sawtooth_omtt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Sawtooth_omtt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Sawtooth_omtt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Sawtooth_t	src/time_functions.C	/^float_sw4 Sawtooth_t(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Sawtooth_t	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Sawtooth_t(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Sawtooth_tt	src/time_functions.C	/^float_sw4 Sawtooth_tt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Sawtooth_tt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Sawtooth_tt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Sawtooth_ttt	src/time_functions.C	/^float_sw4 Sawtooth_ttt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Sawtooth_ttt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Sawtooth_ttt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
SecondOrderSection	src/SecondOrderSection.C	/^SecondOrderSection::SecondOrderSection()$/;"	f	class:SecondOrderSection
SecondOrderSection	src/SecondOrderSection.C	/^SecondOrderSection::SecondOrderSection(Polynomial &nom, Polynomial &denom)$/;"	f	class:SecondOrderSection
SecondOrderSection	src/SecondOrderSection.h	/^class SecondOrderSection{$/;"	c
SmoothWave	src/EW.C	/^float_sw4 EW::SmoothWave(float_sw4 t, float_sw4 R, float_sw4 c)$/;"	f	class:EW
SmoothWave	src/time_functions.C	/^float_sw4 SmoothWave(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
SmoothWave	src/time_functions_cu.C	/^__host__ __device__ float_sw4 SmoothWave(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
SmoothWave_om	src/time_functions.C	/^float_sw4 SmoothWave_om(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
SmoothWave_om	src/time_functions_cu.C	/^__host__ __device__ float_sw4 SmoothWave_om(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
SmoothWave_omtt	src/time_functions.C	/^float_sw4 SmoothWave_omtt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
SmoothWave_omtt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 SmoothWave_omtt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
SmoothWave_t	src/time_functions.C	/^float_sw4 SmoothWave_t(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
SmoothWave_t	src/time_functions_cu.C	/^__host__ __device__ float_sw4 SmoothWave_t(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
SmoothWave_tt	src/time_functions.C	/^float_sw4 SmoothWave_tt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
SmoothWave_tt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 SmoothWave_tt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
SmoothWave_ttt	src/time_functions.C	/^float_sw4 SmoothWave_ttt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
SmoothWave_ttt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 SmoothWave_ttt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
SmoothWave_x_T_Integral	src/EW.C	/^float_sw4 EW::SmoothWave_x_T_Integral(float_sw4 t, float_sw4 R, float_sw4 alpha, float_sw4 beta)$/;"	f	class:EW
Source	src/Source.C	/^Source::Source()$/;"	f	class:Source
Source	src/Source.C	/^Source::Source(EW *a_ew, $/;"	f	class:Source
Source	src/Source.C	/^Source::Source(EW *a_ew, float_sw4 frequency, float_sw4 t0,$/;"	f	class:Source
Source	src/Source.h	/^class Source$/;"	c
Strains	src/TimeSeries.h	/^  enum receiverMode{Displacement, Div, Curl, Strains, Velocity, DisplacementGradient \/*, DivVelo, CurlVelo, StrainsVelo *\/ };$/;"	e	enum:TimeSeries::receiverMode
SuperGrid	src/SuperGrid.C	/^SuperGrid::SuperGrid()$/;"	f	class:SuperGrid
SuperGrid	src/SuperGrid.h	/^class SuperGrid $/;"	c
TIMESERIES_H	src/TimeSeries.h	34;"	d
TWDIRBDRY	src/bcfort.f	/^      subroutine TWDIRBDRY(/;"	s
TWDIRBDRYC	src/bcfort.f	/^      subroutine TWDIRBDRYC(/;"	s
TWFRSURFZ	src/bcfort.f	/^      subroutine TWFRSURFZ(/;"	s
TWFRSURFZATT	src/bcfort.f	/^      subroutine TWFRSURFZATT(/;"	s
TWFRSURFZSGSTR	src/bcfort.f	/^      subroutine TWFRSURFZSGSTR(/;"	s
TWFRSURFZSGSTRATT	src/bcfort.f	/^      subroutine TWFRSURFZSGSTRATT(/;"	s
TWSTENSOR	src/bcfort.f	/^      subroutine TWSTENSOR(/;"	s
TWSTENSORATT	src/bcfort.f	/^      subroutine TWSTENSORATT(/;"	s
TWSTENSORSG	src/bcfort.f	/^      subroutine TWSTENSORSG(/;"	s
TWSTENSORSGATT	src/bcfort.f	/^      subroutine TWSTENSORSGATT(/;"	s
TimeSeries	src/TimeSeries.C	/^TimeSeries::TimeSeries( EW* a_ew, std::string fileName, std::string staName, receiverMode mode, bool sacFormat, bool usgsFormat, $/;"	f	class:TimeSeries
TimeSeries	src/TimeSeries.h	/^class TimeSeries{$/;"	c
TopoImage	src/EW.h	/^   enum InputMode { UNDEFINED, Efile, GaussianHill, GridFile, CartesianGrid, TopoImage, Rfile};$/;"	e	enum:EW::InputMode
Triangle	src/time_functions.C	/^float_sw4 Triangle(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Triangle	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Triangle(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Triangle_om	src/time_functions.C	/^float_sw4 Triangle_om(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Triangle_om	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Triangle_om(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Triangle_omtt	src/time_functions.C	/^float_sw4 Triangle_omtt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Triangle_omtt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Triangle_omtt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Triangle_t	src/time_functions.C	/^float_sw4 Triangle_t(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Triangle_t	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Triangle_t(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Triangle_tt	src/time_functions.C	/^float_sw4 Triangle_tt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Triangle_tt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Triangle_tt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Triangle_ttt	src/time_functions.C	/^float_sw4 Triangle_ttt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
Triangle_ttt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 Triangle_ttt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
True	src/sacsubc.h	38;"	d
UNDEFINED	src/EW.h	/^   enum InputMode { UNDEFINED, Efile, GaussianHill, GridFile, CartesianGrid, TopoImage, Rfile};$/;"	e	enum:EW::InputMode
UX	src/device-routines.C	9389;"	d	file:
VARCOEFFS4	src/boundaryOp.f	/^      subroutine VARCOEFFS4(/;"	s
VARCOEFFS4	tests/testil/boundaryOp.f	/^      subroutine VARCOEFFS4(/;"	s
VERIFY	src/Require.h	109;"	d
VERIFY	src/Require.h	114;"	d
VERIFY2	src/Require.h	58;"	d
VERIFY2	src/Require.h	97;"	d
VSBTP	src/EW.C	/^float_sw4 EW::VSBTP(float_sw4 Lim, float_sw4 t)$/;"	f	class:EW
Velocity	src/TimeSeries.h	/^  enum receiverMode{Displacement, Div, Curl, Strains, Velocity, DisplacementGradient \/*, DivVelo, CurlVelo, StrainsVelo *\/ };$/;"	e	enum:TimeSeries::receiverMode
VerySmoothBump	src/EW.C	/^float_sw4 EW::VerySmoothBump(float_sw4 t, float_sw4 R, float_sw4 c)$/;"	f	class:EW
VerySmoothBump	src/time_functions.C	/^float_sw4 VerySmoothBump(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
VerySmoothBump	src/time_functions_cu.C	/^__host__ __device__ float_sw4 VerySmoothBump(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
VerySmoothBump_om	src/time_functions.C	/^float_sw4 VerySmoothBump_om(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
VerySmoothBump_om	src/time_functions_cu.C	/^__host__ __device__ float_sw4 VerySmoothBump_om(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
VerySmoothBump_omom	src/time_functions.C	/^float_sw4 VerySmoothBump_omom(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
VerySmoothBump_omom	src/time_functions_cu.C	/^__host__ __device__ float_sw4 VerySmoothBump_omom(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
VerySmoothBump_omtt	src/time_functions.C	/^float_sw4 VerySmoothBump_omtt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
VerySmoothBump_omtt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 VerySmoothBump_omtt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
VerySmoothBump_t	src/time_functions.C	/^float_sw4 VerySmoothBump_t(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
VerySmoothBump_t	src/time_functions_cu.C	/^__host__ __device__ float_sw4 VerySmoothBump_t(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
VerySmoothBump_tom	src/time_functions.C	/^float_sw4 VerySmoothBump_tom(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
VerySmoothBump_tom	src/time_functions_cu.C	/^__host__ __device__ float_sw4 VerySmoothBump_tom(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
VerySmoothBump_tt	src/time_functions.C	/^float_sw4 VerySmoothBump_tt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
VerySmoothBump_tt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 VerySmoothBump_tt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
VerySmoothBump_ttomom	src/time_functions.C	/^float_sw4 VerySmoothBump_ttomom(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
VerySmoothBump_ttomom	src/time_functions_cu.C	/^__host__ __device__ float_sw4 VerySmoothBump_ttomom(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
VerySmoothBump_ttt	src/time_functions.C	/^float_sw4 VerySmoothBump_ttt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
VerySmoothBump_ttt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 VerySmoothBump_ttt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
VerySmoothBump_tttom	src/time_functions.C	/^float_sw4 VerySmoothBump_tttom(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
VerySmoothBump_tttom	src/time_functions_cu.C	/^__host__ __device__ float_sw4 VerySmoothBump_tttom(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
VerySmoothBump_tttt	src/time_functions.C	/^float_sw4 VerySmoothBump_tttt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
VerySmoothBump_tttt	src/time_functions_cu.C	/^__host__ __device__ float_sw4 VerySmoothBump_tttt(float_sw4 freq, float_sw4 t, float_sw4* par, int npar, int* ipar, int nipar )$/;"	f
VerySmoothBump_x_T_Integral	src/EW.C	/^float_sw4 EW::VerySmoothBump_x_T_Integral(float_sw4 t, float_sw4 R, float_sw4 alpha, float_sw4 beta)$/;"	f	class:EW
WAVEPROPBOP_4	src/boundaryOp.f	/^      subroutine WAVEPROPBOP_4(/;"	s
WAVEPROPBOP_4	tests/testil/boundaryOp.f	/^      subroutine WAVEPROPBOP_4(/;"	s
WAVEPROPBOP_6	src/boundaryOp.f	/^      subroutine WAVEPROPBOP_6(/;"	s
WAVEPROPBOP_6	tests/testil/boundaryOp.f	/^      subroutine WAVEPROPBOP_6(/;"	s
WPP_BYTESWAPPER_H	src/Byteswapper.h	33;"	d
_SACHDR_H	src/sacsubc.h	33;"	d
a2d	src/Filter.C	/^void Filter::a2d(float_sw4 n[3], float_sw4 d[3], Polynomial &b, Polynomial &a)$/;"	f	class:Filter
acof	src/device-routines.C	1274;"	d	file:
acof	src/device-routines.C	1294;"	d	file:
acof	src/device-routines.C	1580;"	d	file:
acof	src/device-routines.C	5933;"	d	file:
acof	src/device-routines.C	6449;"	d	file:
acof	src/device-routines.C	6467;"	d	file:
acof	src/device-routines.C	6986;"	d	file:
acof	src/device-routines.C	7691;"	d	file:
acof	src/device-routines.C	7966;"	d	file:
acof	src/device-routines.C	7987;"	d	file:
acof	src/device-routines.C	8273;"	d	file:
acof	src/device-routines.C	998;"	d	file:
acof	src/ew-cfromfort.C	1490;"	d	file:
acof	src/ew-cfromfort.C	1936;"	d	file:
acof	src/rhs4sg.C	58;"	d	file:
acof	src/rhs4sg_rev.C	66;"	d	file:
acof	src/rhs4sg_revNW.C	66;"	d	file:
acof	src/rhs4sgcurv.C	1403;"	d	file:
acof	src/rhs4sgcurv.C	81;"	d	file:
acof	src/rhs4sgcurv_rev.C	1392;"	d	file:
acof	src/rhs4sgcurv_rev.C	80;"	d	file:
acof	tests/testil/rhs4sg.c	51;"	d	file:
acof	tests/testil/rhs4sg_rev.c	35;"	d	file:
acof	tests/testil/rhs4sgcurv.C	1372;"	d	file:
acof	tests/testil/rhs4sgcurv.C	50;"	d	file:
acof	tests/testil/rhs4sgcurv_rev.C	1361;"	d	file:
acof	tests/testil/rhs4sgcurv_rev.C	49;"	d	file:
addSuperGridDamping	src/EW.C	/^void EW::addSuperGridDamping(vector<Sarray> & a_Up, vector<Sarray> & a_U,$/;"	f	class:EW
addSuperGridDampingCU	src/EW_cuda.C	/^void EW::addSuperGridDampingCU(vector<Sarray> & a_Up, vector<Sarray> & a_U,$/;"	f	class:EW
addSuperGridDampingCU_center	src/EW_cuda.C	/^void EW::addSuperGridDampingCU_center(vector<Sarray> & a_Up, vector<Sarray> & a_U,$/;"	f	class:EW
addSuperGridDampingCU_upper_boundary	src/EW_cuda.C	/^void EW::addSuperGridDampingCU_upper_boundary(vector<Sarray> & a_Up, vector<Sarray> & a_U,$/;"	f	class:EW
add_dirac_source	src/dgmodule.f90	/^  SUBROUTINE add_dirac_source(/;"	s	module:dgmodule
add_to_gradient	src/GridPointSource.C	/^void GridPointSource::add_to_gradient( std::vector<Sarray> & kappa, std::vector<Sarray> & eta,$/;"	f	class:GridPointSource
add_to_hessian	src/GridPointSource.C	/^void GridPointSource::add_to_hessian( std::vector<Sarray> & kappa, std::vector<Sarray> & eta,$/;"	f	class:GridPointSource
addsgd4	src/addsgd.f	/^	subroutine addsgd4(/;"	s
addsgd4	src/device-routines.C	/^__global__ void addsgd4 (int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast, $/;"	f
addsgd4	tests/testil/addsgd4.f	/^      subroutine addsgd4(/;"	s
addsgd4_SM	src/device-routines.C	/^__global__ void addsgd4_SM (int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast, $/;"	f
addsgd4_X	src/device-routines.C	/^__global__ void addsgd4_X (int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast, $/;"	f
addsgd4_X_gpu	src/device-routines.C	/^void addsgd4_X_gpu (int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
addsgd4_Y	src/device-routines.C	/^__global__ void addsgd4_Y (int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast, $/;"	f
addsgd4_Y_gpu	src/device-routines.C	/^void addsgd4_Y_gpu (int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
addsgd4_dev	src/device-routines.C	/^__global__ void addsgd4_dev( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
addsgd4_dev_rev	src/device-routines.C	/^__global__ void addsgd4_dev_rev( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
addsgd4_dev_rev_v2	src/device-routines.C	/^addsgd4_dev_rev_v2( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
addsgd4_dev_v2	src/device-routines.C	/^addsgd4_dev_v2( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
addsgd4_gpu	src/device-routines.C	/^void addsgd4_gpu (int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
addsgd4_no_SM	src/device-routines.C	/^__global__ void addsgd4_no_SM (int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast, $/;"	f
addsgd4c	src/addsgd.f	/^	subroutine addsgd4c(/;"	s
addsgd4c_dev	src/device-routines.C	/^__global__ void addsgd4c_dev( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
addsgd4c_dev_rev	src/device-routines.C	/^__global__ void addsgd4c_dev_rev( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
addsgd4cfort	src/ew-cfromfort.C	/^void EW::addsgd4cfort( int ifirst, int ilast, int jfirst, int jlast,$/;"	f	class:EW
addsgd4cfort_indrev	src/ew-cfromfort.C	/^void EW::addsgd4cfort_indrev( int ifirst, int ilast, int jfirst, int jlast,$/;"	f	class:EW
addsgd4fort	src/ew-cfromfort.C	/^void EW::addsgd4fort( int ifirst, int ilast, int jfirst, int jlast,$/;"	f	class:EW
addsgd4fort	tests/testil/addsgd4fort.C	/^void addsgd4fort( int ifirst, int ilast, int jfirst, int jlast,$/;"	f
addsgd4fort_indrev	src/ew-cfromfort.C	/^void EW::addsgd4fort_indrev( int ifirst, int ilast, int jfirst, int jlast,$/;"	f	class:EW
addsgd4fort_rev	tests/testil/addsgd4fort_rev.C	/^void addsgd4fort_rev( int ifirst, int ilast, int jfirst, int jlast,$/;"	f
addsgd4fort_unrl	tests/testil/addsgd4fort.C	/^void addsgd4fort_unrl( int ifirst, int ilast, int jfirst, int jlast,$/;"	f
addsgd6	src/addsgd.f	/^	subroutine addsgd6(/;"	s
addsgd6_dev	src/device-routines.C	/^__global__ void addsgd6_dev( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
addsgd6_dev_rev	src/device-routines.C	/^__global__ void addsgd6_dev_rev( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
addsgd6c	src/addsgd.f	/^	subroutine addsgd6c(/;"	s
addsgd6c_dev	src/device-routines.C	/^__global__ void addsgd6c_dev( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
addsgd6c_dev_rev	src/device-routines.C	/^__global__ void addsgd6c_dev_rev( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
addsgd6cfort	src/ew-cfromfort.C	/^void EW::addsgd6cfort( int ifirst, int ilast, int jfirst, int jlast,$/;"	f	class:EW
addsgd6cfort_indrev	src/ew-cfromfort.C	/^void EW::addsgd6cfort_indrev(  int ifirst, int ilast, int jfirst, int jlast,$/;"	f	class:EW
addsgd6fort	src/ew-cfromfort.C	/^void EW::addsgd6fort( int ifirst, int ilast, int jfirst, int jlast,$/;"	f	class:EW
addsgd6fort_indrev	src/ew-cfromfort.C	/^void EW::addsgd6fort_indrev( int ifirst, int ilast, int jfirst, int jlast,$/;"	f	class:EW
adjust_t0	src/Source.C	/^void Source::adjust_t0( float_sw4 dt0 )$/;"	f	class:Source
adjust_zcoord	src/Source.C	/^void Source::adjust_zcoord( EW* a_ew )$/;"	f	class:Source
allocateArrays	src/EW.C	/^void EW::allocateArrays()$/;"	f	class:EW
allocateRecordingArrays	src/TimeSeries.C	/^void TimeSeries::allocateRecordingArrays( int numberOfTimeSteps, float_sw4 startTime, float_sw4 timeStep )$/;"	f	class:TimeSeries
allocateTimeSeriesOnDeviceCU	src/EW_cuda.C	/^void EW::allocateTimeSeriesOnDeviceCU( int& nvals, int& ntloc, int*& i0dev,$/;"	f	class:EW
allocateTopoArrays	src/EW.C	/^void EW::allocateTopoArrays()$/;"	f	class:EW
allocate_on_device	src/Sarray.C	/^void Sarray::allocate_on_device( EWCuda* cu )$/;"	f	class:Sarray
argparse	pytest/test_sw4lite.py	/^import os, sys, argparse$/;"	i
args	pytest/test_sw4lite.py	/^    args = parser.parse_args()$/;"	v
arsac	src/sacsubc.C	/^void arsac (int LN, char *name,float **data,int *nerr)$/;"	f
assemble	src/EW-dg.C	/^void EW::assemble(double* MU,double* MV,double* SU,double* SV,double* LU,double* LV)$/;"	f	class:EW
assign	src/Sarray.C	/^void Sarray::assign( const float* ar )$/;"	f	class:Sarray
assign	src/Sarray.C	/^void Sarray::assign( const float_sw4* ar, int corder )$/;"	f	class:Sarray
assign_local_bcs	src/EW.C	/^void EW::assign_local_bcs( )$/;"	f	class:EW
assign_supergrid_damping_arrays	src/EW.C	/^void EW::assign_supergrid_damping_arrays()$/;"	f	class:EW
awsac	src/sacsubc.C	/^void awsac (int LN, const char *name,float *data)$/;"	f
bAEInterface	src/double/sw4.h	/^enum boundaryConditionType { bStressFree, bDirichlet, bSuperGrid, bPeriodic, bCCInterface, bRefInterface, bAEInterface,$/;"	e	enum:boundaryConditionType
bAEInterface	src/float/sw4.h	/^enum boundaryConditionType { bStressFree, bDirichlet, bSuperGrid, bPeriodic, bCCInterface, bRefInterface, bAEInterface,$/;"	e	enum:boundaryConditionType
bAEInterface	tests/testil/sw4.h	/^enum boundaryConditionType { bStressFree, bDirichlet, bSuperGrid, bPeriodic, bCCInterface, bRefInterface, bAEInterface,$/;"	e	enum:boundaryConditionType
bCCInterface	src/double/sw4.h	/^enum boundaryConditionType { bStressFree, bDirichlet, bSuperGrid, bPeriodic, bCCInterface, bRefInterface, bAEInterface,$/;"	e	enum:boundaryConditionType
bCCInterface	src/float/sw4.h	/^enum boundaryConditionType { bStressFree, bDirichlet, bSuperGrid, bPeriodic, bCCInterface, bRefInterface, bAEInterface,$/;"	e	enum:boundaryConditionType
bCCInterface	tests/testil/sw4.h	/^enum boundaryConditionType { bStressFree, bDirichlet, bSuperGrid, bPeriodic, bCCInterface, bRefInterface, bAEInterface,$/;"	e	enum:boundaryConditionType
bDirichlet	src/double/sw4.h	/^enum boundaryConditionType { bStressFree, bDirichlet, bSuperGrid, bPeriodic, bCCInterface, bRefInterface, bAEInterface,$/;"	e	enum:boundaryConditionType
bDirichlet	src/float/sw4.h	/^enum boundaryConditionType { bStressFree, bDirichlet, bSuperGrid, bPeriodic, bCCInterface, bRefInterface, bAEInterface,$/;"	e	enum:boundaryConditionType
bDirichlet	tests/testil/sw4.h	/^enum boundaryConditionType { bStressFree, bDirichlet, bSuperGrid, bPeriodic, bCCInterface, bRefInterface, bAEInterface,$/;"	e	enum:boundaryConditionType
bNone	src/double/sw4.h	/^ bProcessor, bNone };$/;"	e	enum:boundaryConditionType
bNone	src/float/sw4.h	/^ bProcessor, bNone };$/;"	e	enum:boundaryConditionType
bNone	tests/testil/sw4.h	/^ bProcessor, bNone };$/;"	e	enum:boundaryConditionType
bPeriodic	src/double/sw4.h	/^enum boundaryConditionType { bStressFree, bDirichlet, bSuperGrid, bPeriodic, bCCInterface, bRefInterface, bAEInterface,$/;"	e	enum:boundaryConditionType
bPeriodic	src/float/sw4.h	/^enum boundaryConditionType { bStressFree, bDirichlet, bSuperGrid, bPeriodic, bCCInterface, bRefInterface, bAEInterface,$/;"	e	enum:boundaryConditionType
bPeriodic	tests/testil/sw4.h	/^enum boundaryConditionType { bStressFree, bDirichlet, bSuperGrid, bPeriodic, bCCInterface, bRefInterface, bAEInterface,$/;"	e	enum:boundaryConditionType
bProcessor	src/double/sw4.h	/^ bProcessor, bNone };$/;"	e	enum:boundaryConditionType
bProcessor	src/float/sw4.h	/^ bProcessor, bNone };$/;"	e	enum:boundaryConditionType
bProcessor	tests/testil/sw4.h	/^ bProcessor, bNone };$/;"	e	enum:boundaryConditionType
bRefInterface	src/double/sw4.h	/^enum boundaryConditionType { bStressFree, bDirichlet, bSuperGrid, bPeriodic, bCCInterface, bRefInterface, bAEInterface,$/;"	e	enum:boundaryConditionType
bRefInterface	src/float/sw4.h	/^enum boundaryConditionType { bStressFree, bDirichlet, bSuperGrid, bPeriodic, bCCInterface, bRefInterface, bAEInterface,$/;"	e	enum:boundaryConditionType
bRefInterface	tests/testil/sw4.h	/^enum boundaryConditionType { bStressFree, bDirichlet, bSuperGrid, bPeriodic, bCCInterface, bRefInterface, bAEInterface,$/;"	e	enum:boundaryConditionType
bStressFree	src/double/sw4.h	/^enum boundaryConditionType { bStressFree, bDirichlet, bSuperGrid, bPeriodic, bCCInterface, bRefInterface, bAEInterface,$/;"	e	enum:boundaryConditionType
bStressFree	src/float/sw4.h	/^enum boundaryConditionType { bStressFree, bDirichlet, bSuperGrid, bPeriodic, bCCInterface, bRefInterface, bAEInterface,$/;"	e	enum:boundaryConditionType
bStressFree	tests/testil/sw4.h	/^enum boundaryConditionType { bStressFree, bDirichlet, bSuperGrid, bPeriodic, bCCInterface, bRefInterface, bAEInterface,$/;"	e	enum:boundaryConditionType
bSuperGrid	src/double/sw4.h	/^enum boundaryConditionType { bStressFree, bDirichlet, bSuperGrid, bPeriodic, bCCInterface, bRefInterface, bAEInterface,$/;"	e	enum:boundaryConditionType
bSuperGrid	src/float/sw4.h	/^enum boundaryConditionType { bStressFree, bDirichlet, bSuperGrid, bPeriodic, bCCInterface, bRefInterface, bAEInterface,$/;"	e	enum:boundaryConditionType
bSuperGrid	tests/testil/sw4.h	/^enum boundaryConditionType { bStressFree, bDirichlet, bSuperGrid, bPeriodic, bCCInterface, bRefInterface, bAEInterface,$/;"	e	enum:boundaryConditionType
badOption	src/EW.C	/^void EW::badOption(string name, char* option) const$/;"	f	class:EW
bandPass	src/Filter.h	/^enum FilterType{lowPass, bandPass};$/;"	e	enum:FilterType
bcfort	src/bcfort.f	/^      subroutine bcfort(/;"	s
bcfortsg	src/bcfort.f	/^      subroutine bcfortsg(/;"	s
bcfortsg	src/device-routines.C	/^__global__ void bcfortsg (int ib, int ie, int jb, int je, int kb, int ke, int* wind,$/;"	f
bcfortsg	src/ew-cfromfort.C	/^void EW::bcfortsg( int ib, int ie, int jb, int je, int kb, int ke, int wind[36], $/;"	f	class:EW
bcfortsg_dev	src/device-routines.C	/^__global__ void bcfortsg_dev( int ib, int ie, int jb, int je, int kb, int ke, int* wind,$/;"	f
bcfortsg_dev_indrev	src/device-routines.C	/^__global__ void bcfortsg_dev_indrev( int ib, int ie, int jb, int je, int kb, int ke, int* wind,$/;"	f
bcfortsg_gpu	src/device-routines.C	/^void bcfortsg_gpu (int ib, int ie, int jb, int je, int kb, int ke, int* wind,$/;"	f
bcfortsg_indrev	src/ew-cfromfort.C	/^void EW::bcfortsg_indrev( int ib, int ie, int jb, int je, int kb, int ke, int wind[36], $/;"	f	class:EW
begin_sequential	src/Parallel_IO.C	/^void Parallel_IO::begin_sequential( MPI_Comm comm )$/;"	f	class:Parallel_IO
bigend	src/Byteswapper.h	/^   bool bigend()$/;"	f	class:Byteswapper
bope	src/device-routines.C	1275;"	d	file:
bope	src/device-routines.C	1295;"	d	file:
bope	src/device-routines.C	1581;"	d	file:
bope	src/device-routines.C	5934;"	d	file:
bope	src/device-routines.C	6450;"	d	file:
bope	src/device-routines.C	6468;"	d	file:
bope	src/device-routines.C	6987;"	d	file:
bope	src/device-routines.C	7692;"	d	file:
bope	src/device-routines.C	7967;"	d	file:
bope	src/device-routines.C	7988;"	d	file:
bope	src/device-routines.C	8274;"	d	file:
bope	src/device-routines.C	999;"	d	file:
bope	src/ew-cfromfort.C	1492;"	d	file:
bope	src/ew-cfromfort.C	1938;"	d	file:
bope	src/rhs4sg.C	59;"	d	file:
bope	src/rhs4sg_rev.C	67;"	d	file:
bope	src/rhs4sg_revNW.C	67;"	d	file:
bope	src/rhs4sgcurv.C	1404;"	d	file:
bope	src/rhs4sgcurv.C	82;"	d	file:
bope	src/rhs4sgcurv_rev.C	1393;"	d	file:
bope	src/rhs4sgcurv_rev.C	81;"	d	file:
bope	tests/testil/rhs4sg.c	52;"	d	file:
bope	tests/testil/rhs4sg_rev.c	36;"	d	file:
bope	tests/testil/rhs4sgcurv.C	1373;"	d	file:
bope	tests/testil/rhs4sgcurv.C	51;"	d	file:
bope	tests/testil/rhs4sgcurv_rev.C	1362;"	d	file:
bope	tests/testil/rhs4sgcurv_rev.C	50;"	d	file:
boundaryConditionType	src/double/sw4.h	/^enum boundaryConditionType { bStressFree, bDirichlet, bSuperGrid, bPeriodic, bCCInterface, bRefInterface, bAEInterface,$/;"	g
boundaryConditionType	src/float/sw4.h	/^enum boundaryConditionType { bStressFree, bDirichlet, bSuperGrid, bPeriodic, bCCInterface, bRefInterface, bAEInterface,$/;"	g
boundaryConditionType	tests/testil/sw4.h	/^enum boundaryConditionType { bStressFree, bDirichlet, bSuperGrid, bPeriodic, bCCInterface, bRefInterface, bAEInterface,$/;"	g
brsac	src/sacsubc.C	/^void brsac (int LN,char *name,float **data,int *nerr)$/;"	f
buildGaussianHillTopography	src/EW.C	/^void EW::buildGaussianHillTopography(float_sw4 amp, float_sw4 Lx, float_sw4 Ly, float_sw4 x0, float_sw4 y0)$/;"	f	class:EW
build_my_v	src/dgmodule.f90	/^  SUBROUTINE build_my_v(/;"	s	module:dgmodule
build_my_v_const_coeff	src/dgmodule.f90	/^  SUBROUTINE build_my_v_const_coeff(/;"	s	module:dgmodule
build_my_w	src/dgmodule.f90	/^  SUBROUTINE build_my_w(/;"	s	module:dgmodule
build_my_w_const_coeff	src/dgmodule.f90	/^  SUBROUTINE build_my_w_const_coeff(/;"	s	module:dgmodule
build_w_and_v	src/EW-dg.C	/^void EW::build_w_and_v(double* udg, double* vdg, double* w_in_all_faces, double* v_in_all_faces)$/;"	f	class:EW
builddir	Makefile	/^   builddir = $(debugdir)$/;"	m
builddir	Makefile	/^   builddir = $(optdir)$/;"	m
bwsac	src/sacsubc.C	/^void bwsac (int LN, const char *name,float *data)$/;"	f
byte_rev	src/Byteswapper.h	/^   void byte_rev( void* data, int sz, const char* typ )$/;"	f	class:Byteswapper
c_ptr	src/Sarray.h	/^   inline float_sw4* c_ptr() {return m_data;}$/;"	f	class:Sarray
cartesian_bc_forcing	src/EW.C	/^void EW::cartesian_bc_forcing( float_sw4 t, vector<float_sw4**> & a_BCForcing,$/;"	f	class:EW
cartesian_bc_forcingCU	src/EW_cuda.C	/^void EW::cartesian_bc_forcingCU( float_sw4 t, vector<float_sw4**> & a_BCForcing,$/;"	f	class:EW
chdr	src/sacsubc.h	/^	char chdr[24][8];$/;"	m	struct:sachdr_
chdr_default	src/sacsubc.C	/^const char  *chdr_default = "-12345  ";$/;"	v
check_dimensions	src/EW.C	/^void EW::check_dimensions()$/;"	f	class:EW
check_for_match_on_cpu_gpu	src/EW.C	/^bool EW::check_for_match_on_cpu_gpu( vector<Sarray>& a_U, int verbose, string name )$/;"	f	class:EW
check_for_nan	src/EW.C	/^bool EW::check_for_nan( vector<Sarray>& a_U, int verbose, string name )$/;"	f	class:EW
check_for_nan_GPU	src/EW_cuda.C	/^bool EW::check_for_nan_GPU( vector<Sarray>& a_U, int verbose, string name )$/;"	f	class:EW
check_match_cpu_gpu	src/Sarray.C	/^size_t Sarray::check_match_cpu_gpu( EWCuda* cu, int& cfirst, int& ifirst, int& jfirst, int& kfirst , string name )$/;"	f	class:Sarray
check_match_cpu_gpu	src/Sarray.C	/^size_t Sarray::check_match_cpu_gpu( EWCuda* cu, string name )$/;"	f	class:Sarray
check_nan_dev	src/device-routines.C	/^__global__ void check_nan_dev( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
ckernel	Makefile	/^   ckernel := "no"$/;"	m
coeff	src/Polynomial.C	/^float_sw4 Polynomial::coeff(unsigned int q)$/;"	f	class:Polynomial
communicate_array	src/EW.C	/^void EW::communicate_array( Sarray& u, int grid )$/;"	f	class:EW
communicate_arrayCU_X	src/EW_cuda.C	/^void EW::communicate_arrayCU_X( Sarray& u, int g , int st)$/;"	f	class:EW
communicate_arrayCU_Y	src/EW_cuda.C	/^void EW::communicate_arrayCU_Y( Sarray& u, int g , int st)$/;"	f	class:EW
compare_one_line	pytest/test_sw4lite.py	/^def compare_one_line(base_file_name, test_file_name, errTol, absErrLimit, lineNum, verbose):$/;"	f
complexConjugatedPolesBP	src/Filter.C	/^float_sw4 Filter::complexConjugatedPolesBP(float_sw4 f1, float_sw4 f2, float_sw4 dt, float_sw4 alpha, $/;"	f	class:Filter
complexConjugatedPolesLP	src/Filter.C	/^float_sw4 Filter::complexConjugatedPolesLP(float_sw4 fc, float_sw4 dt, float_sw4 alpha, $/;"	f	class:Filter
computeCartesianCoord	src/EW.C	/^void EW::computeCartesianCoord(float_sw4 &x, float_sw4 &y, float_sw4 lon, float_sw4 lat)$/;"	f	class:EW
computeDT	src/EW.C	/^void EW::computeDT()$/;"	f	class:EW
computeEndGridPoint	src/EW.C	/^int EW::computeEndGridPoint( float_sw4 maxval, float_sw4 h )$/;"	f	class:EW
computeError	src/EW-dg.C	/^void EW::computeError(double* udg, double* vdg, double t)$/;"	f	class:EW
computeGeographicCoord	src/EW.C	/^void EW::computeGeographicCoord(float_sw4 x, float_sw4 y, float_sw4 & longitude, float_sw4 & latitude)$/;"	f	class:EW
computeNearestGridPoint	src/EW.C	/^void EW::computeNearestGridPoint(int & a_i, $/;"	f	class:EW
computeNearestGridPointZ	src/TimeSeries.C	/^bool TimeSeries::computeNearestGridPointZ( float_sw4 X, float_sw4 Y, float_sw4 Z,$/;"	f	class:TimeSeries
computeSOS	src/Filter.C	/^void Filter::computeSOS(float_sw4 dt)$/;"	f	class:Filter
compute_file_suffix	src/CheckPoint.C	/^void CheckPoint::compute_file_suffix( int cycle, std::stringstream& fileSuffix )$/;"	f	class:CheckPoint
compute_mapped_coordinates	src/Source.C	/^void Source::compute_mapped_coordinates( EW* a_ew )$/;"	f	class:Source
compute_metric_at_source	src/Source.C	/^void Source::compute_metric_at_source( EW* a_EW, float_sw4 q, float_sw4 r, float_sw4 s, int ic,$/;"	f	class:Source
compute_minmax_topography	src/EW.C	/^void EW::compute_minmax_topography( float_sw4& topo_zmin, float_sw4& topo_zmax )$/;"	f	class:EW
compute_numerical_fluxes	src/dgmodule.f90	/^  SUBROUTINE compute_numerical_fluxes(/;"	s	module:dgmodule
compute_point_dirac_error	src/dgmodule.f90	/^  SUBROUTINE compute_point_dirac_error(/;"	s	module:dgmodule
compute_single_mode_error	src/dgmodule.f90	/^  SUBROUTINE compute_single_mode_error(/;"	s	module:dgmodule
compute_surface_integrals	src/dgmodule.f90	/^  SUBROUTINE compute_surface_integrals(/;"	s	module:dgmodule
compute_t0_increase	src/Source.C	/^float_sw4 Source::compute_t0_increase(float_sw4 t0_min) const$/;"	f	class:Source
compute_time_derivatives	src/dgmodule.f90	/^  SUBROUTINE compute_time_derivatives(/;"	s	module:dgmodule
computername	Makefile	/^  computername := cab$/;"	m
computername	Makefile	/^  computername := carl$/;"	m
computername	Makefile	/^  computername := chebyshev$/;"	m
computername	Makefile	/^  computername := cori$/;"	m
computername	Makefile	/^  computername := lassen$/;"	m
computername	Makefile	/^  computername := quadknl$/;"	m
computername	Makefile	/^  computername := quartz$/;"	m
computername	Makefile	/^  computername := ray$/;"	m
computername	Makefile	/^  computername := valhall$/;"	m
convert_material_to_mulambda	src/EW.C	/^void EW::convert_material_to_mulambda( )$/;"	f	class:EW
copy	src/Sarray.C	/^void Sarray::copy( const Sarray& u )$/;"	f	class:Sarray
copy	src/Source.C	/^Source* Source::copy( std::string a_name )$/;"	f	class:Source
copy_bcforcing_arrays_to_device	src/EW_cuda.C	/^void EW::copy_bcforcing_arrays_to_device()$/;"	f	class:EW
copy_bctype_arrays_to_device	src/EW_cuda.C	/^void EW::copy_bctype_arrays_to_device()$/;"	f	class:EW
copy_bndrywindow_arrays_to_device	src/EW_cuda.C	/^void EW::copy_bndrywindow_arrays_to_device()$/;"	f	class:EW
copy_from_device	src/Sarray.C	/^void Sarray::copy_from_device( EWCuda* cu, bool async, int st )$/;"	f	class:Sarray
copy_material_to_device	src/EW_cuda.C	/^void EW::copy_material_to_device()$/;"	f	class:EW
copy_pars_to_device	src/Source.C	/^void Source::copy_pars_to_device()$/;"	f	class:Source
copy_point_sources_to_gpu	src/EW.C	/^void EW::copy_point_sources_to_gpu()$/;"	f	class:EW
copy_stencilcoefficients	src/device-routines.C	/^void copy_stencilcoefficients( float_sw4* acof, float_sw4* ghcof, float_sw4* bope )$/;"	f
copy_stencilcoefficients1	src/device-routines.C	/^void copy_stencilcoefficients1( float_sw4* acof, float_sw4* ghcof, float_sw4* bope , float_sw4* sbop )$/;"	f
copy_supergrid_arrays_to_device	src/EW_cuda.C	/^void EW::copy_supergrid_arrays_to_device()$/;"	f	class:EW
copy_to_device	src/Sarray.C	/^void Sarray::copy_to_device( EWCuda* cu, bool async, int st )$/;"	f	class:Sarray
cornerTaper	src/SuperGrid.C	/^float_sw4 SuperGrid::cornerTaper( float_sw4 x ) const$/;"	f	class:SuperGrid
cornerx	src/EW.C	4715;"	d	file:
cornerx	src/EW.C	4798;"	d	file:
cornery	src/EW.C	4716;"	d	file:
cornery	src/EW.C	4799;"	d	file:
cornerz	src/EW.C	4717;"	d	file:
cornerz	src/EW.C	4800;"	d	file:
corr_dev	src/device-routines.C	/^__global__ void corr_dev( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
corr_dev_rev	src/device-routines.C	/^__global__ void corr_dev_rev( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
corrfort	src/ew-cfromfort.C	/^void EW::corrfort( int ib, int ie, int jb, int je, int kb, int ke, float_sw4* up,$/;"	f	class:EW
corrfort	src/rhs4th3fort.f	/^      subroutine corrfort(/;"	s
count_nans	src/Sarray.C	/^size_t Sarray::count_nans( int& cfirst, int& ifirst, int& jfirst, int& kfirst )$/;"	f	class:Sarray
count_nans	src/Sarray.C	/^size_t Sarray::count_nans()$/;"	f	class:Sarray
coversAllPoints	src/MaterialData.h	/^bool coversAllPoints(){return mCoversAllPoints;};$/;"	f	class:MaterialData
cox	src/device-routines.C	1624;"	d	file:
cox	src/device-routines.C	1697;"	d	file:
cox	src/device-routines.C	1723;"	d	file:
cox	src/device-routines.C	1856;"	d	file:
cox	src/device-routines.C	1884;"	d	file:
cox	src/device-routines.C	2017;"	d	file:
cox	src/device-routines.C	2043;"	d	file:
cox	src/device-routines.C	2113;"	d	file:
cox	src/device-routines.C	229;"	d	file:
cox	src/device-routines.C	301;"	d	file:
cox	src/device-routines.C	324;"	d	file:
cox	src/device-routines.C	393;"	d	file:
cox	src/device-routines.C	416;"	d	file:
cox	src/device-routines.C	473;"	d	file:
cox	src/device-routines.C	493;"	d	file:
cox	src/device-routines.C	551;"	d	file:
cox	src/device-routines.C	573;"	d	file:
cox	src/device-routines.C	628;"	d	file:
cox	src/device-routines.C	649;"	d	file:
cox	src/device-routines.C	705;"	d	file:
cox	src/ew-cfromfort.C	1048;"	d	file:
cox	src/ew-cfromfort.C	1077;"	d	file:
cox	src/ew-cfromfort.C	1149;"	d	file:
cox	src/ew-cfromfort.C	1178;"	d	file:
cox	src/ew-cfromfort.C	1232;"	d	file:
cox	src/ew-cfromfort.C	1260;"	d	file:
cox	src/ew-cfromfort.C	1314;"	d	file:
cox	src/ew-cfromfort.C	1341;"	d	file:
cox	src/ew-cfromfort.C	1396;"	d	file:
cox	src/ew-cfromfort.C	1423;"	d	file:
cox	src/ew-cfromfort.C	1478;"	d	file:
cox	src/ew-cfromfort.C	767;"	d	file:
cox	src/ew-cfromfort.C	841;"	d	file:
cox	src/ew-cfromfort.C	870;"	d	file:
cox	src/ew-cfromfort.C	941;"	d	file:
cox	src/ew-cfromfort.C	972;"	d	file:
cox	tests/testil/addsgd4fort.C	123;"	d	file:
cox	tests/testil/addsgd4fort.C	21;"	d	file:
cox	tests/testil/addsgd4fort.C	282;"	d	file:
cox	tests/testil/addsgd4fort.C	96;"	d	file:
cox	tests/testil/addsgd4fort_rev.C	22;"	d	file:
cox	tests/testil/addsgd4fort_rev.C	99;"	d	file:
coy	src/device-routines.C	1627;"	d	file:
coy	src/device-routines.C	1700;"	d	file:
coy	src/device-routines.C	1726;"	d	file:
coy	src/device-routines.C	1859;"	d	file:
coy	src/device-routines.C	1887;"	d	file:
coy	src/device-routines.C	2020;"	d	file:
coy	src/device-routines.C	2046;"	d	file:
coy	src/device-routines.C	2116;"	d	file:
coy	src/device-routines.C	232;"	d	file:
coy	src/device-routines.C	304;"	d	file:
coy	src/device-routines.C	327;"	d	file:
coy	src/device-routines.C	396;"	d	file:
coy	src/device-routines.C	419;"	d	file:
coy	src/device-routines.C	476;"	d	file:
coy	src/device-routines.C	496;"	d	file:
coy	src/device-routines.C	554;"	d	file:
coy	src/device-routines.C	576;"	d	file:
coy	src/device-routines.C	631;"	d	file:
coy	src/device-routines.C	652;"	d	file:
coy	src/device-routines.C	708;"	d	file:
coy	src/ew-cfromfort.C	1051;"	d	file:
coy	src/ew-cfromfort.C	1080;"	d	file:
coy	src/ew-cfromfort.C	1152;"	d	file:
coy	src/ew-cfromfort.C	1181;"	d	file:
coy	src/ew-cfromfort.C	1235;"	d	file:
coy	src/ew-cfromfort.C	1263;"	d	file:
coy	src/ew-cfromfort.C	1317;"	d	file:
coy	src/ew-cfromfort.C	1344;"	d	file:
coy	src/ew-cfromfort.C	1399;"	d	file:
coy	src/ew-cfromfort.C	1426;"	d	file:
coy	src/ew-cfromfort.C	1481;"	d	file:
coy	src/ew-cfromfort.C	770;"	d	file:
coy	src/ew-cfromfort.C	844;"	d	file:
coy	src/ew-cfromfort.C	873;"	d	file:
coy	src/ew-cfromfort.C	944;"	d	file:
coy	src/ew-cfromfort.C	975;"	d	file:
coy	tests/testil/addsgd4fort.C	126;"	d	file:
coy	tests/testil/addsgd4fort.C	24;"	d	file:
coy	tests/testil/addsgd4fort.C	285;"	d	file:
coy	tests/testil/addsgd4fort.C	99;"	d	file:
coy	tests/testil/addsgd4fort_rev.C	102;"	d	file:
coy	tests/testil/addsgd4fort_rev.C	25;"	d	file:
coz	src/device-routines.C	1630;"	d	file:
coz	src/device-routines.C	1703;"	d	file:
coz	src/device-routines.C	1729;"	d	file:
coz	src/device-routines.C	1862;"	d	file:
coz	src/device-routines.C	1890;"	d	file:
coz	src/device-routines.C	2023;"	d	file:
coz	src/device-routines.C	2049;"	d	file:
coz	src/device-routines.C	2119;"	d	file:
coz	src/device-routines.C	235;"	d	file:
coz	src/device-routines.C	307;"	d	file:
coz	src/device-routines.C	330;"	d	file:
coz	src/device-routines.C	399;"	d	file:
coz	src/ew-cfromfort.C	1054;"	d	file:
coz	src/ew-cfromfort.C	1083;"	d	file:
coz	src/ew-cfromfort.C	1155;"	d	file:
coz	src/ew-cfromfort.C	773;"	d	file:
coz	src/ew-cfromfort.C	847;"	d	file:
coz	src/ew-cfromfort.C	876;"	d	file:
coz	src/ew-cfromfort.C	947;"	d	file:
coz	src/ew-cfromfort.C	978;"	d	file:
coz	tests/testil/addsgd4fort.C	102;"	d	file:
coz	tests/testil/addsgd4fort.C	129;"	d	file:
coz	tests/testil/addsgd4fort.C	27;"	d	file:
coz	tests/testil/addsgd4fort.C	288;"	d	file:
coz	tests/testil/addsgd4fort_rev.C	105;"	d	file:
coz	tests/testil/addsgd4fort_rev.C	28;"	d	file:
create_copy_on_device	src/Sarray.C	/^Sarray* Sarray::create_copy_on_device( EWCuda* cu )$/;"	f	class:Sarray
create_output_directory	src/EW.C	/^void EW::create_output_directory( )$/;"	f	class:EW
cstr	src/sacsubc.C	/^const char *cstr[] = {$/;"	v
cycleSolutionArrays	src/EW.C	/^void EW::cycleSolutionArrays(vector<Sarray> & a_Um, vector<Sarray> & a_U,$/;"	f	class:EW
d_C6SmoothBump_dt	src/EW.C	/^float_sw4 EW::d_C6SmoothBump_dt(float_sw4 t, float_sw4 R, float_sw4 c)$/;"	f	class:EW
d_Gaussian_dt	src/EW.C	/^float_sw4 EW::d_Gaussian_dt(float_sw4 t, float_sw4 R, float_sw4 c, float_sw4 f)$/;"	f	class:EW
d_SmoothWave_dt	src/EW.C	/^float_sw4 EW::d_SmoothWave_dt(float_sw4 t, float_sw4 R, float_sw4 c)$/;"	f	class:EW
d_VerySmoothBump_dt	src/EW.C	/^float_sw4 EW::d_VerySmoothBump_dt(float_sw4 t, float_sw4 R, float_sw4 c)$/;"	f	class:EW
dampingCoeff	src/SuperGrid.C	/^float_sw4 SuperGrid::dampingCoeff(float_sw4 x) const$/;"	f	class:SuperGrid
dcx	src/EW.C	4707;"	d	file:
dcx	src/EW.C	4792;"	d	file:
dcx	src/device-routines.C	1623;"	d	file:
dcx	src/device-routines.C	1696;"	d	file:
dcx	src/device-routines.C	1722;"	d	file:
dcx	src/device-routines.C	1855;"	d	file:
dcx	src/device-routines.C	1883;"	d	file:
dcx	src/device-routines.C	2016;"	d	file:
dcx	src/device-routines.C	2042;"	d	file:
dcx	src/device-routines.C	2112;"	d	file:
dcx	src/device-routines.C	228;"	d	file:
dcx	src/device-routines.C	300;"	d	file:
dcx	src/device-routines.C	323;"	d	file:
dcx	src/device-routines.C	392;"	d	file:
dcx	src/device-routines.C	415;"	d	file:
dcx	src/device-routines.C	472;"	d	file:
dcx	src/device-routines.C	492;"	d	file:
dcx	src/device-routines.C	550;"	d	file:
dcx	src/device-routines.C	572;"	d	file:
dcx	src/device-routines.C	627;"	d	file:
dcx	src/device-routines.C	648;"	d	file:
dcx	src/device-routines.C	704;"	d	file:
dcx	src/ew-cfromfort.C	1047;"	d	file:
dcx	src/ew-cfromfort.C	1076;"	d	file:
dcx	src/ew-cfromfort.C	1148;"	d	file:
dcx	src/ew-cfromfort.C	1177;"	d	file:
dcx	src/ew-cfromfort.C	1231;"	d	file:
dcx	src/ew-cfromfort.C	1259;"	d	file:
dcx	src/ew-cfromfort.C	1313;"	d	file:
dcx	src/ew-cfromfort.C	1340;"	d	file:
dcx	src/ew-cfromfort.C	1395;"	d	file:
dcx	src/ew-cfromfort.C	1422;"	d	file:
dcx	src/ew-cfromfort.C	1477;"	d	file:
dcx	src/ew-cfromfort.C	766;"	d	file:
dcx	src/ew-cfromfort.C	840;"	d	file:
dcx	src/ew-cfromfort.C	869;"	d	file:
dcx	src/ew-cfromfort.C	940;"	d	file:
dcx	src/ew-cfromfort.C	971;"	d	file:
dcx	tests/testil/addsgd4fort.C	122;"	d	file:
dcx	tests/testil/addsgd4fort.C	20;"	d	file:
dcx	tests/testil/addsgd4fort.C	281;"	d	file:
dcx	tests/testil/addsgd4fort.C	95;"	d	file:
dcx	tests/testil/addsgd4fort_rev.C	21;"	d	file:
dcx	tests/testil/addsgd4fort_rev.C	98;"	d	file:
dcy	src/EW.C	4708;"	d	file:
dcy	src/EW.C	4793;"	d	file:
dcy	src/device-routines.C	1626;"	d	file:
dcy	src/device-routines.C	1699;"	d	file:
dcy	src/device-routines.C	1725;"	d	file:
dcy	src/device-routines.C	1858;"	d	file:
dcy	src/device-routines.C	1886;"	d	file:
dcy	src/device-routines.C	2019;"	d	file:
dcy	src/device-routines.C	2045;"	d	file:
dcy	src/device-routines.C	2115;"	d	file:
dcy	src/device-routines.C	231;"	d	file:
dcy	src/device-routines.C	303;"	d	file:
dcy	src/device-routines.C	326;"	d	file:
dcy	src/device-routines.C	395;"	d	file:
dcy	src/device-routines.C	418;"	d	file:
dcy	src/device-routines.C	475;"	d	file:
dcy	src/device-routines.C	495;"	d	file:
dcy	src/device-routines.C	553;"	d	file:
dcy	src/device-routines.C	575;"	d	file:
dcy	src/device-routines.C	630;"	d	file:
dcy	src/device-routines.C	651;"	d	file:
dcy	src/device-routines.C	707;"	d	file:
dcy	src/ew-cfromfort.C	1050;"	d	file:
dcy	src/ew-cfromfort.C	1079;"	d	file:
dcy	src/ew-cfromfort.C	1151;"	d	file:
dcy	src/ew-cfromfort.C	1180;"	d	file:
dcy	src/ew-cfromfort.C	1234;"	d	file:
dcy	src/ew-cfromfort.C	1262;"	d	file:
dcy	src/ew-cfromfort.C	1316;"	d	file:
dcy	src/ew-cfromfort.C	1343;"	d	file:
dcy	src/ew-cfromfort.C	1398;"	d	file:
dcy	src/ew-cfromfort.C	1425;"	d	file:
dcy	src/ew-cfromfort.C	1480;"	d	file:
dcy	src/ew-cfromfort.C	769;"	d	file:
dcy	src/ew-cfromfort.C	843;"	d	file:
dcy	src/ew-cfromfort.C	872;"	d	file:
dcy	src/ew-cfromfort.C	943;"	d	file:
dcy	src/ew-cfromfort.C	974;"	d	file:
dcy	tests/testil/addsgd4fort.C	125;"	d	file:
dcy	tests/testil/addsgd4fort.C	23;"	d	file:
dcy	tests/testil/addsgd4fort.C	284;"	d	file:
dcy	tests/testil/addsgd4fort.C	98;"	d	file:
dcy	tests/testil/addsgd4fort_rev.C	101;"	d	file:
dcy	tests/testil/addsgd4fort_rev.C	24;"	d	file:
dcz	src/EW.C	4709;"	d	file:
dcz	src/EW.C	4794;"	d	file:
dcz	src/device-routines.C	1629;"	d	file:
dcz	src/device-routines.C	1702;"	d	file:
dcz	src/device-routines.C	1728;"	d	file:
dcz	src/device-routines.C	1861;"	d	file:
dcz	src/device-routines.C	1889;"	d	file:
dcz	src/device-routines.C	2022;"	d	file:
dcz	src/device-routines.C	2048;"	d	file:
dcz	src/device-routines.C	2118;"	d	file:
dcz	src/device-routines.C	234;"	d	file:
dcz	src/device-routines.C	306;"	d	file:
dcz	src/device-routines.C	329;"	d	file:
dcz	src/device-routines.C	398;"	d	file:
dcz	src/ew-cfromfort.C	1053;"	d	file:
dcz	src/ew-cfromfort.C	1082;"	d	file:
dcz	src/ew-cfromfort.C	1154;"	d	file:
dcz	src/ew-cfromfort.C	772;"	d	file:
dcz	src/ew-cfromfort.C	846;"	d	file:
dcz	src/ew-cfromfort.C	875;"	d	file:
dcz	src/ew-cfromfort.C	946;"	d	file:
dcz	src/ew-cfromfort.C	977;"	d	file:
dcz	tests/testil/addsgd4fort.C	101;"	d	file:
dcz	tests/testil/addsgd4fort.C	128;"	d	file:
dcz	tests/testil/addsgd4fort.C	26;"	d	file:
dcz	tests/testil/addsgd4fort.C	287;"	d	file:
dcz	tests/testil/addsgd4fort_rev.C	104;"	d	file:
dcz	tests/testil/addsgd4fort_rev.C	27;"	d	file:
debug	Makefile	/^   debug := "no"$/;"	m
debug	Makefile	/^  debug = no$/;"	m
debugdir	Makefile	/^        debugdir := debug_mp_c$/;"	m
debugdir	Makefile	/^        debugdir:= debug_mp_c_raja$/;"	m
debugdir	Makefile	/^      debugdir := debug$/;"	m
debugdir	Makefile	/^      debugdir := debug_c$/;"	m
debugdir	Makefile	/^      debugdir := debug_mp$/;"	m
debugdir	Makefile	/^   debugdir := $(debugdir)_$(computername)$/;"	m
debugdir	Makefile	/^   debugdir := $(debugdir)_sp$/;"	m
debugdir	Makefile	/^   debugdir := debug_lassen_cpu$/;"	m
decomp1d	src/EW.C	/^void EW::decomp1d( int nglobal, int myid, int nproc, int& s, int& e )$/;"	f	class:EW
default_bcs	src/EW.C	/^void EW::default_bcs( )$/;"	f	class:EW
define	src/Sarray.C	/^void Sarray::define( const Sarray& u ) $/;"	f	class:Sarray
define	src/Sarray.C	/^void Sarray::define( int ibeg, int iend, int jbeg, int jend, int kbeg,$/;"	f	class:Sarray
define	src/Sarray.C	/^void Sarray::define( int iend, int jend, int kend )$/;"	f	class:Sarray
define	src/Sarray.C	/^void Sarray::define( int nc, int ibeg, int iend, int jbeg, int jend, int kbeg,$/;"	f	class:Sarray
define	src/Sarray.C	/^void Sarray::define( int nc, int iend, int jend, int kend )$/;"	f	class:Sarray
defineDimensionsGXY	src/EW.C	/^void EW::defineDimensionsGXY( )$/;"	f	class:EW
defineDimensionsZ	src/EW.C	/^void EW::defineDimensionsZ()$/;"	f	class:EW
define_offsets	src/Sarray.C	/^void Sarray::define_offsets()$/;"	f	class:Sarray
define_pio	src/CheckPoint.C	/^void CheckPoint::define_pio( )$/;"	f	class:CheckPoint
define_taper	src/SuperGrid.C	/^void SuperGrid::define_taper(bool left, float_sw4 leftStart, bool right, float_sw4 rightEnd, float_sw4 width)$/;"	f	class:SuperGrid
denom	src/SecondOrderSection.C	/^float_sw4 SecondOrderSection::denom(unsigned int q)$/;"	f	class:SecondOrderSection
dev_BCForcing	src/EW.h	/^   vector<float_sw4**> dev_BCForcing;$/;"	m	class:EW
dev_BndryWindow	src/EW.h	/^   vector<int *> dev_BndryWindow;$/;"	m	class:EW
dev_SideEdge_Recv	src/EW.h	/^   vector<float_sw4*> dev_SideEdge_Send, dev_SideEdge_Recv;$/;"	m	class:EW
dev_SideEdge_Send	src/EW.h	/^   vector<float_sw4*> dev_SideEdge_Send, dev_SideEdge_Recv;$/;"	m	class:EW
dev_acof	src/device-routines.C	/^__constant__ float_sw4 dev_acof[384];$/;"	v
dev_bcType	src/EW.h	/^   vector<boundaryConditionType*> dev_bcType;$/;"	m	class:EW
dev_bope	src/device-routines.C	/^__constant__ float_sw4 dev_bope[48];$/;"	v
dev_data	src/Sarray.h	/^   float_sw4* dev_data;$/;"	m	class:Sarray
dev_ghcof	src/device-routines.C	/^__constant__ float_sw4 dev_ghcof[6];$/;"	v
dev_identsources	src/EW.h	/^   int* dev_identsources;$/;"	m	class:EW
dev_point_sources	src/EW.h	/^   GridPointSource* dev_point_sources;$/;"	m	class:EW
dev_ptr	src/Sarray.h	/^   SW4_HDDECLARE inline float_sw4* dev_ptr() {return dev_data;}$/;"	f	class:Sarray
dev_sbop	src/device-routines.C	/^__constant__ float_sw4 dev_sbop[5];$/;"	v
dev_sg_corner_x	src/EW.h	/^   vector<float_sw4*> dev_sg_corner_x, dev_sg_corner_y, dev_sg_corner_z;$/;"	m	class:EW
dev_sg_corner_y	src/EW.h	/^   vector<float_sw4*> dev_sg_corner_x, dev_sg_corner_y, dev_sg_corner_z;$/;"	m	class:EW
dev_sg_corner_z	src/EW.h	/^   vector<float_sw4*> dev_sg_corner_x, dev_sg_corner_y, dev_sg_corner_z;$/;"	m	class:EW
dev_sg_dc_x	src/EW.h	/^   vector<float_sw4*> dev_sg_dc_x, dev_sg_dc_y, dev_sg_dc_z;$/;"	m	class:EW
dev_sg_dc_y	src/EW.h	/^   vector<float_sw4*> dev_sg_dc_x, dev_sg_dc_y, dev_sg_dc_z;$/;"	m	class:EW
dev_sg_dc_z	src/EW.h	/^   vector<float_sw4*> dev_sg_dc_x, dev_sg_dc_y, dev_sg_dc_z;$/;"	m	class:EW
dev_sg_str_x	src/EW.h	/^   vector<float_sw4*> dev_sg_str_x, dev_sg_str_y, dev_sg_str_z;$/;"	m	class:EW
dev_sg_str_y	src/EW.h	/^   vector<float_sw4*> dev_sg_str_x, dev_sg_str_y, dev_sg_str_z;$/;"	m	class:EW
dev_sg_str_z	src/EW.h	/^   vector<float_sw4*> dev_sg_str_x, dev_sg_str_y, dev_sg_str_z;$/;"	m	class:EW
dgmodule	src/dgmodule.f90	/^module dgmodule$/;"	m
dp	src/type_defs.f90	/^  integer, parameter:: dp /;"	v	module:type_defs
dpdmt_dev	src/device-routines.C	/^__global__ void dpdmt_dev( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
dpdmtfort	src/ew-cfromfort.C	/^void EW::dpdmtfort( int ib, int ie, int jb, int je, int kb, int ke, float_sw4* up,$/;"	f	class:EW
dpdmtfort	src/rhs4th3fort.f	/^      subroutine dpdmtfort(/;"	s
dpdmtfortatt	src/rhs4th3fort.f	/^      subroutine dpdmtfortatt(/;"	s
dt_to_resolve	src/Source.C	/^float_sw4 Source::dt_to_resolve( int ppw ) const$/;"	f	class:Source
end_sequential	src/Parallel_IO.C	/^void Parallel_IO::end_sequential( MPI_Comm comm )$/;"	f	class:Parallel_IO
enforceBC	src/EW.C	/^void EW::enforceBC( vector<Sarray> & a_U, vector<Sarray>& a_Mu, vector<Sarray>& a_Lambda,$/;"	f	class:EW
enforceBCCU	src/EW_cuda.C	/^void EW::enforceBCCU( vector<Sarray> & a_U, vector<Sarray>& a_Mu, vector<Sarray>& a_Lambda,$/;"	f	class:EW
enforceCartTopo	src/EW.C	/^void EW::enforceCartTopo( vector<Sarray>& a_U )$/;"	f	class:EW
enforceCartTopo_dev	src/device-routines.C	/^__global__ void enforceCartTopo_dev( int ifirstCart, int ilastCart, int jfirstCart, int jlastCart, int kfirstCart, int klastCart,$/;"	f
enforceCartTopo_dev_rev	src/device-routines.C	/^__global__ void enforceCartTopo_dev_rev( int ifirstCart, int ilastCart, int jfirstCart, int jlastCart, int kfirstCart, int klastCart,$/;"	f
estimatePrecursor	src/Filter.C	/^float_sw4 Filter::estimatePrecursor()$/;"	f	class:Filter
estr	src/sacsubc.C	/^const char *estr[] = {$/;"	v
evalCorrector	src/EW.C	/^void EW::evalCorrector(vector<Sarray> & a_Up, vector<Sarray>& a_Rho,$/;"	f	class:EW
evalCorrectorCU	src/EW_cuda.C	/^void EW::evalCorrectorCU( vector<Sarray> & a_Up, vector<Sarray>& a_Rho,$/;"	f	class:EW
evalDpDmInTime	src/EW.C	/^void EW::evalDpDmInTime(vector<Sarray> & a_Up, vector<Sarray> & a_U, vector<Sarray> & a_Um,$/;"	f	class:EW
evalDpDmInTimeCU	src/EW_cuda.C	/^void EW::evalDpDmInTimeCU(vector<Sarray> & a_Up, vector<Sarray> & a_U, vector<Sarray> & a_Um,$/;"	f	class:EW
evalPredictor	src/EW.C	/^void EW::evalPredictor(vector<Sarray> & a_Up, vector<Sarray> & a_U, vector<Sarray> & a_Um,$/;"	f	class:EW
evalPredictorCU	src/EW_cuda.C	/^void EW::evalPredictorCU( vector<Sarray> & a_Up, vector<Sarray> & a_U, vector<Sarray> & a_Um,$/;"	f	class:EW
evalRHS	src/EW.C	/^void EW::evalRHS(vector<Sarray> & a_U, vector<Sarray>& a_Mu, vector<Sarray>& a_Lambda,$/;"	f	class:EW
evalRHSCU	src/EW_cuda.C	/^void EW::evalRHSCU(vector<Sarray> & a_U, vector<Sarray>& a_Mu, vector<Sarray>& a_Lambda,$/;"	f	class:EW
evalTimeFunc_t	src/GridPointSource.C	/^float_sw4 GridPointSource::evalTimeFunc_t(float_sw4 t) const$/;"	f	class:GridPointSource
evalTimeFunc_tt	src/GridPointSource.C	/^float_sw4 GridPointSource::evalTimeFunc_tt(float_sw4 t) const$/;"	f	class:GridPointSource
evalTimeFunc_ttt	src/GridPointSource.C	/^float_sw4 GridPointSource::evalTimeFunc_ttt(float_sw4 t) const$/;"	f	class:GridPointSource
evalTimeFunc_tttt	src/GridPointSource.C	/^float_sw4 GridPointSource::evalTimeFunc_tttt(float_sw4 t) const$/;"	f	class:GridPointSource
evaluate	src/Filter.C	/^void Filter::evaluate(int N, float_sw4 *u, float_sw4 *mf)$/;"	f	class:Filter
exactSol	src/EW.C	/^bool EW::exactSol( float_sw4 a_t, vector<Sarray> & a_U, vector<Source*>& sources )$/;"	f	class:EW
exact_testmoments	src/Source.C	/^void Source::exact_testmoments( int kx[3], int ky[3], int kz[3], float_sw4 momex[3] )$/;"	f	class:Source
extractRecordData	src/EW.C	/^void EW::extractRecordData(TimeSeries::receiverMode mode, int i0, int j0, int k0, int g0, $/;"	f	class:EW
extractRecordDataCU	src/EW_cuda.C	/^void EW::extractRecordDataCU( int nt, int* mode, int* i0v, int* j0v, int* k0v,$/;"	f	class:EW
extractRecordData_dev	src/device-routines.C	/^__global__ void extractRecordData_dev( int nt, int* mode, int* i0v, int* j0v, int* k0v,$/;"	f
extract_subarray	src/Sarray.C	/^void Sarray::extract_subarray( int ib, int ie, int jb, int je, int kb,$/;"	f	class:Sarray
extrapolateInXY	src/EW.C	/^void EW::extrapolateInXY( vector<Sarray>& field )$/;"	f	class:EW
extrapolateInZ	src/EW.C	/^void EW::extrapolateInZ( int g, Sarray& field, bool lowk, bool highk )$/;"	f	class:EW
factor	src/dgmodule.f90	/^  SUBROUTINE factor(/;"	s	module:dgmodule
fg	tests/testil/testil.C	/^void fg(double x,double y,double z, double eqs[3] )$/;"	f
fhdr_default	src/sacsubc.C	/^float  fhdr_default = -12345.;$/;"	v
find_cuda_device	src/EW_cuda.C	/^void EW::find_cuda_device()$/;"	f	class:EW
find_min_exponent	src/Source.C	/^float_sw4 Source::find_min_exponent() const$/;"	f	class:Source
find_topo_zcoord_all	src/EW.C	/^bool EW::find_topo_zcoord_all( float_sw4 X, float_sw4 Y, float_sw4& Ztopo )$/;"	f	class:EW
find_topo_zcoord_owner	src/EW.C	/^bool EW::find_topo_zcoord_owner( float_sw4 X, float_sw4 Y, float_sw4& Ztopo )$/;"	f	class:EW
float_sw4	src/double/sw4.h	35;"	d
float_sw4	src/float/sw4.h	35;"	d
float_sw4	tests/testil/sw4.h	4;"	d
fo	src/device-routines.C	9379;"	d	file:
forcing	src/curvilinear-c.C	500;"	d	file:
forcing	src/curvilinear-c.C	615;"	d	file:
forcing	src/curvilinear-c.C	656;"	d	file:
forcing	src/device-routines.C	8651;"	d	file:
forcing	src/device-routines.C	8776;"	d	file:
forcing	src/device-routines.C	8791;"	d	file:
forcing	src/device-routines.C	8918;"	d	file:
forcing_dev	src/device-routines.C	/^__global__ void forcing_dev( float_sw4 a_t, Sarray* a_F, int ng,$/;"	f
freesurfcurvisg	src/curvilinear-c.C	/^void EW::freesurfcurvisg( int ib, int ie, int jb, int je, int kb, int ke,$/;"	f	class:EW
freesurfcurvisg_dev	src/device-routines.C	/^__global__ void freesurfcurvisg_dev( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
freesurfcurvisg_dev_rev	src/device-routines.C	/^__global__ void freesurfcurvisg_dev_rev( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
freesurfcurvisg_rev	src/curvilinear-c.C	/^void EW::freesurfcurvisg_rev( int ib, int ie, int jb, int je, int kb, int ke,$/;"	f	class:EW
generate_ghgrid	tests/testil/grid-utilities.C	/^void generate_ghgrid( int ib, int ie, int jb, int je, int kb, int ke,$/;"	f
generate_grid	src/EW.C	/^void EW::generate_grid()$/;"	f	class:EW
getAmplitude	src/Source.C	/^float_sw4 Source::getAmplitude() const$/;"	f	class:Source
getDepth	src/EW.C	/^bool EW::getDepth( float_sw4 x, float_sw4 y, float_sw4 z, float_sw4 & depth )$/;"	f	class:EW
getDepth	src/Source.C	/^float_sw4 Source::getDepth() const$/;"	f	class:Source
getForces	src/Source.C	/^void Source::getForces( float_sw4& fx, float_sw4& fy, float_sw4& fz ) const$/;"	f	class:Source
getFrequency	src/Source.C	/^float_sw4 Source::getFrequency() const$/;"	f	class:Source
getFxyz	src/GridPointSource.C	/^void GridPointSource::getFxyz( float_sw4 t, float_sw4* fxyz ) const$/;"	f	class:GridPointSource
getFxyz_notime	src/GridPointSource.C	/^void GridPointSource::getFxyz_notime( float_sw4* fxyz ) const$/;"	f	class:GridPointSource
getFxyztt	src/GridPointSource.C	/^void GridPointSource::getFxyztt( float_sw4 t, float_sw4* fxyz ) const$/;"	f	class:GridPointSource
getGlobalBoundingBox	src/EW.C	/^void EW::getGlobalBoundingBox(float_sw4 bbox[6])$/;"	f	class:EW
getGridAzimuth	src/EW.h	/^   float_sw4 getGridAzimuth() const {return mGeoAz;}$/;"	f	class:EW
getMetersPerDegree	src/EW.h	/^   float_sw4 getMetersPerDegree() const {return mMetersPerDegree;}$/;"	f	class:EW
getMode	src/TimeSeries.h	/^receiverMode getMode(){ return m_mode; }$/;"	f	class:TimeSeries
getMoments	src/Source.C	/^void Source::getMoments( float_sw4& mxx, float_sw4& mxy, float_sw4& mxz, float_sw4& myy, float_sw4& myz, float_sw4& mzz ) const$/;"	f	class:Source
getName	src/Source.h	/^  const std::string& getName() const { return mName; };$/;"	f	class:Source
getNumberOfWritersPFS	src/EW.h	/^   int getNumberOfWritersPFS() const { return m_nwriters;}$/;"	f	class:EW
getOffset	src/Source.C	/^float_sw4 Source::getOffset() const$/;"	f	class:Source
getStationName	src/TimeSeries.h	/^std::string getStationName(){return m_staName;}$/;"	f	class:TimeSeries
getTfunc	src/Source.h	/^  timeDep getTfunc() const {return mTimeDependence;}$/;"	f	class:Source
getTimeFunc	src/GridPointSource.C	/^float_sw4 GridPointSource::getTimeFunc(float_sw4 t) const$/;"	f	class:GridPointSource
getVerbosity	src/EW.h	/^   int getVerbosity() const {return 0;}$/;"	f	class:EW
getX	src/TimeSeries.h	/^float_sw4 getX() const {return mX;}$/;"	f	class:TimeSeries
getX0	src/Source.C	/^float_sw4 Source::getX0() const$/;"	f	class:Source
getY	src/TimeSeries.h	/^float_sw4 getY() const {return mY;}$/;"	f	class:TimeSeries
getY0	src/Source.C	/^float_sw4 Source::getY0() const$/;"	f	class:Source
getZ	src/TimeSeries.h	/^float_sw4 getZ() const {return mZ;}$/;"	f	class:TimeSeries
getZ0	src/Source.C	/^float_sw4 Source::getZ0() const$/;"	f	class:Source
get_CorrectForMu	src/Source.h	/^  bool get_CorrectForMu(){return mShearModulusFactor;};$/;"	f	class:Source
get_comm_sides	src/dgmodule.f90	/^  SUBROUTINE get_comm_sides(/;"	s	module:dgmodule
get_corner_freq1	src/Filter.h	/^float_sw4 get_corner_freq1(){return m_f1;}$/;"	f	class:Filter
get_corner_freq2	src/Filter.h	/^float_sw4 get_corner_freq2(){return m_f2;}$/;"	f	class:Filter
get_data	tests/testil/testil.C	/^void get_data( double x, double y, double z, double& u, double& v, double& w, $/;"	f
get_dirac_source	src/dgmodule.f90	/^  SUBROUTINE get_dirac_source(/;"	s	module:dgmodule
get_exact_point_source	src/EW.C	/^void EW::get_exact_point_source( float_sw4* up, float_sw4 t, int g, Source& source,$/;"	f	class:EW
get_exact_point_source_dG	src/EW-dg.C	/^void EW::get_exact_point_source_dG(double* u, double t, double x, double y, double z)$/;"	f	class:EW
get_initial_data	src/dgmodule.f90	/^  SUBROUTINE get_initial_data(/;"	s	module:dgmodule
get_order	src/Filter.h	/^int get_order(){return m_poles;}$/;"	f	class:Filter
get_parameters	src/Source.C	/^void Source::get_parameters( float_sw4 x[11] ) const$/;"	f	class:Source
get_passes	src/Filter.h	/^int get_passes(){return m_passes;}$/;"	f	class:Filter
get_recorder	src/dgmodule.f90	/^  SUBROUTINE get_recorder(/;"	s	module:dgmodule
get_source_tay_coeff	src/dgmodule.f90	/^  SUBROUTINE get_source_tay_coeff(/;"	s	module:dgmodule
get_tw_omega	src/SuperGrid.h	/^float_sw4 get_tw_omega() const {return m_tw_omega;}$/;"	f	class:SuperGrid
get_type	src/Filter.h	/^FilterType get_type(){return m_type;}$/;"	f	class:Filter
get_utc	src/EW.C	/^void EW::get_utc( int utc[7] ) const$/;"	f	class:EW
getfhv	src/sacsubc.C	/^void getfhv(char *strcmd,float *fval,int *nerr)$/;"	f
getihv	src/sacsubc.C	/^void getihv(char *strcmd,char *strval,int *nerr)$/;"	f
getkhv	src/sacsubc.C	/^void getkhv(char *strcmd,char *cval,int *nerr)$/;"	f
getlhv	src/sacsubc.C	/^void getlhv(char *strcmd,int *lval,int *nerr)$/;"	f
getmetdwgh	src/Source.C	/^void Source::getmetdwgh( float_sw4 ai, float_sw4 wgh[8] ) const$/;"	f	class:Source
getmetdwgh7	src/Source.C	/^void Source::getmetdwgh7( float_sw4 ai, float_sw4 wgh[7] ) const$/;"	f	class:Source
getmetwgh	src/Source.C	/^void Source::getmetwgh( float_sw4 ai, float_sw4 wgh[8], float_sw4 dwgh[8],$/;"	f	class:Source
getmetwgh7	src/Source.C	/^void Source::getmetwgh7( float_sw4 ai, float_sw4 wgh[7] ) const$/;"	f	class:Source
getnhv	src/sacsubc.C	/^void getnhv(char *strcmd,int *ival,int *nerr)$/;"	f
getsourcedwgh	src/Source.C	/^void Source::getsourcedwgh( float_sw4 ai, float_sw4 wgh[6], float_sw4 dwghda[6], float_sw4 ddwghda[6] ) const$/;"	f	class:Source
getsourcedwghNM1sm6	src/Source.C	/^void Source::getsourcedwghNM1sm6(  float_sw4 alph,  float_sw4 dwghk[6] ) const$/;"	f	class:Source
getsourcedwghNM2sm6	src/Source.C	/^void Source::getsourcedwghNM2sm6(  float_sw4 alph,  float_sw4 dwghk[6] ) const$/;"	f	class:Source
getsourcedwghNsm6	src/Source.C	/^void Source::getsourcedwghNsm6(  float_sw4 alph,  float_sw4 dwghk[6] ) const$/;"	f	class:Source
getsourcedwghP1sm6	src/Source.C	/^void Source::getsourcedwghP1sm6(  float_sw4 alph,  float_sw4 dwghk[6] ) const$/;"	f	class:Source
getsourcedwghlow	src/Source.C	/^void Source::getsourcedwghlow( float_sw4 ai, float_sw4 wgh[6], float_sw4 dwghda[6], float_sw4 ddwghda[6] ) const$/;"	f	class:Source
getsourcewgh	src/Source.C	/^void Source::getsourcewgh( float_sw4 ai, float_sw4 wgh[6], float_sw4 dwghda[6], float_sw4 ddwghda[6] ) const$/;"	f	class:Source
getsourcewghNM1sm6	src/Source.C	/^void Source::getsourcewghNM1sm6(  float_sw4 alph,  float_sw4 wghk[6] ) const$/;"	f	class:Source
getsourcewghNM2sm6	src/Source.C	/^void Source::getsourcewghNM2sm6(  float_sw4 alph,  float_sw4 wghk[6] ) const$/;"	f	class:Source
getsourcewghNsm6	src/Source.C	/^void Source::getsourcewghNsm6(  float_sw4 alph,  float_sw4 wghk[6] ) const$/;"	f	class:Source
getsourcewghP1sm6	src/Source.C	/^void Source::getsourcewghP1sm6(  float_sw4 alph,  float_sw4 wghk[6] ) const$/;"	f	class:Source
getsourcewghlow	src/Source.C	/^void Source::getsourcewghlow( float_sw4 ai, float_sw4 wgh[6], float_sw4 dwghda[6], float_sw4 ddwghda[6] ) const$/;"	f	class:Source
gettimec_	tests/testil/gettimec.c	/^double gettimec_()$/;"	f
gettopowgh	src/EW.C	/^void EW::gettopowgh( float_sw4 ai, float_sw4 wgh[8] ) const$/;"	f	class:EW
ghcof	src/device-routines.C	1000;"	d	file:
ghcof	src/device-routines.C	1276;"	d	file:
ghcof	src/device-routines.C	1296;"	d	file:
ghcof	src/device-routines.C	1582;"	d	file:
ghcof	src/device-routines.C	5935;"	d	file:
ghcof	src/device-routines.C	6451;"	d	file:
ghcof	src/device-routines.C	6469;"	d	file:
ghcof	src/device-routines.C	6988;"	d	file:
ghcof	src/device-routines.C	7693;"	d	file:
ghcof	src/device-routines.C	7968;"	d	file:
ghcof	src/device-routines.C	7989;"	d	file:
ghcof	src/device-routines.C	8275;"	d	file:
ghcof	src/ew-cfromfort.C	1491;"	d	file:
ghcof	src/ew-cfromfort.C	1937;"	d	file:
ghcof	src/rhs4sg.C	60;"	d	file:
ghcof	src/rhs4sg_rev.C	68;"	d	file:
ghcof	src/rhs4sg_revNW.C	68;"	d	file:
ghcof	src/rhs4sgcurv.C	1405;"	d	file:
ghcof	src/rhs4sgcurv.C	83;"	d	file:
ghcof	src/rhs4sgcurv_rev.C	1394;"	d	file:
ghcof	src/rhs4sgcurv_rev.C	82;"	d	file:
ghcof	tests/testil/rhs4sg.c	53;"	d	file:
ghcof	tests/testil/rhs4sg_rev.c	37;"	d	file:
ghcof	tests/testil/rhs4sgcurv.C	1374;"	d	file:
ghcof	tests/testil/rhs4sgcurv.C	52;"	d	file:
ghcof	tests/testil/rhs4sgcurv_rev.C	1363;"	d	file:
ghcof	tests/testil/rhs4sgcurv_rev.C	51;"	d	file:
grid_mapping	src/EW.C	/^void EW::grid_mapping( float_sw4 q, float_sw4 r, float_sw4 s, float_sw4& x,$/;"	f	class:EW
gridinfo	src/curvilinear-c.C	/^void EW::gridinfo( int ib, int ie, int jb, int je, int kb, int ke,$/;"	f	class:EW
guess_mpi_cmd	pytest/test_sw4lite.py	/^def guess_mpi_cmd(mpi_tasks, omp_threads, verbose):$/;"	f
has_gpu	src/EWCuda.h	/^   bool has_gpu(){return m_ndevice>0;}$/;"	f	class:EWCuda
help	pytest/test_sw4lite.py	/^                        help="testing level")$/;"	v
iBrune	src/double/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	e	enum:timeDep
iBrune	src/float/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	e	enum:timeDep
iBrune	tests/testil/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	e	enum:timeDep
iBruneSmoothed	src/double/sw4.h	/^ iBruneSmoothed, iGaussianWindow, iLiu, iDiscrete, iDBrune, iDirac, iC6SmoothBump, iDiscrete6moments };$/;"	e	enum:timeDep
iBruneSmoothed	src/float/sw4.h	/^ iBruneSmoothed, iGaussianWindow, iLiu, iDiscrete, iDBrune, iDirac, iC6SmoothBump, iDiscrete6moments };$/;"	e	enum:timeDep
iBruneSmoothed	tests/testil/sw4.h	/^ iBruneSmoothed, iGaussianWindow, iLiu, iDiscrete, iDBrune, iDirac, iC6SmoothBump, iDiscrete6moments };$/;"	e	enum:timeDep
iC6SmoothBump	src/double/sw4.h	/^ iBruneSmoothed, iGaussianWindow, iLiu, iDiscrete, iDBrune, iDirac, iC6SmoothBump, iDiscrete6moments };$/;"	e	enum:timeDep
iC6SmoothBump	src/float/sw4.h	/^ iBruneSmoothed, iGaussianWindow, iLiu, iDiscrete, iDBrune, iDirac, iC6SmoothBump, iDiscrete6moments };$/;"	e	enum:timeDep
iC6SmoothBump	tests/testil/sw4.h	/^ iBruneSmoothed, iGaussianWindow, iLiu, iDiscrete, iDBrune, iDirac, iC6SmoothBump, iDiscrete6moments };$/;"	e	enum:timeDep
iDBrune	src/double/sw4.h	/^ iBruneSmoothed, iGaussianWindow, iLiu, iDiscrete, iDBrune, iDirac, iC6SmoothBump, iDiscrete6moments };$/;"	e	enum:timeDep
iDBrune	src/float/sw4.h	/^ iBruneSmoothed, iGaussianWindow, iLiu, iDiscrete, iDBrune, iDirac, iC6SmoothBump, iDiscrete6moments };$/;"	e	enum:timeDep
iDBrune	tests/testil/sw4.h	/^ iBruneSmoothed, iGaussianWindow, iLiu, iDiscrete, iDBrune, iDirac, iC6SmoothBump, iDiscrete6moments };$/;"	e	enum:timeDep
iDirac	src/double/sw4.h	/^ iBruneSmoothed, iGaussianWindow, iLiu, iDiscrete, iDBrune, iDirac, iC6SmoothBump, iDiscrete6moments };$/;"	e	enum:timeDep
iDirac	src/float/sw4.h	/^ iBruneSmoothed, iGaussianWindow, iLiu, iDiscrete, iDBrune, iDirac, iC6SmoothBump, iDiscrete6moments };$/;"	e	enum:timeDep
iDirac	tests/testil/sw4.h	/^ iBruneSmoothed, iGaussianWindow, iLiu, iDiscrete, iDBrune, iDirac, iC6SmoothBump, iDiscrete6moments };$/;"	e	enum:timeDep
iDiscrete	src/double/sw4.h	/^ iBruneSmoothed, iGaussianWindow, iLiu, iDiscrete, iDBrune, iDirac, iC6SmoothBump, iDiscrete6moments };$/;"	e	enum:timeDep
iDiscrete	src/float/sw4.h	/^ iBruneSmoothed, iGaussianWindow, iLiu, iDiscrete, iDBrune, iDirac, iC6SmoothBump, iDiscrete6moments };$/;"	e	enum:timeDep
iDiscrete	tests/testil/sw4.h	/^ iBruneSmoothed, iGaussianWindow, iLiu, iDiscrete, iDBrune, iDirac, iC6SmoothBump, iDiscrete6moments };$/;"	e	enum:timeDep
iDiscrete6moments	src/double/sw4.h	/^ iBruneSmoothed, iGaussianWindow, iLiu, iDiscrete, iDBrune, iDirac, iC6SmoothBump, iDiscrete6moments };$/;"	e	enum:timeDep
iDiscrete6moments	src/float/sw4.h	/^ iBruneSmoothed, iGaussianWindow, iLiu, iDiscrete, iDBrune, iDirac, iC6SmoothBump, iDiscrete6moments };$/;"	e	enum:timeDep
iDiscrete6moments	tests/testil/sw4.h	/^ iBruneSmoothed, iGaussianWindow, iLiu, iDiscrete, iDBrune, iDirac, iC6SmoothBump, iDiscrete6moments };$/;"	e	enum:timeDep
iErf	src/double/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	e	enum:timeDep
iErf	src/float/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	e	enum:timeDep
iErf	tests/testil/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	e	enum:timeDep
iGaussian	src/double/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	e	enum:timeDep
iGaussian	src/float/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	e	enum:timeDep
iGaussian	tests/testil/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	e	enum:timeDep
iGaussianWindow	src/double/sw4.h	/^ iBruneSmoothed, iGaussianWindow, iLiu, iDiscrete, iDBrune, iDirac, iC6SmoothBump, iDiscrete6moments };$/;"	e	enum:timeDep
iGaussianWindow	src/float/sw4.h	/^ iBruneSmoothed, iGaussianWindow, iLiu, iDiscrete, iDBrune, iDirac, iC6SmoothBump, iDiscrete6moments };$/;"	e	enum:timeDep
iGaussianWindow	tests/testil/sw4.h	/^ iBruneSmoothed, iGaussianWindow, iLiu, iDiscrete, iDBrune, iDirac, iC6SmoothBump, iDiscrete6moments };$/;"	e	enum:timeDep
iLiu	src/double/sw4.h	/^ iBruneSmoothed, iGaussianWindow, iLiu, iDiscrete, iDBrune, iDirac, iC6SmoothBump, iDiscrete6moments };$/;"	e	enum:timeDep
iLiu	src/float/sw4.h	/^ iBruneSmoothed, iGaussianWindow, iLiu, iDiscrete, iDBrune, iDirac, iC6SmoothBump, iDiscrete6moments };$/;"	e	enum:timeDep
iLiu	tests/testil/sw4.h	/^ iBruneSmoothed, iGaussianWindow, iLiu, iDiscrete, iDBrune, iDirac, iC6SmoothBump, iDiscrete6moments };$/;"	e	enum:timeDep
iRamp	src/double/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	e	enum:timeDep
iRamp	src/float/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	e	enum:timeDep
iRamp	tests/testil/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	e	enum:timeDep
iRicker	src/double/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	e	enum:timeDep
iRicker	src/float/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	e	enum:timeDep
iRicker	tests/testil/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	e	enum:timeDep
iRickerInt	src/double/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	e	enum:timeDep
iRickerInt	src/float/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	e	enum:timeDep
iRickerInt	tests/testil/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	e	enum:timeDep
iSawtooth	src/double/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	e	enum:timeDep
iSawtooth	src/float/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	e	enum:timeDep
iSawtooth	tests/testil/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	e	enum:timeDep
iSmoothWave	src/double/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	e	enum:timeDep
iSmoothWave	src/float/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	e	enum:timeDep
iSmoothWave	tests/testil/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	e	enum:timeDep
iTriangle	src/double/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	e	enum:timeDep
iTriangle	src/float/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	e	enum:timeDep
iTriangle	tests/testil/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	e	enum:timeDep
iVerySmoothBump	src/double/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	e	enum:timeDep
iVerySmoothBump	src/float/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	e	enum:timeDep
iVerySmoothBump	tests/testil/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	e	enum:timeDep
i_write	src/Parallel_IO.h	/^   int i_write() const {return m_iwrite==1;}$/;"	f	class:Parallel_IO
ignore	src/Source.h	/^  bool ignore() const {return mIgnore;}$/;"	f	class:Source
ihdr	src/sacsubc.h	/^	INT ihdr[40];$/;"	m	struct:sachdr_
ihdr_default	src/sacsubc.C	/^int    ihdr_default = -12345 ;$/;"	v
in_domain	src/Sarray.C	/^bool Sarray::in_domain( int i, int j, int k )$/;"	f	class:Sarray
in_range	src/Sarray.h	/^   inline bool in_range( int c, int i, int j, int k )$/;"	f	class:Sarray
index	src/Sarray.h	/^   SW4_HDDECLARE size_t index( int c, int i, int j, int k ) {return m_base+m_offc*c+m_offi*i+m_offj*j+m_offk*k;}$/;"	f	class:Sarray
index	src/Sarray.h	/^   size_t index( int i, int j, int k ) {return m_base+m_offc+m_offi*i+m_offj*j+m_offk*k;}$/;"	f	class:Sarray
inihdr	src/sacsubc.C	/^void inihdr()$/;"	f
init_array	src/Parallel_IO.C	/^void Parallel_IO::init_array( int globalsizes[3], int localsizes[3], $/;"	f	class:Parallel_IO
init_dev	src/GridPointSource.C	/^__device__ void GridPointSource::init_dev( )$/;"	f	class:GridPointSource
init_forcing_dev	src/device-routines.C	/^__global__ void init_forcing_dev( GridPointSource* point_sources, int nsrc )$/;"	f
init_pio	src/Parallel_IO.C	/^void Parallel_IO::init_pio( int iwrite, int pfs, int ihave_array )$/;"	f	class:Parallel_IO
init_point_sourcesCU	src/EW_cuda.C	/^void EW::init_point_sourcesCU( )$/;"	f	class:EW
initialData	src/EW-dg.C	/^void EW::initialData(double * udg, double * vdg)$/;"	f	class:EW
initializeTimeFunction	src/GridPointSource.C	/^__device__ void GridPointSource::initializeTimeFunction()$/;"	f	class:GridPointSource
initialize_gpu	src/EWCuda.C	/^void EWCuda::initialize_gpu(int myrank)$/;"	f	class:EWCuda
insert_subarray	src/Sarray.C	/^void Sarray::insert_subarray( int ib, int ie, int jb, int je, int kb,$/;"	f	class:Sarray
inside_block	src/MaterialBlock.C	/^bool MaterialBlock::inside_block( float_sw4 x, float_sw4 y, float_sw4 z )$/;"	f	class:MaterialBlock
interior_point_in_proc	src/EW.C	/^bool EW::interior_point_in_proc(int a_i, int a_j, int a_g)$/;"	f	class:EW
interpolate_topography	src/EW.C	/^bool EW::interpolate_topography( float_sw4 q, float_sw4 r, float_sw4 & Z0, bool smoothed)$/;"	f	class:EW
intersection	src/Sarray.C	/^void Sarray::intersection( int ib, int ie, int jb, int je, int kb, int ke, int wind[6] )$/;"	f	class:Sarray
invert_grid_mapping	src/EW.C	/^bool EW::invert_grid_mapping( int g, float_sw4 x, float_sw4 y, float_sw4 z, $/;"	f	class:EW
isMomentSource	src/Source.C	/^bool Source::isMomentSource() const$/;"	f	class:Source
is_defined	src/Sarray.h	/^   inline bool is_defined()$/;"	f	class:Sarray
is_onesided	src/EW.C	/^bool EW::is_onesided( int g, int side ) const$/;"	f	class:EW
istr	src/sacsubc.C	/^const char *istr[] = {$/;"	v
jac	src/curvilinear-c.C	170;"	d	file:
jac	src/curvilinear-c.C	190;"	d	file:
jac	src/curvilinear-c.C	293;"	d	file:
jac	src/curvilinear-c.C	315;"	d	file:
jac	src/curvilinear-c.C	376;"	d	file:
jac	src/curvilinear-c.C	399;"	d	file:
jac	src/curvilinear-c.C	460;"	d	file:
jac	src/curvilinear-c.C	67;"	d	file:
jac	src/device-routines.C	2404;"	d	file:
jac	src/device-routines.C	3303;"	d	file:
jac	src/device-routines.C	3321;"	d	file:
jac	src/device-routines.C	413;"	d	file:
jac	src/device-routines.C	4216;"	d	file:
jac	src/device-routines.C	4232;"	d	file:
jac	src/device-routines.C	470;"	d	file:
jac	src/device-routines.C	490;"	d	file:
jac	src/device-routines.C	5062;"	d	file:
jac	src/device-routines.C	5077;"	d	file:
jac	src/device-routines.C	548;"	d	file:
jac	src/device-routines.C	570;"	d	file:
jac	src/device-routines.C	5911;"	d	file:
jac	src/device-routines.C	5927;"	d	file:
jac	src/device-routines.C	625;"	d	file:
jac	src/device-routines.C	6443;"	d	file:
jac	src/device-routines.C	6461;"	d	file:
jac	src/device-routines.C	646;"	d	file:
jac	src/device-routines.C	6980;"	d	file:
jac	src/device-routines.C	702;"	d	file:
jac	src/ew-cfromfort.C	1175;"	d	file:
jac	src/ew-cfromfort.C	1236;"	d	file:
jac	src/ew-cfromfort.C	1257;"	d	file:
jac	src/ew-cfromfort.C	1318;"	d	file:
jac	src/ew-cfromfort.C	1338;"	d	file:
jac	src/ew-cfromfort.C	1400;"	d	file:
jac	src/ew-cfromfort.C	1420;"	d	file:
jac	src/ew-cfromfort.C	1482;"	d	file:
jac	src/rhs4sgcurv.C	1397;"	d	file:
jac	src/rhs4sgcurv.C	75;"	d	file:
jac	src/rhs4sgcurv_rev.C	1386;"	d	file:
jac	src/rhs4sgcurv_rev.C	74;"	d	file:
jac	tests/testil/metricC.C	122;"	d	file:
jac	tests/testil/metricC.C	142;"	d	file:
jac	tests/testil/metricC.C	19;"	d	file:
jac	tests/testil/metricC.C	245;"	d	file:
jac	tests/testil/rhs4sgcurv.C	1366;"	d	file:
jac	tests/testil/rhs4sgcurv.C	44;"	d	file:
jac	tests/testil/rhs4sgcurv_rev.C	1355;"	d	file:
jac	tests/testil/rhs4sgcurv_rev.C	43;"	d	file:
la	src/curvilinear-c.C	497;"	d	file:
la	src/curvilinear-c.C	612;"	d	file:
la	src/curvilinear-c.C	653;"	d	file:
la	src/device-routines.C	1268;"	d	file:
la	src/device-routines.C	1288;"	d	file:
la	src/device-routines.C	1574;"	d	file:
la	src/device-routines.C	2130;"	d	file:
la	src/device-routines.C	2385;"	d	file:
la	src/device-routines.C	2403;"	d	file:
la	src/device-routines.C	3302;"	d	file:
la	src/device-routines.C	3320;"	d	file:
la	src/device-routines.C	4215;"	d	file:
la	src/device-routines.C	4231;"	d	file:
la	src/device-routines.C	5061;"	d	file:
la	src/device-routines.C	5076;"	d	file:
la	src/device-routines.C	5910;"	d	file:
la	src/device-routines.C	5926;"	d	file:
la	src/device-routines.C	6442;"	d	file:
la	src/device-routines.C	6460;"	d	file:
la	src/device-routines.C	6979;"	d	file:
la	src/device-routines.C	7001;"	d	file:
la	src/device-routines.C	719;"	d	file:
la	src/device-routines.C	7323;"	d	file:
la	src/device-routines.C	7344;"	d	file:
la	src/device-routines.C	7666;"	d	file:
la	src/device-routines.C	7685;"	d	file:
la	src/device-routines.C	7960;"	d	file:
la	src/device-routines.C	7981;"	d	file:
la	src/device-routines.C	8267;"	d	file:
la	src/device-routines.C	8646;"	d	file:
la	src/device-routines.C	8771;"	d	file:
la	src/device-routines.C	8786;"	d	file:
la	src/device-routines.C	8913;"	d	file:
la	src/device-routines.C	975;"	d	file:
la	src/device-routines.C	992;"	d	file:
la	src/rhs4sg.C	52;"	d	file:
la	src/rhs4sg.C	843;"	d	file:
la	src/rhs4sg_rev.C	59;"	d	file:
la	src/rhs4sg_rev.C	858;"	d	file:
la	src/rhs4sg_revNW.C	59;"	d	file:
la	src/rhs4sg_revNW.C	862;"	d	file:
la	src/rhs4sgcurv.C	1396;"	d	file:
la	src/rhs4sgcurv.C	74;"	d	file:
la	src/rhs4sgcurv_rev.C	1385;"	d	file:
la	src/rhs4sgcurv_rev.C	73;"	d	file:
la	tests/testil/rhs4sg.c	45;"	d	file:
la	tests/testil/rhs4sg.c	833;"	d	file:
la	tests/testil/rhs4sg_rev.c	28;"	d	file:
la	tests/testil/rhs4sg_rev.c	815;"	d	file:
la	tests/testil/rhs4sgcurv.C	1365;"	d	file:
la	tests/testil/rhs4sgcurv.C	43;"	d	file:
la	tests/testil/rhs4sgcurv_rev.C	1354;"	d	file:
la	tests/testil/rhs4sgcurv_rev.C	42;"	d	file:
lastofmonth	src/TimeSeries.C	/^int TimeSeries::lastofmonth( int year, int month )$/;"	f	class:TimeSeries
less_than	src/EW.C	/^bool less_than( GridPointSource* ptsrc1, GridPointSource* ptsrc2 )$/;"	f
lglnodes	src/lglnodes.f90	/^subroutine lglnodes(/;"	s
li	src/type_defs.f90	/^  integer, parameter:: li /;"	v	module:type_defs
limitFrequency	src/GridPointSource.C	/^void GridPointSource::limitFrequency(float_sw4 max_freq)$/;"	f	class:GridPointSource
limit_frequency	src/Source.C	/^void Source::limit_frequency( int ppw, float_sw4 minvsoh )$/;"	f	class:Source
linTaper	src/SuperGrid.C	/^float_sw4 SuperGrid::linTaper(float_sw4 x) const$/;"	f	class:SuperGrid
lowPass	src/Filter.h	/^enum FilterType{lowPass, bandPass};$/;"	e	enum:FilterType
lu	src/device-routines.C	1270;"	d	file:
lu	src/device-routines.C	1290;"	d	file:
lu	src/device-routines.C	1576;"	d	file:
lu	src/device-routines.C	2132;"	d	file:
lu	src/device-routines.C	2387;"	d	file:
lu	src/device-routines.C	2406;"	d	file:
lu	src/device-routines.C	3305;"	d	file:
lu	src/device-routines.C	3323;"	d	file:
lu	src/device-routines.C	4218;"	d	file:
lu	src/device-routines.C	4234;"	d	file:
lu	src/device-routines.C	5064;"	d	file:
lu	src/device-routines.C	5079;"	d	file:
lu	src/device-routines.C	5913;"	d	file:
lu	src/device-routines.C	5929;"	d	file:
lu	src/device-routines.C	6445;"	d	file:
lu	src/device-routines.C	6463;"	d	file:
lu	src/device-routines.C	6982;"	d	file:
lu	src/device-routines.C	7003;"	d	file:
lu	src/device-routines.C	721;"	d	file:
lu	src/device-routines.C	7325;"	d	file:
lu	src/device-routines.C	7346;"	d	file:
lu	src/device-routines.C	7668;"	d	file:
lu	src/device-routines.C	7687;"	d	file:
lu	src/device-routines.C	7962;"	d	file:
lu	src/device-routines.C	7983;"	d	file:
lu	src/device-routines.C	8269;"	d	file:
lu	src/device-routines.C	9376;"	d	file:
lu	src/device-routines.C	977;"	d	file:
lu	src/device-routines.C	994;"	d	file:
lu	src/rhs4sg.C	54;"	d	file:
lu	src/rhs4sg.C	845;"	d	file:
lu	src/rhs4sg_rev.C	62;"	d	file:
lu	src/rhs4sg_rev.C	860;"	d	file:
lu	src/rhs4sg_revNW.C	62;"	d	file:
lu	src/rhs4sg_revNW.C	864;"	d	file:
lu	src/rhs4sgcurv.C	1399;"	d	file:
lu	src/rhs4sgcurv.C	77;"	d	file:
lu	src/rhs4sgcurv_rev.C	1388;"	d	file:
lu	src/rhs4sgcurv_rev.C	76;"	d	file:
lu	tests/testil/rhs4sg.c	47;"	d	file:
lu	tests/testil/rhs4sg.c	835;"	d	file:
lu	tests/testil/rhs4sg_rev.c	31;"	d	file:
lu	tests/testil/rhs4sg_rev.c	817;"	d	file:
lu	tests/testil/rhs4sgcurv.C	1368;"	d	file:
lu	tests/testil/rhs4sgcurv.C	46;"	d	file:
lu	tests/testil/rhs4sgcurv_rev.C	1357;"	d	file:
lu	tests/testil/rhs4sgcurv_rev.C	45;"	d	file:
mAllocatedSize	src/TimeSeries.h	/^int mAllocatedSize;$/;"	m	class:TimeSeries
mBinaryMode	src/TimeSeries.h	/^bool mBinaryMode;$/;"	m	class:TimeSeries
mCFL	src/EW.h	/^   float_sw4 mCFL, mTstart, mTmax, mDt;$/;"	m	class:EW
mConstMetersPerLongitude	src/EW.h	/^   bool mConstMetersPerLongitude;$/;"	m	class:EW
mCoversAllPoints	src/MaterialData.h	/^bool mCoversAllPoints;$/;"	m	class:MaterialData
mCycleInterval	src/CheckPoint.h	/^   int mCycleInterval;$/;"	m	class:CheckPoint
mDt	src/EW.h	/^   float_sw4 mCFL, mTstart, mTmax, mDt;$/;"	m	class:EW
mEW	src/CheckPoint.h	/^   EW* mEW;$/;"	m	class:CheckPoint
mEW	src/MaterialBlock.h	/^  EW *mEW; \/\/ where is this pointer needed?$/;"	m	class:MaterialBlock
mEventDay	src/TimeSeries.h	/^int mEventYear, mEventMonth, mEventDay, mEventHour, mEventMinute;$/;"	m	class:TimeSeries
mEventHour	src/TimeSeries.h	/^int mEventYear, mEventMonth, mEventDay, mEventHour, mEventMinute;$/;"	m	class:TimeSeries
mEventMinute	src/TimeSeries.h	/^int mEventYear, mEventMonth, mEventDay, mEventHour, mEventMinute;$/;"	m	class:TimeSeries
mEventMonth	src/TimeSeries.h	/^int mEventYear, mEventMonth, mEventDay, mEventHour, mEventMinute;$/;"	m	class:TimeSeries
mEventSecond	src/TimeSeries.h	/^float_sw4 mEventSecond, m_rec_lat, m_rec_lon, m_rec_gp_lat, m_rec_gp_lon;$/;"	m	class:TimeSeries
mEventYear	src/TimeSeries.h	/^int mEventYear, mEventMonth, mEventDay, mEventHour, mEventMinute;$/;"	m	class:TimeSeries
mFilePrefix	src/CheckPoint.h	/^   std::string mFilePrefix;$/;"	m	class:CheckPoint
mForces	src/GridPointSource.h	/^  float_sw4 mForces[3];$/;"	m	class:GridPointSource
mForces	src/Source.h	/^  std::vector<float_sw4> mForces;$/;"	m	class:Source
mFreq	src/GridPointSource.h	/^  float_sw4 mFreq, mT0;$/;"	m	class:GridPointSource
mFreq	src/Source.h	/^  float_sw4 mFreq, mT0;$/;"	m	class:Source
mGPX	src/TimeSeries.h	/^float_sw4 mX, mY, mZ, mGPX, mGPY, mGPZ; \/\/ original and actual location$/;"	m	class:TimeSeries
mGPY	src/TimeSeries.h	/^float_sw4 mX, mY, mZ, mGPX, mGPY, mGPZ; \/\/ original and actual location$/;"	m	class:TimeSeries
mGPZ	src/TimeSeries.h	/^float_sw4 mX, mY, mZ, mGPX, mGPY, mGPZ; \/\/ original and actual location$/;"	m	class:TimeSeries
mGeoAz	src/EW.h	/^   float_sw4 mGeoAz, mLatOrigin, mLonOrigin, mMetersPerLongitude, mMetersPerDegree;$/;"	m	class:EW
mGlobalDims	src/CheckPoint.h	/^   std::vector<int*> mGlobalDims; \/\/ Global start + end indices for (i,j,k) for each grid level$/;"	m	class:CheckPoint
mGridSize	src/EW.h	/^   vector<float_sw4> mGridSize;$/;"	m	class:EW
mIgnore	src/Source.h	/^  bool mIgnore;$/;"	m	class:Source
mIpar	src/GridPointSource.h	/^  int* mIpar; $/;"	m	class:GridPointSource
mIpar	src/Source.h	/^  int* mIpar;$/;"	m	class:Source
mIsMomentSource	src/Source.h	/^  bool mIsMomentSource;$/;"	m	class:Source
mJ	src/EW.h	/^   Sarray mMetric, mJ;$/;"	m	class:EW
mLambda	src/EW.h	/^   vector<Sarray> mLambda;$/;"	m	class:EW
mLastTimeStep	src/TimeSeries.h	/^int mLastTimeStep;$/;"	m	class:TimeSeries
mLatOrigin	src/EW.h	/^   float_sw4 mGeoAz, mLatOrigin, mLonOrigin, mMetersPerLongitude, mMetersPerDegree;$/;"	m	class:EW
mLonOrigin	src/EW.h	/^   float_sw4 mGeoAz, mLatOrigin, mLonOrigin, mMetersPerLongitude, mMetersPerDegree;$/;"	m	class:EW
mMetersPerDegree	src/EW.h	/^   float_sw4 mGeoAz, mLatOrigin, mLonOrigin, mMetersPerLongitude, mMetersPerDegree;$/;"	m	class:EW
mMetersPerLongitude	src/EW.h	/^   float_sw4 mGeoAz, mLatOrigin, mLonOrigin, mMetersPerLongitude, mMetersPerDegree;$/;"	m	class:EW
mMetric	src/EW.h	/^   Sarray mMetric, mJ;$/;"	m	class:EW
mMu	src/EW.h	/^   vector<Sarray> mMu;$/;"	m	class:EW
mName	src/Source.h	/^  std::string mName;$/;"	m	class:Source
mNcyc	src/GridPointSource.h	/^  int mNcyc;$/;"	m	class:GridPointSource
mNcyc	src/Source.h	/^  int mNcyc;$/;"	m	class:Source
mNextTime	src/CheckPoint.h	/^   float_sw4 mNextTime;$/;"	m	class:CheckPoint
mNipar	src/GridPointSource.h	/^  int  mNpar, mNipar;$/;"	m	class:GridPointSource
mNipar	src/Source.h	/^  int mNpar, mNipar;$/;"	m	class:Source
mNpar	src/GridPointSource.h	/^  int  mNpar, mNipar;$/;"	m	class:GridPointSource
mNpar	src/Source.h	/^  int mNpar, mNipar;$/;"	m	class:Source
mNumberOfCartesianGrids	src/EW.h	/^   int mNumberOfGrids, mNumberOfCartesianGrids;$/;"	m	class:EW
mNumberOfGrids	src/EW.h	/^   int mNumberOfGrids, mNumberOfCartesianGrids;$/;"	m	class:EW
mNumberOfTimeSteps	src/EW.h	/^   int mNumberOfTimeSteps;$/;"	m	class:EW
mPar	src/GridPointSource.h	/^  float_sw4* mPar;$/;"	m	class:GridPointSource
mPar	src/Source.h	/^  float_sw4* mPar;$/;"	m	class:Source
mPath	src/EW.h	/^   string mPath;$/;"	m	class:EW
mPreceedZeros	src/CheckPoint.h	/^   int mPreceedZeros; \/\/ number of digits for unique time step in file names$/;"	m	class:CheckPoint
mPrintInterval	src/EW.h	/^   int mPrintInterval, mVerbose;$/;"	m	class:EW
mQ0	src/Source.h	/^  float_sw4 mQ0,mR0,mS0;$/;"	m	class:Source
mQuiet	src/EW.h	/^   bool mQuiet;$/;"	m	class:EW
mR0	src/Source.h	/^  float_sw4 mQ0,mR0,mS0;$/;"	m	class:Source
mRecordedFloats	src/TimeSeries.h	/^float**  mRecordedFloats;$/;"	m	class:TimeSeries
mRecordedSol	src/TimeSeries.h	/^float_sw4** mRecordedSol;$/;"	m	class:TimeSeries
mRestartFile	src/CheckPoint.h	/^   std::string mRestartFile;$/;"	m	class:CheckPoint
mRho	src/EW.h	/^   vector<Sarray> mRho;$/;"	m	class:EW
mS0	src/Source.h	/^  float_sw4 mQ0,mR0,mS0;$/;"	m	class:Source
mShearModulusFactor	src/Source.h	/^  bool mShearModulusFactor;$/;"	m	class:Source
mStartTime	src/CheckPoint.h	/^   float_sw4 mStartTime;$/;"	m	class:CheckPoint
mT0	src/GridPointSource.h	/^  float_sw4 mFreq, mT0;$/;"	m	class:GridPointSource
mT0	src/Source.h	/^  float_sw4 mFreq, mT0;$/;"	m	class:Source
mTime	src/CheckPoint.h	/^   float_sw4 mTime;$/;"	m	class:CheckPoint
mTimeDependence	src/GridPointSource.h	/^  timeDep mTimeDependence;$/;"	m	class:GridPointSource
mTimeDependence	src/Source.h	/^  timeDep mTimeDependence;$/;"	m	class:Source
mTimeFunc	src/GridPointSource.h	/^  float_sw4 (*mTimeFunc)(float_sw4 f, float_sw4 t,float_sw4* par, int npar, int* ipar, int nipar );$/;"	m	class:GridPointSource
mTimeFunc_om	src/GridPointSource.h	/^  float_sw4 (*mTimeFunc_om)(float_sw4 f, float_sw4 t,float_sw4* par, int npar, int* ipar, int nipar );$/;"	m	class:GridPointSource
mTimeFunc_omom	src/GridPointSource.h	/^   float_sw4 (*mTimeFunc_omom)(float_sw4 f, float_sw4 t,float_sw4* par, int npar, int* ipar, int nipar );$/;"	m	class:GridPointSource
mTimeFunc_omtt	src/GridPointSource.h	/^  float_sw4 (*mTimeFunc_omtt)(float_sw4 f, float_sw4 t,float_sw4* par, int npar, int* ipar, int nipar );$/;"	m	class:GridPointSource
mTimeFunc_t	src/GridPointSource.h	/^  float_sw4 (*mTimeFunc_t)(float_sw4 f, float_sw4 t,float_sw4* par, int npar, int* ipar, int nipar );$/;"	m	class:GridPointSource
mTimeFunc_tom	src/GridPointSource.h	/^  float_sw4 (*mTimeFunc_tom)(float_sw4 f, float_sw4 t,float_sw4* par, int npar, int* ipar, int nipar );$/;"	m	class:GridPointSource
mTimeFunc_tt	src/GridPointSource.h	/^  float_sw4 (*mTimeFunc_tt)(float_sw4 f, float_sw4 t,float_sw4* par, int npar, int* ipar, int nipar );$/;"	m	class:GridPointSource
mTimeFunc_ttomom	src/GridPointSource.h	/^  float_sw4 (*mTimeFunc_ttomom)(float_sw4 f, float_sw4 t,float_sw4* par, int npar, int* ipar, int nipar );$/;"	m	class:GridPointSource
mTimeFunc_ttt	src/GridPointSource.h	/^  float_sw4 (*mTimeFunc_ttt)(float_sw4 f, float_sw4 t,float_sw4* par, int npar, int* ipar, int nipar );$/;"	m	class:GridPointSource
mTimeFunc_tttom	src/GridPointSource.h	/^  float_sw4 (*mTimeFunc_tttom)(float_sw4 f, float_sw4 t,float_sw4* par, int npar, int* ipar, int nipar );$/;"	m	class:GridPointSource
mTimeFunc_tttt	src/GridPointSource.h	/^  float_sw4 (*mTimeFunc_tttt)(float_sw4 f, float_sw4 t,float_sw4* par, int npar, int* ipar, int nipar );$/;"	m	class:GridPointSource
mTimeInterval	src/CheckPoint.h	/^   float_sw4 mTimeInterval;$/;"	m	class:CheckPoint
mTimeIsSet	src/EW.h	/^   bool mTimeIsSet;$/;"	m	class:EW
mTmax	src/EW.h	/^   float_sw4 mCFL, mTstart, mTmax, mDt;$/;"	m	class:EW
mTopo	src/EW.h	/^   Sarray mTopo, mTopoGridExt;$/;"	m	class:EW
mTopoGridExt	src/EW.h	/^   Sarray mTopo, mTopoGridExt;$/;"	m	class:EW
mTstart	src/EW.h	/^   float_sw4 mCFL, mTstart, mTmax, mDt;$/;"	m	class:EW
mU	src/EW.h	/^   vector<Sarray> mU;$/;"	m	class:EW
mUm	src/EW.h	/^   vector<Sarray> mUm;$/;"	m	class:EW
mVerbose	src/EW.h	/^   int mPrintInterval, mVerbose;$/;"	m	class:EW
mWindow	src/CheckPoint.h	/^   std::vector<int*> mWindow; \/\/ Local in processor start + end indices for (i,j,k) for each grid level$/;"	m	class:CheckPoint
mWriteEvery	src/TimeSeries.h	/^int mWriteEvery;$/;"	m	class:TimeSeries
mWritingCycle	src/CheckPoint.h	/^   int mWritingCycle;$/;"	m	class:CheckPoint
mX	src/EW.h	/^   Sarray mX, mY, mZ;$/;"	m	class:EW
mX	src/TimeSeries.h	/^float_sw4 mX, mY, mZ, mGPX, mGPY, mGPZ; \/\/ original and actual location$/;"	m	class:TimeSeries
mX0	src/Source.h	/^  float_sw4 mX0,mY0,mZ0;$/;"	m	class:Source
mY	src/EW.h	/^   Sarray mX, mY, mZ;$/;"	m	class:EW
mY	src/TimeSeries.h	/^float_sw4 mX, mY, mZ, mGPX, mGPY, mGPZ; \/\/ original and actual location$/;"	m	class:TimeSeries
mY0	src/Source.h	/^  float_sw4 mX0,mY0,mZ0;$/;"	m	class:Source
mZ	src/EW.h	/^   Sarray mX, mY, mZ;$/;"	m	class:EW
mZ	src/TimeSeries.h	/^float_sw4 mX, mY, mZ, mGPX, mGPY, mGPZ; \/\/ original and actual location$/;"	m	class:TimeSeries
mZ0	src/Source.h	/^  float_sw4 mX0,mY0,mZ0;$/;"	m	class:Source
m_BndryWindow	src/EW.h	/^   vector<int *> m_BndryWindow;$/;"	m	class:EW
m_GaussianAmp	src/EW.h	/^   float_sw4 m_GaussianAmp, m_GaussianLx, m_GaussianLy, m_GaussianXc, m_GaussianYc;$/;"	m	class:EW
m_GaussianLx	src/EW.h	/^   float_sw4 m_GaussianAmp, m_GaussianLx, m_GaussianLy, m_GaussianXc, m_GaussianYc;$/;"	m	class:EW
m_GaussianLy	src/EW.h	/^   float_sw4 m_GaussianAmp, m_GaussianLx, m_GaussianLy, m_GaussianXc, m_GaussianYc;$/;"	m	class:EW
m_GaussianXc	src/EW.h	/^   float_sw4 m_GaussianAmp, m_GaussianLx, m_GaussianLy, m_GaussianXc, m_GaussianYc;$/;"	m	class:EW
m_GaussianYc	src/EW.h	/^   float_sw4 m_GaussianAmp, m_GaussianLx, m_GaussianLy, m_GaussianXc, m_GaussianYc;$/;"	m	class:EW
m_GlobalTimeSeries	src/EW.h	/^   vector<TimeSeries*> m_GlobalTimeSeries;$/;"	m	class:EW
m_NumberOfBCPoints	src/EW.h	/^   vector<int *> m_NumberOfBCPoints;$/;"	m	class:EW
m_SOSp	src/Filter.h	/^vector<SecondOrderSection*> m_SOSp;$/;"	m	class:Filter
m_SideEdge_Recv	src/EW.h	/^   vector<float_sw4*>  m_SideEdge_Send, m_SideEdge_Recv;$/;"	m	class:EW
m_SideEdge_Send	src/EW.h	/^   vector<float_sw4*>  m_SideEdge_Send, m_SideEdge_Recv;$/;"	m	class:EW
m_absoluteDepth	src/MaterialBlock.h	/^  bool m_absoluteDepth;$/;"	m	class:MaterialBlock
m_acof	src/EW.h	/^   float_sw4 m_iop[5], m_iop2[5], m_bop2[24], m_sbop[5], m_acof[384], m_bop[24];$/;"	m	class:EW
m_active_gpu	src/EWCuda.h	/^   int m_nstream, m_ndevice, m_active_gpu;$/;"	m	class:EWCuda
m_analytical_topo	src/EW.h	/^   bool m_analytical_topo, m_use_analytical_metric;$/;"	m	class:EW
m_base	src/Sarray.h	/^   ssize_t m_base;$/;"	m	class:Sarray
m_bcType	src/EW.h	/^   vector<boundaryConditionType*> m_bcType;$/;"	m	class:EW
m_bop	src/EW.h	/^   float_sw4 m_iop[5], m_iop2[5], m_bop2[24], m_sbop[5], m_acof[384], m_bop[24];$/;"	m	class:EW
m_bop2	src/EW.h	/^   float_sw4 m_iop[5], m_iop2[5], m_bop2[24], m_sbop[5], m_acof[384], m_bop[24];$/;"	m	class:EW
m_bope	src/EW.h	/^   float_sw4 m_bope[48], m_ghcof[6], m_hnorm[4];$/;"	m	class:EW
m_bswap	src/Parallel_IO.h	/^   Byteswapper m_bswap;$/;"	m	class:Parallel_IO
m_bufsize	src/CheckPoint.h	/^   size_t m_bufsize;$/;"	m	class:CheckPoint
m_c	src/Polynomial.h	/^float_sw4 m_c[3];$/;"	m	class:Polynomial
m_calpha	src/TimeSeries.h	/^float_sw4 m_calpha, m_salpha, m_thxnrm, m_thynrm;$/;"	m	class:TimeSeries
m_cartesian_communicator	src/EW.h	/^   MPI_Comm  m_cartesian_communicator;$/;"	m	class:EW
m_check_points	src/EW.h	/^   vector<CheckPoint*> m_check_points;$/;"	m	class:EW
m_checkfornan	src/EW.h	/^   bool m_checkfornan, m_output_detailed_timing, m_save_trace;$/;"	m	class:EW
m_comm_id	src/Parallel_IO.h	/^   int** m_comm_id;$/;"	m	class:Comminfo
m_comm_index	src/Parallel_IO.h	/^   int** m_comm_index[6];$/;"	m	class:Comminfo
m_complex_pairs	src/Filter.h	/^int m_real_poles, m_complex_pairs;$/;"	m	class:Filter
m_const_width	src/SuperGrid.h	/^float_sw4 m_x0, m_x1, m_width, m_trans_width, m_const_width;$/;"	m	class:SuperGrid
m_corder	src/EW.h	/^   bool m_corder; \/\/ (i,j,k,c) order $/;"	m	class:EW
m_corder	src/Sarray.h	/^   static bool m_corder;$/;"	m	class:Sarray
m_csteps	src/Parallel_IO.h	/^   int m_csteps;$/;"	m	class:Parallel_IO
m_cuobj	src/EW.h	/^   EWCuda* m_cuobj;$/;"	m	class:EW
m_d	src/SecondOrderSection.h	/^Polynomial m_n, m_d;$/;"	m	class:SecondOrderSection
m_data	src/Sarray.h	/^   float_sw4* m_data;$/;"	m	class:Sarray
m_data_comm	src/Parallel_IO.h	/^   MPI_Comm m_data_comm;$/;"	m	class:Parallel_IO
m_dddp	src/GridPointSource.h	/^  float_sw4 m_hesspos1[9], m_hesspos2[9], m_hesspos3[9], m_dddp[9]; $/;"	m	class:GridPointSource
m_derivative	src/GridPointSource.h	/^  int m_derivative;$/;"	m	class:GridPointSource
m_derivative	src/Source.h	/^  int m_derivative;  $/;"	m	class:Source
m_dg_bc_type	src/EW.h	/^   int m_dg_bc_type;$/;"	m	class:EW
m_dir	src/GridPointSource.h	/^  float_sw4 m_dir[11];$/;"	m	class:GridPointSource
m_dir	src/Source.h	/^  float_sw4 m_dir[11];$/;"	m	class:Source
m_double	src/CheckPoint.h	/^   bool m_double;$/;"	m	class:CheckPoint
m_dt	src/Filter.h	/^float_sw4 m_dt, m_f1, m_f2;$/;"	m	class:Filter
m_dt	src/TimeSeries.h	/^float_sw4 m_t0, m_shift, m_dt;$/;"	m	class:TimeSeries
m_epi_depth	src/TimeSeries.h	/^float_sw4 m_epi_lat, m_epi_lon, m_epi_depth, m_epi_time_offset, m_x_azimuth;$/;"	m	class:TimeSeries
m_epi_lat	src/TimeSeries.h	/^float_sw4 m_epi_lat, m_epi_lon, m_epi_depth, m_epi_time_offset, m_x_azimuth;$/;"	m	class:TimeSeries
m_epi_lon	src/TimeSeries.h	/^float_sw4 m_epi_lat, m_epi_lon, m_epi_depth, m_epi_time_offset, m_x_azimuth;$/;"	m	class:TimeSeries
m_epi_time_offset	src/TimeSeries.h	/^float_sw4 m_epi_lat, m_epi_lon, m_epi_depth, m_epi_time_offset, m_x_azimuth;$/;"	m	class:TimeSeries
m_epsL	src/SuperGrid.h	/^float_sw4 m_epsL, m_tw_omega;$/;"	m	class:SuperGrid
m_ew	src/TimeSeries.h	/^   EW * m_ew;$/;"	m	class:TimeSeries
m_ext_ghost_points	src/EW.h	/^   int m_ghost_points, m_ppadding, m_ext_ghost_points;$/;"	m	class:EW
m_f1	src/Filter.h	/^float_sw4 m_dt, m_f1, m_f2;$/;"	m	class:Filter
m_f2	src/Filter.h	/^float_sw4 m_dt, m_f1, m_f2;$/;"	m	class:Filter
m_fileName	src/TimeSeries.h	/^std::string m_fileName, m_staName;$/;"	m	class:TimeSeries
m_freq	src/MaterialBlock.h	/^  float_sw4 m_rho, m_vp, m_vs, m_qp, m_qs, m_freq;$/;"	m	class:MaterialBlock
m_ghcof	src/EW.h	/^   float_sw4 m_bope[48], m_ghcof[6], m_hnorm[4];$/;"	m	class:EW
m_ghost_points	src/EW.h	/^   int m_ghost_points, m_ppadding, m_ext_ghost_points;$/;"	m	class:EW
m_globalUniqueSources	src/EW.h	/^   vector<Source*> m_globalUniqueSources;$/;"	m	class:EW
m_global_nx	src/EW.h	/^   vector<int> m_global_nx, m_global_ny, m_global_nz; $/;"	m	class:EW
m_global_ny	src/EW.h	/^   vector<int> m_global_nx, m_global_ny, m_global_nz; $/;"	m	class:EW
m_global_nz	src/EW.h	/^   vector<int> m_global_nx, m_global_ny, m_global_nz; $/;"	m	class:EW
m_global_xmax	src/EW.h	/^   float_sw4 m_global_xmax, m_global_ymax, m_global_zmax, m_global_zmin;$/;"	m	class:EW
m_global_ymax	src/EW.h	/^   float_sw4 m_global_xmax, m_global_ymax, m_global_zmax, m_global_zmin;$/;"	m	class:EW
m_global_zmax	src/EW.h	/^   float_sw4 m_global_xmax, m_global_ymax, m_global_zmax, m_global_zmin;$/;"	m	class:EW
m_global_zmin	src/EW.h	/^   float_sw4 m_global_xmax, m_global_ymax, m_global_zmax, m_global_zmin;$/;"	m	class:EW
m_gpu_blocksize	src/EW.h	/^   int m_gpu_gridsize[3], m_gpu_blocksize[3];$/;"	m	class:EW
m_gpu_gridsize	src/EW.h	/^   int m_gpu_gridsize[3], m_gpu_blocksize[3];$/;"	m	class:EW
m_grid	src/GridPointSource.h	/^  int m_grid;$/;"	m	class:GridPointSource
m_grid	src/Source.h	/^  int m_grid;$/;"	m	class:Source
m_grid0	src/TimeSeries.h	/^int m_grid0;$/;"	m	class:TimeSeries
m_grid_interpolation_order	src/EW.h	/^   int m_grid_interpolation_order;$/;"	m	class:EW
m_h_base	src/EW.h	/^   float_sw4 m_h_base;$/;"	m	class:EW
m_has_values	src/Parallel_IO.h	/^   bool m_has_values;$/;"	m	class:Comminfo
m_hessian_known	src/GridPointSource.h	/^  bool m_hessian_known;$/;"	m	class:GridPointSource
m_hesspos1	src/GridPointSource.h	/^  float_sw4 m_hesspos1[9], m_hesspos2[9], m_hesspos3[9], m_dddp[9]; $/;"	m	class:GridPointSource
m_hesspos2	src/GridPointSource.h	/^  float_sw4 m_hesspos1[9], m_hesspos2[9], m_hesspos3[9], m_dddp[9]; $/;"	m	class:GridPointSource
m_hesspos3	src/GridPointSource.h	/^  float_sw4 m_hesspos1[9], m_hesspos2[9], m_hesspos3[9], m_dddp[9]; $/;"	m	class:GridPointSource
m_hnorm	src/EW.h	/^   float_sw4 m_bope[48], m_ghcof[6], m_hnorm[4];$/;"	m	class:EW
m_i0	src/GridPointSource.h	/^  int m_i0,m_j0,m_k0; \/\/ grid point index$/;"	m	class:GridPointSource
m_i0	src/Source.h	/^  int m_i0, m_j0, m_k0;$/;"	m	class:Source
m_i0	src/TimeSeries.h	/^int m_i0;$/;"	m	class:TimeSeries
m_iEnd	src/EW.h	/^   vector<int> m_iStart, m_iEnd, m_jStart, m_jEnd, m_kStart, m_kEnd;$/;"	m	class:EW
m_iEndInt	src/EW.h	/^   vector<int> m_iStartInt, m_iEndInt, m_jStartInt, m_jEndInt, m_kStartInt, m_kEndInt;$/;"	m	class:EW
m_iStart	src/EW.h	/^   vector<int> m_iStart, m_iEnd, m_jStart, m_jEnd, m_kStart, m_kEnd;$/;"	m	class:EW
m_iStartInt	src/EW.h	/^   vector<int> m_iStartInt, m_iEndInt, m_jStartInt, m_jEndInt, m_kStartInt, m_kEndInt;$/;"	m	class:EW
m_ib	src/Sarray.h	/^   int m_ib, m_ie, m_jb, m_je, m_kb, m_ke;$/;"	m	class:Sarray
m_identsources	src/EW.h	/^   vector<int> m_identsources;$/;"	m	class:EW
m_ie	src/Sarray.h	/^   int m_ib, m_ie, m_jb, m_je, m_kb, m_ke;$/;"	m	class:Sarray
m_ihavearray	src/CheckPoint.h	/^   std::vector<bool> m_ihavearray;$/;"	m	class:CheckPoint
m_ilow	src/Parallel_IO.h	/^   int* m_ilow;$/;"	m	class:Comminfo
m_initialized	src/Filter.h	/^bool m_initialized;$/;"	m	class:Filter
m_iop	src/EW.h	/^   float_sw4 m_iop[5], m_iop2[5], m_bop2[24], m_sbop[5], m_acof[384], m_bop[24];$/;"	m	class:EW
m_iop2	src/EW.h	/^   float_sw4 m_iop[5], m_iop2[5], m_bop2[24], m_sbop[5], m_acof[384], m_bop[24];$/;"	m	class:EW
m_irecv	src/Parallel_IO.h	/^   Comminfo m_irecv;$/;"	m	class:Parallel_IO
m_is_curvilinear	src/EW.h	/^   vector<bool> m_is_curvilinear;$/;"	m	class:EW
m_is_filtered	src/Source.h	/^  bool m_is_filtered;$/;"	m	class:Source
m_isend	src/Parallel_IO.h	/^   Comminfo m_isend;$/;"	m	class:Parallel_IO
m_iwrite	src/Parallel_IO.h	/^   int m_iwrite, m_nwriters, m_parallel_file_system;$/;"	m	class:Parallel_IO
m_j0	src/GridPointSource.h	/^  int m_i0,m_j0,m_k0; \/\/ grid point index$/;"	m	class:GridPointSource
m_j0	src/Source.h	/^  int m_i0, m_j0, m_k0;$/;"	m	class:Source
m_j0	src/TimeSeries.h	/^int m_j0;$/;"	m	class:TimeSeries
m_jEnd	src/EW.h	/^   vector<int> m_iStart, m_iEnd, m_jStart, m_jEnd, m_kStart, m_kEnd;$/;"	m	class:EW
m_jEndInt	src/EW.h	/^   vector<int> m_iStartInt, m_iEndInt, m_jStartInt, m_jEndInt, m_kStartInt, m_kEndInt;$/;"	m	class:EW
m_jStart	src/EW.h	/^   vector<int> m_iStart, m_iEnd, m_jStart, m_jEnd, m_kStart, m_kEnd;$/;"	m	class:EW
m_jStartInt	src/EW.h	/^   vector<int> m_iStartInt, m_iEndInt, m_jStartInt, m_jEndInt, m_kStartInt, m_kEndInt;$/;"	m	class:EW
m_jacobian	src/GridPointSource.h	/^  float_sw4 m_jacobian[27];$/;"	m	class:GridPointSource
m_jacobian_known	src/GridPointSource.h	/^  bool m_jacobian_known;$/;"	m	class:GridPointSource
m_jb	src/Sarray.h	/^   int m_ib, m_ie, m_jb, m_je, m_kb, m_ke;$/;"	m	class:Sarray
m_je	src/Sarray.h	/^   int m_ib, m_ie, m_jb, m_je, m_kb, m_ke;$/;"	m	class:Sarray
m_jlow	src/Parallel_IO.h	/^   int* m_jlow;$/;"	m	class:Comminfo
m_k0	src/GridPointSource.h	/^  int m_i0,m_j0,m_k0; \/\/ grid point index$/;"	m	class:GridPointSource
m_k0	src/Source.h	/^  int m_i0, m_j0, m_k0;$/;"	m	class:Source
m_k0	src/TimeSeries.h	/^int m_k0;$/;"	m	class:TimeSeries
m_kEnd	src/EW.h	/^   vector<int> m_iStart, m_iEnd, m_jStart, m_jEnd, m_kStart, m_kEnd;$/;"	m	class:EW
m_kEndInt	src/EW.h	/^   vector<int> m_iStartInt, m_iEndInt, m_jStartInt, m_jEndInt, m_kStartInt, m_kEndInt;$/;"	m	class:EW
m_kStart	src/EW.h	/^   vector<int> m_iStart, m_iEnd, m_jStart, m_jEnd, m_kStart, m_kEnd;$/;"	m	class:EW
m_kStartInt	src/EW.h	/^   vector<int> m_iStartInt, m_iEndInt, m_jStartInt, m_jEndInt, m_kStartInt, m_kEndInt;$/;"	m	class:EW
m_kb	src/Sarray.h	/^   int m_ib, m_ie, m_jb, m_je, m_kb, m_ke;$/;"	m	class:Sarray
m_ke	src/Sarray.h	/^   int m_ib, m_ie, m_jb, m_je, m_kb, m_ke;$/;"	m	class:Sarray
m_key	src/GridPointSource.h	/^  size_t m_key; \/\/ Key for sorting sources.$/;"	m	class:GridPointSource
m_klow	src/Parallel_IO.h	/^   int* m_klow;$/;"	m	class:Comminfo
m_left	src/SuperGrid.h	/^bool m_left, m_right;$/;"	m	class:SuperGrid
m_maxbuf	src/Parallel_IO.h	/^   size_t  m_maxbuf;$/;"	m	class:Comminfo
m_maxiobuf	src/Parallel_IO.h	/^   size_t  m_maxiobuf;$/;"	m	class:Comminfo
m_mode	src/TimeSeries.h	/^receiverMode m_mode;$/;"	m	class:TimeSeries
m_moment_test	src/EW.h	/^   bool m_point_source_test, m_moment_test;$/;"	m	class:EW
m_mpifloat	src/EW.h	/^   MPI_Datatype m_mpifloat;$/;"	m	class:EW
m_mtrlblocks	src/EW.h	/^   vector<MaterialData*> m_mtrlblocks;$/;"	m	class:EW
m_myPoint	src/Source.h	/^  bool m_myPoint;$/;"	m	class:Source
m_myPoint	src/TimeSeries.h	/^bool m_myPoint; \/\/ set to true if this processor writes to the arrays$/;"	m	class:TimeSeries
m_myrank	src/EW.h	/^   int m_myrank, m_nprocs, m_nprocs_2d[2], m_myrank_2d[2], m_neighbor[4];$/;"	m	class:EW
m_myrank_2d	src/EW.h	/^   int m_myrank, m_nprocs, m_nprocs_2d[2], m_myrank_2d[2], m_neighbor[4];$/;"	m	class:EW
m_n	src/SecondOrderSection.h	/^Polynomial m_n, m_d;$/;"	m	class:SecondOrderSection
m_nComp	src/TimeSeries.h	/^int m_nComp;$/;"	m	class:TimeSeries
m_nc	src/Sarray.h	/^   int m_nc, m_ni, m_nj, m_nk;$/;"	m	class:Sarray
m_ncomm	src/Parallel_IO.h	/^   int*  m_ncomm; $/;"	m	class:Comminfo
m_ndevice	src/EW.h	/^   int m_ndevice;$/;"	m	class:EW
m_ndevice	src/EWCuda.h	/^   int m_nstream, m_ndevice, m_active_gpu;$/;"	m	class:EWCuda
m_neighbor	src/EW.h	/^   int m_myrank, m_nprocs, m_nprocs_2d[2], m_myrank_2d[2], m_neighbor[4];$/;"	m	class:EW
m_ni	src/Sarray.h	/^   int m_nc, m_ni, m_nj, m_nk;$/;"	m	class:Sarray
m_niblock	src/Parallel_IO.h	/^   int* m_niblock;$/;"	m	class:Comminfo
m_nint	src/EW.h	/^   int m_nint;$/;"	m	class:EW
m_nj	src/Sarray.h	/^   int m_nc, m_ni, m_nj, m_nk;$/;"	m	class:Sarray
m_njblock	src/Parallel_IO.h	/^   int* m_njblock;$/;"	m	class:Comminfo
m_nk	src/Sarray.h	/^   int m_nc, m_ni, m_nj, m_nk;$/;"	m	class:Sarray
m_nkblock	src/Parallel_IO.h	/^   int* m_nkblock;$/;"	m	class:Comminfo
m_nprocs	src/EW.h	/^   int m_myrank, m_nprocs, m_nprocs_2d[2], m_myrank_2d[2], m_neighbor[4];$/;"	m	class:EW
m_nprocs_2d	src/EW.h	/^   int m_myrank, m_nprocs, m_nprocs_2d[2], m_myrank_2d[2], m_neighbor[4];$/;"	m	class:EW
m_npts	src/Sarray.h	/^   size_t m_offi, m_offj, m_offk, m_offc, m_npts;$/;"	m	class:Sarray
m_nstream	src/EWCuda.h	/^   int m_nstream, m_ndevice, m_active_gpu;$/;"	m	class:EWCuda
m_nsubcomm	src/Parallel_IO.h	/^   int* m_nsubcomm;$/;"	m	class:Comminfo
m_numberOfSOS	src/Filter.h	/^int m_numberOfSOS;$/;"	m	class:Filter
m_nwriters	src/EW.h	/^   int m_nwriters;$/;"	m	class:EW
m_nwriters	src/Parallel_IO.h	/^   int m_iwrite, m_nwriters, m_parallel_file_system;$/;"	m	class:Parallel_IO
m_nx_base	src/EW.h	/^   int m_nx_base, m_ny_base, m_nz_base;$/;"	m	class:EW
m_ny_base	src/EW.h	/^   int m_nx_base, m_ny_base, m_nz_base;$/;"	m	class:EW
m_nz_base	src/EW.h	/^   int m_nx_base, m_ny_base, m_nz_base;$/;"	m	class:EW
m_offc	src/Sarray.h	/^   size_t m_offi, m_offj, m_offk, m_offc, m_npts;$/;"	m	class:Sarray
m_offi	src/Sarray.h	/^   size_t m_offi, m_offj, m_offk, m_offc, m_npts;$/;"	m	class:Sarray
m_offj	src/Sarray.h	/^   size_t m_offi, m_offj, m_offk, m_offc, m_npts;$/;"	m	class:Sarray
m_offk	src/Sarray.h	/^   size_t m_offi, m_offj, m_offk, m_offc, m_npts;$/;"	m	class:Sarray
m_onesided	src/EW.h	/^   vector<int*> m_onesided; $/;"	m	class:EW
m_output_detailed_timing	src/EW.h	/^   bool m_checkfornan, m_output_detailed_timing, m_save_trace;$/;"	m	class:EW
m_parallel_file_system	src/Parallel_IO.h	/^   int m_iwrite, m_nwriters, m_parallel_file_system;$/;"	m	class:Parallel_IO
m_parallel_io	src/CheckPoint.h	/^   Parallel_IO** m_parallel_io;$/;"	m	class:CheckPoint
m_passes	src/Filter.h	/^unsigned int m_passes, m_poles;$/;"	m	class:Filter
m_path	src/TimeSeries.h	/^string m_path;$/;"	m	class:TimeSeries
m_pfs	src/EW.h	/^   bool m_pfs;$/;"	m	class:EW
m_point_source_test	src/EW.h	/^   bool m_point_source_test, m_moment_test;$/;"	m	class:EW
m_point_sources	src/EW.h	/^   vector<GridPointSource*> m_point_sources;$/;"	m	class:EW
m_pole_min_re	src/Filter.h	/^float_sw4 m_pole_min_re;$/;"	m	class:Filter
m_poles	src/Filter.h	/^unsigned int m_passes, m_poles;$/;"	m	class:Filter
m_ppadding	src/EW.h	/^   int m_ghost_points, m_ppadding, m_ext_ghost_points;$/;"	m	class:EW
m_qp	src/MaterialBlock.h	/^  float_sw4 m_rho, m_vp, m_vs, m_qp, m_qs, m_freq;$/;"	m	class:MaterialBlock
m_qs	src/MaterialBlock.h	/^  float_sw4 m_rho, m_vp, m_vs, m_qp, m_qs, m_freq;$/;"	m	class:MaterialBlock
m_qu	src/EW.h	/^   int m_qu;$/;"	m	class:EW
m_qv	src/EW.h	/^   int m_qv; $/;"	m	class:EW
m_real_poles	src/Filter.h	/^int m_real_poles, m_complex_pairs;$/;"	m	class:Filter
m_rec_gp_lat	src/TimeSeries.h	/^float_sw4 mEventSecond, m_rec_lat, m_rec_lon, m_rec_gp_lat, m_rec_gp_lon;$/;"	m	class:TimeSeries
m_rec_gp_lon	src/TimeSeries.h	/^float_sw4 mEventSecond, m_rec_lat, m_rec_lon, m_rec_gp_lat, m_rec_gp_lon;$/;"	m	class:TimeSeries
m_rec_lat	src/TimeSeries.h	/^float_sw4 mEventSecond, m_rec_lat, m_rec_lon, m_rec_gp_lat, m_rec_gp_lon;$/;"	m	class:TimeSeries
m_rec_lon	src/TimeSeries.h	/^float_sw4 mEventSecond, m_rec_lat, m_rec_lon, m_rec_gp_lat, m_rec_gp_lon;$/;"	m	class:TimeSeries
m_restart_check_point	src/EW.h	/^   CheckPoint* m_restart_check_point;$/;"	m	class:EW
m_rho	src/MaterialBlock.h	/^  float_sw4 m_rho, m_vp, m_vs, m_qp, m_qs, m_freq;$/;"	m	class:MaterialBlock
m_rhograd	src/MaterialBlock.h	/^  float_sw4 m_vpgrad, m_vsgrad, m_rhograd;$/;"	m	class:MaterialBlock
m_right	src/SuperGrid.h	/^bool m_left, m_right;$/;"	m	class:SuperGrid
m_sacFormat	src/TimeSeries.h	/^bool m_usgsFormat, m_sacFormat;$/;"	m	class:TimeSeries
m_salpha	src/TimeSeries.h	/^float_sw4 m_calpha, m_salpha, m_thxnrm, m_thynrm;$/;"	m	class:TimeSeries
m_save_trace	src/EW.h	/^   bool m_checkfornan, m_output_detailed_timing, m_save_trace;$/;"	m	class:EW
m_sbop	src/EW.h	/^   float_sw4 m_iop[5], m_iop2[5], m_bop2[24], m_sbop[5], m_acof[384], m_bop[24];$/;"	m	class:EW
m_send_type1	src/EW.h	/^   vector<MPI_Datatype> m_send_type1;$/;"	m	class:EW
m_send_type3	src/EW.h	/^   vector<MPI_Datatype> m_send_type3;$/;"	m	class:EW
m_send_type4	src/EW.h	/^   vector<MPI_Datatype> m_send_type4; \/\/ metric$/;"	m	class:EW
m_sg_corner_x	src/EW.h	/^   vector<float_sw4*> m_sg_corner_x, m_sg_corner_y, m_sg_corner_z;$/;"	m	class:EW
m_sg_corner_y	src/EW.h	/^   vector<float_sw4*> m_sg_corner_x, m_sg_corner_y, m_sg_corner_z;$/;"	m	class:EW
m_sg_corner_z	src/EW.h	/^   vector<float_sw4*> m_sg_corner_x, m_sg_corner_y, m_sg_corner_z;$/;"	m	class:EW
m_sg_damping_order	src/EW.h	/^   int m_sg_damping_order, m_sg_gp_thickness;$/;"	m	class:EW
m_sg_dc_x	src/EW.h	/^   vector<float_sw4*> m_sg_dc_x, m_sg_dc_y, m_sg_dc_z;$/;"	m	class:EW
m_sg_dc_y	src/EW.h	/^   vector<float_sw4*> m_sg_dc_x, m_sg_dc_y, m_sg_dc_z;$/;"	m	class:EW
m_sg_dc_z	src/EW.h	/^   vector<float_sw4*> m_sg_dc_x, m_sg_dc_y, m_sg_dc_z;$/;"	m	class:EW
m_sg_gp_thickness	src/EW.h	/^   int m_sg_damping_order, m_sg_gp_thickness;$/;"	m	class:EW
m_sg_str_x	src/EW.h	/^   vector<float_sw4*> m_sg_str_x, m_sg_str_y, m_sg_str_z;$/;"	m	class:EW
m_sg_str_y	src/EW.h	/^   vector<float_sw4*> m_sg_str_x, m_sg_str_y, m_sg_str_z;$/;"	m	class:EW
m_sg_str_z	src/EW.h	/^   vector<float_sw4*> m_sg_str_x, m_sg_str_y, m_sg_str_z;$/;"	m	class:EW
m_shift	src/TimeSeries.h	/^float_sw4 m_t0, m_shift, m_dt;$/;"	m	class:TimeSeries
m_single_mode_problem	src/EW.h	/^   int m_single_mode_problem;$/;"	m	class:EW
m_staName	src/TimeSeries.h	/^std::string m_fileName, m_staName;$/;"	m	class:TimeSeries
m_steps	src/Parallel_IO.h	/^   int m_steps;$/;"	m	class:Comminfo
m_stream	src/EWCuda.h	/^   cudaStream_t* m_stream;$/;"	m	class:EWCuda
m_subcomm	src/Parallel_IO.h	/^   int** m_subcomm;$/;"	m	class:Comminfo
m_subcommlabel	src/Parallel_IO.h	/^   int** m_subcommlabel; $/;"	m	class:Comminfo
m_supergrid_damping_coefficient	src/EW.h	/^   float_sw4 m_supergrid_damping_coefficient;$/;"	m	class:EW
m_supergrid_taper_x	src/EW.h	/^   SuperGrid m_supergrid_taper_x, m_supergrid_taper_y;$/;"	m	class:EW
m_supergrid_taper_y	src/EW.h	/^   SuperGrid m_supergrid_taper_x, m_supergrid_taper_y;$/;"	m	class:EW
m_supergrid_taper_z	src/EW.h	/^   vector<SuperGrid> m_supergrid_taper_z;$/;"	m	class:EW
m_t0	src/TimeSeries.h	/^float_sw4 m_t0, m_shift, m_dt;$/;"	m	class:TimeSeries
m_thxnrm	src/TimeSeries.h	/^float_sw4 m_calpha, m_salpha, m_thxnrm, m_thynrm;$/;"	m	class:TimeSeries
m_thynrm	src/TimeSeries.h	/^float_sw4 m_calpha, m_salpha, m_thxnrm, m_thynrm;$/;"	m	class:TimeSeries
m_time_done	src/CheckPoint.h	/^   bool m_time_done;$/;"	m	class:CheckPoint
m_tol	src/MaterialBlock.h	/^  float_sw4 m_tol;$/;"	m	class:MaterialBlock
m_topoFileName	src/EW.h	/^   string m_topoFileName;$/;"	m	class:EW
m_topoInputStyle	src/EW.h	/^   InputMode m_topoInputStyle;$/;"	m	class:EW
m_topo_zmax	src/EW.h	/^   float_sw4 m_topo_zmax;$/;"	m	class:EW
m_topography_exists	src/EW.h	/^   bool m_topography_exists;$/;"	m	class:EW
m_trans_width	src/SuperGrid.h	/^float_sw4 m_x0, m_x1, m_width, m_trans_width, m_const_width;$/;"	m	class:SuperGrid
m_tw_omega	src/SuperGrid.h	/^float_sw4 m_epsL, m_tw_omega;$/;"	m	class:SuperGrid
m_type	src/Filter.h	/^FilterType m_type;$/;"	m	class:Filter
m_use_analytical_metric	src/EW.h	/^   bool m_analytical_topo, m_use_analytical_metric;$/;"	m	class:EW
m_use_dg	src/EW.h	/^   bool m_use_dg;$/;"	m	class:EW
m_use_supergrid	src/EW.h	/^   bool m_use_supergrid;$/;"	m	class:EW
m_usgsFormat	src/TimeSeries.h	/^bool m_usgsFormat, m_sacFormat;$/;"	m	class:TimeSeries
m_utc	src/TimeSeries.h	/^int m_utc[7];$/;"	m	class:TimeSeries
m_utc0	src/EW.h	/^   int m_utc0[7];$/;"	m	class:EW
m_vp	src/MaterialBlock.h	/^  float_sw4 m_rho, m_vp, m_vs, m_qp, m_qs, m_freq;$/;"	m	class:MaterialBlock
m_vpgrad	src/MaterialBlock.h	/^  float_sw4 m_vpgrad, m_vsgrad, m_rhograd;$/;"	m	class:MaterialBlock
m_vs	src/MaterialBlock.h	/^  float_sw4 m_rho, m_vp, m_vs, m_qp, m_qs, m_freq;$/;"	m	class:MaterialBlock
m_vsgrad	src/MaterialBlock.h	/^  float_sw4 m_vpgrad, m_vsgrad, m_rhograd;$/;"	m	class:MaterialBlock
m_width	src/SuperGrid.h	/^float_sw4 m_x0, m_x1, m_width, m_trans_width, m_const_width;$/;"	m	class:SuperGrid
m_winallocated	src/CheckPoint.h	/^   bool m_winallocated;$/;"	m	class:CheckPoint
m_write_comm	src/Parallel_IO.h	/^   MPI_Comm m_write_comm; $/;"	m	class:Parallel_IO
m_writer_ids	src/Parallel_IO.h	/^   int* m_writer_ids;$/;"	m	class:Parallel_IO
m_x0	src/SuperGrid.h	/^float_sw4 m_x0, m_x1, m_width, m_trans_width, m_const_width;$/;"	m	class:SuperGrid
m_x1	src/SuperGrid.h	/^float_sw4 m_x0, m_x1, m_width, m_trans_width, m_const_width;$/;"	m	class:SuperGrid
m_x_azimuth	src/TimeSeries.h	/^float_sw4 m_epi_lat, m_epi_lon, m_epi_depth, m_epi_time_offset, m_x_azimuth;$/;"	m	class:TimeSeries
m_xmax	src/MaterialBlock.h	/^  float_sw4 m_xmin, m_xmax, m_ymin, m_ymax, m_zmin, m_zmax;$/;"	m	class:MaterialBlock
m_xmin	src/MaterialBlock.h	/^  float_sw4 m_xmin, m_xmax, m_ymin, m_ymax, m_zmin, m_zmax;$/;"	m	class:MaterialBlock
m_xyzcomponent	src/TimeSeries.h	/^bool m_xyzcomponent;$/;"	m	class:TimeSeries
m_ymax	src/MaterialBlock.h	/^  float_sw4 m_xmin, m_xmax, m_ymin, m_ymax, m_zmin, m_zmax;$/;"	m	class:MaterialBlock
m_ymin	src/MaterialBlock.h	/^  float_sw4 m_xmin, m_xmax, m_ymin, m_ymax, m_zmin, m_zmax;$/;"	m	class:MaterialBlock
m_zRelativeToTopography	src/Source.h	/^  bool m_zRelativeToTopography;$/;"	m	class:Source
m_zRelativeToTopography	src/TimeSeries.h	/^bool m_zRelativeToTopography; \/\/ location is given relative to topography$/;"	m	class:TimeSeries
m_zTopo	src/Source.h	/^  float_sw4 m_zTopo;$/;"	m	class:Source
m_zTopo	src/TimeSeries.h	/^float_sw4 m_zTopo;$/;"	m	class:TimeSeries
m_zetaBreak	src/EW.h	/^   float_sw4 m_zetaBreak;$/;"	m	class:EW
m_zmax	src/MaterialBlock.h	/^  float_sw4 m_xmin, m_xmax, m_ymin, m_ymax, m_zmin, m_zmax;$/;"	m	class:MaterialBlock
m_zmin	src/EW.h	/^   vector<float_sw4> m_zmin;$/;"	m	class:EW
m_zmin	src/MaterialBlock.h	/^  float_sw4 m_xmin, m_xmax, m_ymin, m_ymax, m_zmin, m_zmax;$/;"	m	class:MaterialBlock
main	src/main.C	/^int main( int argc, char** argv )$/;"	f
main	tests/testil/testil.C	/^int main( int argc, char** argv )$/;"	f
main_test	pytest/test_sw4lite.py	/^def main_test(sw4lite_exe_dir="optimize_cuda_ray", testing_level=0, mpi_tasks=0, omp_threads=0, verbose=False):$/;"	f
max	src/Sarray.h	/^   inline int max(int i1,int i2){if( i1>i2 ) return i1;else return i2;}$/;"	f	class:Sarray
maximum	src/Sarray.C	/^float_sw4 Sarray::maximum( int c )$/;"	f	class:Sarray
mbcGlobalType	src/EW.h	/^   boundaryConditionType mbcGlobalType[6]; $/;"	m	class:EW
mdevIpar	src/GridPointSource.h	/^  int* mdevIpar; \/\/ GPU copy$/;"	m	class:GridPointSource
mdevIpar	src/Source.h	/^  int* mdevIpar;$/;"	m	class:Source
mdevPar	src/GridPointSource.h	/^  float_sw4* mdevPar; \/\/GPU copy $/;"	m	class:GridPointSource
mdevPar	src/Source.h	/^  float_sw4* mdevPar;$/;"	m	class:Source
met	src/curvilinear-c.C	171;"	d	file:
met	src/curvilinear-c.C	191;"	d	file:
met	src/curvilinear-c.C	294;"	d	file:
met	src/curvilinear-c.C	316;"	d	file:
met	src/curvilinear-c.C	377;"	d	file:
met	src/curvilinear-c.C	400;"	d	file:
met	src/curvilinear-c.C	461;"	d	file:
met	src/curvilinear-c.C	498;"	d	file:
met	src/curvilinear-c.C	613;"	d	file:
met	src/curvilinear-c.C	654;"	d	file:
met	src/curvilinear-c.C	68;"	d	file:
met	src/device-routines.C	2407;"	d	file:
met	src/device-routines.C	3306;"	d	file:
met	src/device-routines.C	3324;"	d	file:
met	src/device-routines.C	4219;"	d	file:
met	src/device-routines.C	4235;"	d	file:
met	src/device-routines.C	5065;"	d	file:
met	src/device-routines.C	5080;"	d	file:
met	src/device-routines.C	5914;"	d	file:
met	src/device-routines.C	5930;"	d	file:
met	src/device-routines.C	6446;"	d	file:
met	src/device-routines.C	6464;"	d	file:
met	src/device-routines.C	6983;"	d	file:
met	src/device-routines.C	8648;"	d	file:
met	src/device-routines.C	8773;"	d	file:
met	src/device-routines.C	8788;"	d	file:
met	src/device-routines.C	8915;"	d	file:
met	src/rhs4sgcurv.C	1400;"	d	file:
met	src/rhs4sgcurv.C	78;"	d	file:
met	src/rhs4sgcurv_rev.C	1389;"	d	file:
met	src/rhs4sgcurv_rev.C	77;"	d	file:
met	tests/testil/metricC.C	123;"	d	file:
met	tests/testil/metricC.C	143;"	d	file:
met	tests/testil/metricC.C	20;"	d	file:
met	tests/testil/metricC.C	246;"	d	file:
met	tests/testil/rhs4sgcurv.C	1369;"	d	file:
met	tests/testil/rhs4sgcurv.C	47;"	d	file:
met	tests/testil/rhs4sgcurv_rev.C	1358;"	d	file:
met	tests/testil/rhs4sgcurv_rev.C	46;"	d	file:
meterr4c	src/solerr3.f	/^      subroutine meterr4c(/;"	s
metric	src/curvilinear-c.C	/^int EW::metric( int ib, int ie, int jb, int je, int kb, int ke, float_sw4* a_x,$/;"	f	class:EW
metric	tests/testil/metricC.C	/^int metric( int ib, int ie, int jb, int je, int kb, int ke, float_sw4* a_x,$/;"	f
metric_rev	src/curvilinear-c.C	/^int EW::metric_rev( int ib, int ie, int jb, int je, int kb, int ke, float_sw4* a_x,$/;"	f	class:EW
metric_rev	tests/testil/metricC.C	/^int metric_rev( int ib, int ie, int jb, int je, int kb, int ke, float_sw4* a_x,$/;"	f
metricexgh	src/curvilinear-c.C	/^void EW::metricexgh( int ib, int ie, int jb, int je, int kb, int ke,$/;"	f	class:EW
metricexgh_rev	src/curvilinear-c.C	/^void EW::metricexgh_rev( int ib, int ie, int jb, int je, int kb, int ke,$/;"	f	class:EW
min	src/Sarray.h	/^   inline int min(int i1,int i2){if( i1<i2 ) return i1;else return i2;}$/;"	f	class:Sarray
minimum	src/Sarray.C	/^float_sw4 Sarray::minimum( int c )$/;"	f	class:Sarray
mkdirs	src/EW.C	/^int EW::mkdirs(const string& path)$/;"	f	class:EW
mpi_tasks	pytest/test_sw4lite.py	/^    mpi_tasks=0 # machine dependent default$/;"	v
mu	src/curvilinear-c.C	496;"	d	file:
mu	src/curvilinear-c.C	611;"	d	file:
mu	src/curvilinear-c.C	652;"	d	file:
mu	src/device-routines.C	1267;"	d	file:
mu	src/device-routines.C	1287;"	d	file:
mu	src/device-routines.C	1573;"	d	file:
mu	src/device-routines.C	2129;"	d	file:
mu	src/device-routines.C	2384;"	d	file:
mu	src/device-routines.C	2402;"	d	file:
mu	src/device-routines.C	3301;"	d	file:
mu	src/device-routines.C	3319;"	d	file:
mu	src/device-routines.C	4214;"	d	file:
mu	src/device-routines.C	4230;"	d	file:
mu	src/device-routines.C	5060;"	d	file:
mu	src/device-routines.C	5075;"	d	file:
mu	src/device-routines.C	5909;"	d	file:
mu	src/device-routines.C	5925;"	d	file:
mu	src/device-routines.C	6441;"	d	file:
mu	src/device-routines.C	6459;"	d	file:
mu	src/device-routines.C	6978;"	d	file:
mu	src/device-routines.C	7000;"	d	file:
mu	src/device-routines.C	718;"	d	file:
mu	src/device-routines.C	7322;"	d	file:
mu	src/device-routines.C	7343;"	d	file:
mu	src/device-routines.C	7665;"	d	file:
mu	src/device-routines.C	7684;"	d	file:
mu	src/device-routines.C	7959;"	d	file:
mu	src/device-routines.C	7980;"	d	file:
mu	src/device-routines.C	8266;"	d	file:
mu	src/device-routines.C	8645;"	d	file:
mu	src/device-routines.C	8770;"	d	file:
mu	src/device-routines.C	8785;"	d	file:
mu	src/device-routines.C	8912;"	d	file:
mu	src/device-routines.C	974;"	d	file:
mu	src/device-routines.C	991;"	d	file:
mu	src/rhs4sg.C	51;"	d	file:
mu	src/rhs4sg.C	842;"	d	file:
mu	src/rhs4sg_rev.C	58;"	d	file:
mu	src/rhs4sg_rev.C	857;"	d	file:
mu	src/rhs4sg_revNW.C	58;"	d	file:
mu	src/rhs4sg_revNW.C	861;"	d	file:
mu	src/rhs4sgcurv.C	1395;"	d	file:
mu	src/rhs4sgcurv.C	73;"	d	file:
mu	src/rhs4sgcurv_rev.C	1384;"	d	file:
mu	src/rhs4sgcurv_rev.C	72;"	d	file:
mu	tests/testil/rhs4sg.c	44;"	d	file:
mu	tests/testil/rhs4sg.c	832;"	d	file:
mu	tests/testil/rhs4sg_rev.c	27;"	d	file:
mu	tests/testil/rhs4sg_rev.c	814;"	d	file:
mu	tests/testil/rhs4sgcurv.C	1364;"	d	file:
mu	tests/testil/rhs4sgcurv.C	42;"	d	file:
mu	tests/testil/rhs4sgcurv_rev.C	1353;"	d	file:
mu	tests/testil/rhs4sgcurv_rev.C	41;"	d	file:
myPoint	src/Source.h	/^  bool myPoint(){ return m_myPoint; }$/;"	f	class:Source
myPoint	src/TimeSeries.h	/^bool myPoint(){ return m_myPoint; }$/;"	f	class:TimeSeries
mystrcmp	src/EWCuda.C	/^int mystrcmp(void const *a, void const *b) { $/;"	f
n_writers	src/Parallel_IO.h	/^   int n_writers() const {return m_nwriters;}$/;"	f	class:Parallel_IO
ncomp	src/Sarray.h	/^   int ncomp() const {return m_nc;}$/;"	f	class:Sarray
newhdr	src/sacsubc.C	/^void newhdr()$/;"	f
ni	src/Parallel_IO.h	/^   int ni, nj, nk, nig, njg, nkg, oi, oj, ok;$/;"	m	class:Parallel_IO
nig	src/Parallel_IO.h	/^   int ni, nj, nk, nig, njg, nkg, oi, oj, ok;$/;"	m	class:Parallel_IO
nil	src/CheckPoint.C	/^CheckPoint* CheckPoint::nil=static_cast<CheckPoint*>(0);$/;"	m	class:CheckPoint	file:
nil	src/CheckPoint.h	/^   static CheckPoint* nil; \/\/ nil pointer$/;"	m	class:CheckPoint
nj	src/Parallel_IO.h	/^   int ni, nj, nk, nig, njg, nkg, oi, oj, ok;$/;"	m	class:Parallel_IO
njg	src/Parallel_IO.h	/^   int ni, nj, nk, nig, njg, nkg, oi, oj, ok;$/;"	m	class:Parallel_IO
nk	src/Parallel_IO.h	/^   int ni, nj, nk, nig, njg, nkg, oi, oj, ok;$/;"	m	class:Parallel_IO
nkg	src/Parallel_IO.h	/^   int ni, nj, nk, nig, njg, nkg, oi, oj, ok;$/;"	m	class:Parallel_IO
normOfDifference	src/EW.C	/^void EW::normOfDifference( vector<Sarray> & a_Uex,  vector<Sarray> & a_U, float_sw4 &diffInf, $/;"	f	class:EW
npts	src/Sarray.h	/^   int npts() const  {return m_ni*m_nj*m_nk;}$/;"	f	class:Sarray
numer	src/SecondOrderSection.C	/^float_sw4 SecondOrderSection::numer(unsigned int q)$/;"	f	class:SecondOrderSection
numerical_fluxes	src/EW-dg.C	/^void EW::numerical_fluxes(double* w_star_all_faces, double* v_star_all_faces,$/;"	f	class:EW
oi	src/Parallel_IO.h	/^   int ni, nj, nk, nig, njg, nkg, oi, oj, ok;$/;"	m	class:Parallel_IO
oj	src/Parallel_IO.h	/^   int ni, nj, nk, nig, njg, nkg, oi, oj, ok;$/;"	m	class:Parallel_IO
ok	src/Parallel_IO.h	/^   int ni, nj, nk, nig, njg, nkg, oi, oj, ok;$/;"	m	class:Parallel_IO
omp_threads	pytest/test_sw4lite.py	/^    omp_threads=0 #no threading by default$/;"	v
openmp	Makefile	/^  openmp = no$/;"	m
openmp	Makefile	/^  openmp = yes$/;"	m
operator ()	src/Sarray.h	/^   SW4_HDDECLARE inline float_sw4& operator()( int c, int i, int j, int k, bool dev_ponter)$/;"	f	class:Sarray
operator ()	src/Sarray.h	/^   SW4_HDDECLARE inline float_sw4& operator()( int i, int j, int k, bool dev_pointer )$/;"	f	class:Sarray
operator ()	src/Sarray.h	/^   inline float_sw4& operator()( int c, int i, int j, int k )$/;"	f	class:Sarray
operator ()	src/Sarray.h	/^   inline float_sw4& operator()( int i, int j, int k )$/;"	f	class:Sarray
operator <<	src/Filter.C	/^ostream& operator<<( ostream& output, const Filter& s )$/;"	f
operator <<	src/GridPointSource.C	/^ostream& operator<<( ostream& output, const GridPointSource& s )$/;"	f
operator <<	src/Polynomial.C	/^ostream& operator<<( ostream& output, const Polynomial& s )$/;"	f
operator <<	src/Source.C	/^ostream& operator<<( ostream& output, const Source& s ) $/;"	f
optdir	Makefile	/^        optdir   := optimize_mp_c$/;"	m
optdir	Makefile	/^        optdir:= optimize_mp_c_raja$/;"	m
optdir	Makefile	/^      optdir   := optimize$/;"	m
optdir	Makefile	/^      optdir   := optimize_c$/;"	m
optdir	Makefile	/^      optdir   := optimize_mp$/;"	m
optdir	Makefile	/^   optdir   := $(optdir)_$(computername)$/;"	m
optdir	Makefile	/^   optdir   := $(optdir)_sp$/;"	m
optdir	Makefile	/^   optdir   := install_lassen_cpu$/;"	m
optlevel	Makefile	/^   optlevel = DEBUG$/;"	m
optlevel	Makefile	/^   optlevel = OPTIMIZE$/;"	m
os	pytest/test_sw4lite.py	/^import os, sys, argparse$/;"	i
pack_HaloArrayCU_X	src/EW_cuda.C	/^void EW::pack_HaloArrayCU_X( Sarray& u, int g , int st)$/;"	f	class:EW
pack_HaloArrayCU_Y	src/EW_cuda.C	/^void EW::pack_HaloArrayCU_Y( Sarray& u, int g , int st)$/;"	f	class:EW
page_lock	src/Sarray.C	/^void Sarray::page_lock( EWCuda* cu )$/;"	f	class:Sarray
page_unlock	src/Sarray.C	/^void Sarray::page_unlock( EWCuda* cu )$/;"	f	class:Sarray
parseInputFile	src/EW.C	/^bool EW::parseInputFile( const string& filename )$/;"	f	class:EW
parser	pytest/test_sw4lite.py	/^    parser=argparse.ArgumentParser()$/;"	v
pass_outside_fluxes	src/dgmodule.f90	/^  SUBROUTINE pass_outside_fluxes(/;"	s	module:dgmodule
perturb	src/Source.C	/^void Source::perturb( float_sw4 h, int comp )$/;"	f	class:Source
pi	src/type_defs.f90	/^  real(dp), parameter :: pi /;"	v	module:type_defs
point_in_proc	src/EW.C	/^bool EW::point_in_proc(int a_i, int a_j, int a_g)$/;"	f	class:EW
point_in_proc_ext	src/EW.C	/^bool EW::point_in_proc_ext(int a_i, int a_j, int a_g)$/;"	f	class:EW
ppw_to_resolve	src/Source.C	/^int Source::ppw_to_resolve( float_sw4 dt ) const$/;"	f	class:Source
pred_dev	src/device-routines.C	/^__global__ void pred_dev( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
pred_dev_rev	src/device-routines.C	/^__global__ void pred_dev_rev( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
predfort	src/ew-cfromfort.C	/^void EW::predfort( int ib, int ie, int jb, int je, int kb, int ke, float_sw4* up,$/;"	f	class:EW
predfort	src/rhs4th3fort.f	/^      subroutine predfort(/;"	s
print	src/Parallel_IO.C	/^void Comminfo::print( int recv )$/;"	f	class:Comminfo
print	src/Parallel_IO.C	/^void Parallel_IO::print( )$/;"	f	class:Parallel_IO
printGridSizes	src/EW.C	/^void EW::printGridSizes() const$/;"	f	class:EW
printPointer	src/Source.h	/^  void printPointer(){std::cout << "Source pointer = "  << mPar << std::endl;}$/;"	f	class:Source
printTime	src/EW.C	/^void EW::printTime( int cycle, float_sw4 t, bool force ) const $/;"	f	class:EW
print_execution_time	src/EW.C	/^void EW::print_execution_time( double t1, double t2, string msg )$/;"	f	class:EW
print_execution_times	src/EW.C	/^void EW::print_execution_times( double times[8] )$/;"	f	class:EW
print_info	src/GridPointSource.C	/^void GridPointSource::print_info() const$/;"	f	class:GridPointSource
print_parameters	src/SuperGrid.C	/^void SuperGrid::print_parameters() const$/;"	f	class:SuperGrid
proc_decompose_2d	src/EW.C	/^bool EW::proc_decompose_2d( int ni, int nj, int nproc, int proc_max[2] )$/;"	f	class:EW
proc_zero	src/Parallel_IO.C	/^int Parallel_IO::proc_zero()$/;"	f	class:Parallel_IO
processCheckPoint	src/EW.C	/^void EW::processCheckPoint(char* buffer)$/;"	f	class:EW
processDeveloper	src/EW.C	/^void EW::processDeveloper(char* buffer)$/;"	f	class:EW
processFileIO	src/EW.C	/^void EW::processFileIO(char* buffer)$/;"	f	class:EW
processGrid	src/EW.C	/^void EW::processGrid( char* buffer )$/;"	f	class:EW
processMaterialBlock	src/EW.C	/^void EW::processMaterialBlock( char* buffer )$/;"	f	class:EW
processReceiver	src/EW.C	/^void EW::processReceiver(char* buffer )$/;"	f	class:EW
processRestart	src/EW.C	/^void EW::processRestart(char* buffer)$/;"	f	class:EW
processSource	src/EW.C	/^void EW::processSource( char* buffer )$/;"	f	class:EW
processSuperGrid	src/EW.C	/^void EW::processSuperGrid(char *buffer)$/;"	f	class:EW
processTestPointSource	src/EW.C	/^void EW::processTestPointSource(char* buffer)$/;"	f	class:EW
processTime	src/EW.C	/^void EW::processTime(char* buffer)$/;"	f	class:EW
processTopography	src/EW.C	/^void EW::processTopography(char * buffer )$/;"	f	class:EW
processdGalerkin	src/EW-dg.C	/^void EW::processdGalerkin(char* buffer)$/;"	f	class:EW
put_comm_sides	src/dgmodule.f90	/^  SUBROUTINE put_comm_sides(/;"	s	module:dgmodule
read_array	src/Parallel_IO.C	/^void Parallel_IO::read_array( int* fid, int nc, float_sw4* array, off_t pos0,$/;"	f	class:Parallel_IO
read_checkpoint	src/CheckPoint.C	/^void CheckPoint::read_checkpoint( float_sw4& a_time, int& a_cycle,$/;"	f	class:CheckPoint
realPoleBP	src/Filter.C	/^float_sw4 Filter::realPoleBP(float_sw4 f1, float_sw4 f2, float_sw4 dt, SecondOrderSection *&sos_ptr)$/;"	f	class:Filter
realPoleLP	src/Filter.C	/^float_sw4 Filter::realPoleLP(float_sw4 fc, float_sw4 dt, SecondOrderSection *&sos_ptr)$/;"	f	class:Filter
receiverMode	src/TimeSeries.h	/^  enum receiverMode{Displacement, Div, Curl, Strains, Velocity, DisplacementGradient \/*, DivVelo, CurlVelo, StrainsVelo *\/ };$/;"	g	class:TimeSeries
recordData	src/TimeSeries.C	/^void TimeSeries::recordData(float_sw4* u ) $/;"	f	class:TimeSeries
recordData	src/TimeSeries.C	/^void TimeSeries::recordData(vector<float_sw4> & u) $/;"	f	class:TimeSeries
reference	src/Sarray.h	/^   void reference( float_sw4* new_data ){m_data = new_data; }$/;"	f	class:Sarray
reference_dev	src/Sarray.h	/^   void reference_dev( float_sw4* new_data ){dev_data = new_data; }$/;"	f	class:Sarray
reset_gpu	src/EWCuda.C	/^void EWCuda::reset_gpu()$/;"	f	class:EWCuda
rhdr	src/sacsubc.h	/^	float rhdr[70];$/;"	m	struct:sachdr_
rho	src/device-routines.C	1618;"	d	file:
rho	src/device-routines.C	1691;"	d	file:
rho	src/device-routines.C	1717;"	d	file:
rho	src/device-routines.C	1850;"	d	file:
rho	src/device-routines.C	1878;"	d	file:
rho	src/device-routines.C	2011;"	d	file:
rho	src/device-routines.C	2037;"	d	file:
rho	src/device-routines.C	2107;"	d	file:
rho	src/device-routines.C	223;"	d	file:
rho	src/device-routines.C	295;"	d	file:
rho	src/device-routines.C	318;"	d	file:
rho	src/device-routines.C	387;"	d	file:
rho	src/device-routines.C	409;"	d	file:
rho	src/device-routines.C	466;"	d	file:
rho	src/device-routines.C	486;"	d	file:
rho	src/device-routines.C	544;"	d	file:
rho	src/device-routines.C	566;"	d	file:
rho	src/device-routines.C	621;"	d	file:
rho	src/device-routines.C	642;"	d	file:
rho	src/device-routines.C	698;"	d	file:
rho	src/ew-cfromfort.C	1042;"	d	file:
rho	src/ew-cfromfort.C	1071;"	d	file:
rho	src/ew-cfromfort.C	1143;"	d	file:
rho	src/ew-cfromfort.C	1171;"	d	file:
rho	src/ew-cfromfort.C	1226;"	d	file:
rho	src/ew-cfromfort.C	1253;"	d	file:
rho	src/ew-cfromfort.C	1308;"	d	file:
rho	src/ew-cfromfort.C	1334;"	d	file:
rho	src/ew-cfromfort.C	1390;"	d	file:
rho	src/ew-cfromfort.C	1416;"	d	file:
rho	src/ew-cfromfort.C	1472;"	d	file:
rho	src/ew-cfromfort.C	761;"	d	file:
rho	src/ew-cfromfort.C	835;"	d	file:
rho	src/ew-cfromfort.C	864;"	d	file:
rho	src/ew-cfromfort.C	935;"	d	file:
rho	src/ew-cfromfort.C	966;"	d	file:
rho	tests/testil/addsgd4fort.C	117;"	d	file:
rho	tests/testil/addsgd4fort.C	15;"	d	file:
rho	tests/testil/addsgd4fort.C	276;"	d	file:
rho	tests/testil/addsgd4fort.C	90;"	d	file:
rho	tests/testil/addsgd4fort_rev.C	16;"	d	file:
rho	tests/testil/addsgd4fort_rev.C	93;"	d	file:
rhouttlumf	src/rhs4th3fort.f	/^      subroutine rhouttlumf(/;"	s
rhs4	src/device-routines.C	/^  __global__ void rhs4 (int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4_Kboundary	src/device-routines.C	/^__global__ void rhs4_Kboundary (int ifirst, int ilast, int jfirst, int jlast,$/;"	f
rhs4_X	src/device-routines.C	/^  __global__ void rhs4_X (int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4_X_corr_gpu	src/device-routines.C	/^void rhs4_X_corr_gpu (int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4_X_pred_gpu	src/device-routines.C	/^void rhs4_X_pred_gpu (int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4_Y	src/device-routines.C	/^  __global__ void rhs4_Y (int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4_Y_corr_gpu	src/device-routines.C	/^void rhs4_Y_corr_gpu (int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4_Y_pred_gpu	src/device-routines.C	/^void rhs4_Y_pred_gpu (int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4_corr_gpu	src/device-routines.C	/^void rhs4_corr_gpu (int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4_highk_corr_gpu	src/device-routines.C	/^void rhs4_highk_corr_gpu (int ifirst, int ilast, int jfirst, int jlast,$/;"	f
rhs4_highk_pred_gpu	src/device-routines.C	/^void rhs4_highk_pred_gpu (int ifirst, int ilast, int jfirst, int jlast,$/;"	f
rhs4_lowk_corr_gpu	src/device-routines.C	/^void rhs4_lowk_corr_gpu (int ifirst, int ilast, int jfirst, int jlast,$/;"	f
rhs4_lowk_pred_gpu	src/device-routines.C	/^void rhs4_lowk_pred_gpu (int ifirst, int ilast, int jfirst, int jlast,$/;"	f
rhs4_pred_gpu	src/device-routines.C	/^void rhs4_pred_gpu (int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4_v2	src/device-routines.C	/^  __global__ void rhs4_v2 (int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4center_dev	src/device-routines.C	/^__global__ void rhs4center_dev( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4center_dev_rev	src/device-routines.C	/^__global__ void rhs4center_dev_rev( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4center_dev_rev_v2	src/device-routines.C	/^rhs4center_dev_rev_v2( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4center_dev_v2	src/device-routines.C	/^rhs4center_dev_v2( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4lower_dev	src/device-routines.C	/^__device__ void rhs4lower_dev( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4lower_dev_rev	src/device-routines.C	/^__device__ void rhs4lower_dev_rev( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4sg	src/rhs4sg.C	/^void rhs4sg( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4sg	tests/testil/rhs4sg.c	/^void rhs4sg( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4sg_rev	src/rhs4sg_rev.C	/^void rhs4sg_rev( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4sg_rev	src/rhs4sg_revNW.C	/^void rhs4sg_rev( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4sg_rev	tests/testil/rhs4sg_rev.c	/^void rhs4sg_rev( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4sgcurv	src/rhs4sgcurv.C	/^void rhs4sgcurv( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4sgcurv	tests/testil/rhs4sgcurv.C	/^void rhs4sgcurv( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4sgcurv_dev	src/device-routines.C	/^__global__ void rhs4sgcurv_dev( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4sgcurv_dev_rev	src/device-routines.C	/^__global__ void rhs4sgcurv_dev_rev( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4sgcurv_dev_rev_v2	src/device-routines.C	/^rhs4sgcurv_dev_rev_v2( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4sgcurv_dev_v2	src/device-routines.C	/^rhs4sgcurv_dev_v2( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4sgcurv_rev	src/rhs4sgcurv_rev.C	/^void rhs4sgcurv_rev( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4sgcurv_rev	tests/testil/rhs4sgcurv_rev.C	/^void rhs4sgcurv_rev( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4sgcurvupper_dev	src/device-routines.C	/^__global__ void rhs4sgcurvupper_dev( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4sgcurvupper_dev_rev	src/device-routines.C	/^__global__ void rhs4sgcurvupper_dev_rev( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4th3fort	src/rhs4th3fort.f	/^      subroutine rhs4th3fort(/;"	s
rhs4th3fortsgstr	src/rhs4th3fort.f	/^      subroutine rhs4th3fortsgstr(/;"	s
rhs4th3fortsgstr	tests/testil/rhs4th3fortsgstr.f	/^      subroutine rhs4th3fortsgstr(/;"	s
rhs4upper_dev	src/device-routines.C	/^__global__ void rhs4upper_dev( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhs4upper_dev_rev	src/device-routines.C	/^__global__ void rhs4upper_dev_rev( int ifirst, int ilast, int jfirst, int jlast, int kfirst, int klast,$/;"	f
rhserrfort	src/rhs4th3fort.f	/^      subroutine rhserrfort(/;"	s
rstr	src/sacsubc.C	/^const char *rstr[] = {$/;"	v
run_checks	pytest/test_sw4lite.py	/^def run_checks(checks):$/;"	f
sachdr	src/sacsubc.C	/^struct sachdr_ sachdr;$/;"	v	typeref:struct:sachdr_
sachdr_	src/sacsubc.h	/^struct sachdr_  {$/;"	s
satt	src/rhs4th3fort.f	/^      subroutine satt(/;"	s
save_to_disk	src/Sarray.C	/^void Sarray::save_to_disk( const char* fname )$/;"	f	class:Sarray
scmxmn	src/sacsubc.C	/^void scmxmn(float *x, int npts, float *depmax, float *depmin, float *depmen)$/;"	f
setFrequency	src/Source.C	/^void Source::setFrequency( float_sw4 freq )$/;"	f	class:Source
setMaxFrequency	src/Source.C	/^void Source::setMaxFrequency(float_sw4 max_freq)$/;"	f	class:Source
setMoments	src/Source.C	/^void Source::setMoments( float_sw4 mxx, float_sw4 mxy, float_sw4 mxz, float_sw4 myy, float_sw4 myz, float_sw4 mzz )$/;"	f	class:Source
setSteps	src/CheckPoint.C	/^void CheckPoint::setSteps(int a_steps)$/;"	f	class:CheckPoint
set_CorrectForMu	src/Source.h	/^  void set_CorrectForMu(bool smf){mShearModulusFactor=smf;};$/;"	f	class:Source
set_absoluteDepth	src/MaterialBlock.C	/^void MaterialBlock::set_absoluteDepth( bool absDepth )$/;"	f	class:MaterialBlock
set_boundary_conditions	src/dgmodule.f90	/^  SUBROUTINE set_boundary_conditions(/;"	s	module:dgmodule
set_derivative	src/GridPointSource.C	/^void GridPointSource::set_derivative( int der, const float_sw4 dir[11] )$/;"	f	class:GridPointSource
set_derivative	src/Source.C	/^void Source::set_derivative( int der )$/;"	f	class:Source
set_dg_orders	src/EW-dg.C	/^void EW::set_dg_orders( int qu, int qv)$/;"	f	class:EW
set_dirderivative	src/Source.C	/^void Source::set_dirderivative( float_sw4 dir[11] )$/;"	f	class:Source
set_gradients	src/MaterialBlock.C	/^void MaterialBlock::set_gradients( float_sw4 rhograd, float_sw4 vsgrad, float_sw4 vpgrad )$/;"	f	class:MaterialBlock
set_grid_point_sources4	src/Source.C	/^void Source::set_grid_point_sources4( EW *a_EW, vector<GridPointSource*>& point_sources ) $/;"	f	class:Source
set_material_properties	src/MaterialBlock.C	/^void MaterialBlock::set_material_properties( std::vector<Sarray> & rho, $/;"	f	class:MaterialBlock
set_noderivative	src/GridPointSource.C	/^void GridPointSource::set_noderivative( )$/;"	f	class:GridPointSource
set_noderivative	src/Source.C	/^void Source::set_noderivative( )$/;"	f	class:Source
set_parameters	src/Source.C	/^void Source::set_parameters( float_sw4 x[11] )$/;"	f	class:Source
set_sort_key	src/GridPointSource.C	/^void GridPointSource::set_sort_key( size_t key )$/;"	f	class:GridPointSource
set_tay_weights	src/dgmodule.f90	/^  SUBROUTINE set_tay_weights(/;"	s	module:dgmodule
set_to_minusOne	src/Sarray.C	/^void Sarray::set_to_minusOne()$/;"	f	class:Sarray
set_to_random	src/Sarray.C	/^void Sarray::set_to_random( float_sw4 llim, float_sw4 ulim )$/;"	f	class:Sarray
set_to_zero	src/Sarray.C	/^void Sarray::set_to_zero()$/;"	f	class:Sarray
set_twilight	src/SuperGrid.C	/^void SuperGrid::set_twilight( float_sw4 omega )$/;"	f	class:SuperGrid
set_value	src/Sarray.C	/^void Sarray::set_value( float_sw4 scalar )$/;"	f	class:Sarray
setfhv	src/sacsubc.C	/^void setfhv(const char *strcmd, float fval, int *nerr)$/;"	f
setihv	src/sacsubc.C	/^void setihv(const char *strcmd, const char *strval, int *nerr)$/;"	f
setkhv	src/sacsubc.C	/^void setkhv(const char *strcmd, char *cval, int *nerr)$/;"	f
setlhv	src/sacsubc.C	/^void setlhv(const char *strcmd, int lval, int *nerr)$/;"	f
setnhv	src/sacsubc.C	/^void setnhv(const char *strcmd, int ival, int *nerr)$/;"	f
setupMPICommunications	src/EW.C	/^void EW::setupMPICommunications()$/;"	f	class:EW
setupRun	src/EW.C	/^void EW::setupRun()$/;"	f	class:EW
setupSBPCoeff	src/EW_cuda.C	/^void EW::setupSBPCoeff()$/;"	f	class:EW
setup_boundary_arrays	src/EW.C	/^void EW::setup_boundary_arrays( )$/;"	f	class:EW
setup_device_communication_array	src/EW_cuda.C	/^void EW::setup_device_communication_array()$/;"	f	class:EW
setup_materials	src/EW.C	/^void EW::setup_materials()$/;"	f	class:EW
setup_metric	src/EW.C	/^void EW::setup_metric()$/;"	f	class:EW
setup_sizes	src/CheckPoint.C	/^void CheckPoint::setup_sizes( )$/;"	f	class:CheckPoint
setup_substeps	src/Parallel_IO.C	/^void Parallel_IO::setup_substeps( )$/;"	f	class:Parallel_IO
setup_supergrid	src/EW.C	/^void EW::setup_supergrid( )$/;"	f	class:EW
setupgpu	src/EWCuda.C	/^void setupgpu(int verbose)$/;"	f
si	src/type_defs.f90	/^  integer, parameter:: si /;"	v	module:type_defs
side_plane	src/EW.C	/^void EW::side_plane( int g, int side, int wind[6], int nGhost )$/;"	f	class:EW
side_plane	src/Sarray.C	/^void Sarray::side_plane( int side, int wind[6], int nGhost )$/;"	f	class:Sarray
side_plane_fortran	src/Sarray.C	/^void Sarray::side_plane_fortran( int side, int wind[6], int nGhost )$/;"	f	class:Sarray
single	Makefile	/^   single := "no"$/;"	m
solerr3	src/solerr3.f	/^      subroutine solerr3(/;"	s
solerr3c	src/solerr3.f	/^      subroutine solerr3c(/;"	s
solerr3fort	src/ew-cfromfort.C	/^void EW::solerr3fort( int ib, int ie, int jb, int je, int kb, int ke,$/;"	f	class:EW
solerrgp	src/solerr3.f	/^      subroutine solerrgp(/;"	s
sort_grid_point_sources	src/EW.C	/^void EW::sort_grid_point_sources()$/;"	f	class:EW
source_fun	src/dgmodule.f90	/^  real(kind = dp) function source_fun(/;"	f	module:dgmodule
sp	src/type_defs.f90	/^  integer, parameter:: sp /;"	v	module:type_defs
start_next_step	src/dgmodule.f90	/^  SUBROUTINE start_next_step(/;"	s	module:dgmodule
startswith	src/EW.C	/^bool EW::startswith(const char begin[], char *line)$/;"	f	class:EW
streql	src/sacsubc.C	/^int  streql(const char *str1, const char *str2)$/;"	f
stretching	src/SuperGrid.C	/^float_sw4 SuperGrid::stretching( float_sw4 x ) const$/;"	f	class:SuperGrid
strx	src/EW.C	4711;"	d	file:
strx	src/EW.C	4795;"	d	file:
strx	src/curvilinear-c.C	501;"	d	file:
strx	src/curvilinear-c.C	616;"	d	file:
strx	src/curvilinear-c.C	657;"	d	file:
strx	src/device-routines.C	1271;"	d	file:
strx	src/device-routines.C	1291;"	d	file:
strx	src/device-routines.C	1577;"	d	file:
strx	src/device-routines.C	1622;"	d	file:
strx	src/device-routines.C	1695;"	d	file:
strx	src/device-routines.C	1721;"	d	file:
strx	src/device-routines.C	1854;"	d	file:
strx	src/device-routines.C	1882;"	d	file:
strx	src/device-routines.C	2015;"	d	file:
strx	src/device-routines.C	2041;"	d	file:
strx	src/device-routines.C	2111;"	d	file:
strx	src/device-routines.C	2133;"	d	file:
strx	src/device-routines.C	227;"	d	file:
strx	src/device-routines.C	2388;"	d	file:
strx	src/device-routines.C	2408;"	d	file:
strx	src/device-routines.C	299;"	d	file:
strx	src/device-routines.C	322;"	d	file:
strx	src/device-routines.C	3307;"	d	file:
strx	src/device-routines.C	3325;"	d	file:
strx	src/device-routines.C	391;"	d	file:
strx	src/device-routines.C	414;"	d	file:
strx	src/device-routines.C	4220;"	d	file:
strx	src/device-routines.C	4236;"	d	file:
strx	src/device-routines.C	471;"	d	file:
strx	src/device-routines.C	491;"	d	file:
strx	src/device-routines.C	5066;"	d	file:
strx	src/device-routines.C	5081;"	d	file:
strx	src/device-routines.C	549;"	d	file:
strx	src/device-routines.C	571;"	d	file:
strx	src/device-routines.C	5915;"	d	file:
strx	src/device-routines.C	5931;"	d	file:
strx	src/device-routines.C	626;"	d	file:
strx	src/device-routines.C	6447;"	d	file:
strx	src/device-routines.C	6465;"	d	file:
strx	src/device-routines.C	647;"	d	file:
strx	src/device-routines.C	6984;"	d	file:
strx	src/device-routines.C	7004;"	d	file:
strx	src/device-routines.C	703;"	d	file:
strx	src/device-routines.C	722;"	d	file:
strx	src/device-routines.C	7326;"	d	file:
strx	src/device-routines.C	7347;"	d	file:
strx	src/device-routines.C	7669;"	d	file:
strx	src/device-routines.C	7688;"	d	file:
strx	src/device-routines.C	7963;"	d	file:
strx	src/device-routines.C	7984;"	d	file:
strx	src/device-routines.C	8270;"	d	file:
strx	src/device-routines.C	8649;"	d	file:
strx	src/device-routines.C	8774;"	d	file:
strx	src/device-routines.C	8789;"	d	file:
strx	src/device-routines.C	8916;"	d	file:
strx	src/device-routines.C	978;"	d	file:
strx	src/device-routines.C	995;"	d	file:
strx	src/ew-cfromfort.C	1046;"	d	file:
strx	src/ew-cfromfort.C	1075;"	d	file:
strx	src/ew-cfromfort.C	1147;"	d	file:
strx	src/ew-cfromfort.C	1176;"	d	file:
strx	src/ew-cfromfort.C	1230;"	d	file:
strx	src/ew-cfromfort.C	1258;"	d	file:
strx	src/ew-cfromfort.C	1312;"	d	file:
strx	src/ew-cfromfort.C	1339;"	d	file:
strx	src/ew-cfromfort.C	1394;"	d	file:
strx	src/ew-cfromfort.C	1421;"	d	file:
strx	src/ew-cfromfort.C	1476;"	d	file:
strx	src/ew-cfromfort.C	765;"	d	file:
strx	src/ew-cfromfort.C	839;"	d	file:
strx	src/ew-cfromfort.C	868;"	d	file:
strx	src/ew-cfromfort.C	939;"	d	file:
strx	src/ew-cfromfort.C	970;"	d	file:
strx	src/rhs4sg.C	55;"	d	file:
strx	src/rhs4sg.C	846;"	d	file:
strx	src/rhs4sg_rev.C	63;"	d	file:
strx	src/rhs4sg_rev.C	861;"	d	file:
strx	src/rhs4sg_revNW.C	63;"	d	file:
strx	src/rhs4sg_revNW.C	865;"	d	file:
strx	src/rhs4sgcurv.C	1401;"	d	file:
strx	src/rhs4sgcurv.C	79;"	d	file:
strx	src/rhs4sgcurv_rev.C	1390;"	d	file:
strx	src/rhs4sgcurv_rev.C	78;"	d	file:
strx	tests/testil/addsgd4fort.C	121;"	d	file:
strx	tests/testil/addsgd4fort.C	19;"	d	file:
strx	tests/testil/addsgd4fort.C	280;"	d	file:
strx	tests/testil/addsgd4fort.C	94;"	d	file:
strx	tests/testil/addsgd4fort_rev.C	20;"	d	file:
strx	tests/testil/addsgd4fort_rev.C	97;"	d	file:
strx	tests/testil/rhs4sg.c	48;"	d	file:
strx	tests/testil/rhs4sg.c	836;"	d	file:
strx	tests/testil/rhs4sg_rev.c	32;"	d	file:
strx	tests/testil/rhs4sg_rev.c	818;"	d	file:
strx	tests/testil/rhs4sgcurv.C	1370;"	d	file:
strx	tests/testil/rhs4sgcurv.C	48;"	d	file:
strx	tests/testil/rhs4sgcurv_rev.C	1359;"	d	file:
strx	tests/testil/rhs4sgcurv_rev.C	47;"	d	file:
stry	src/EW.C	4712;"	d	file:
stry	src/EW.C	4796;"	d	file:
stry	src/curvilinear-c.C	502;"	d	file:
stry	src/curvilinear-c.C	617;"	d	file:
stry	src/curvilinear-c.C	658;"	d	file:
stry	src/device-routines.C	1272;"	d	file:
stry	src/device-routines.C	1292;"	d	file:
stry	src/device-routines.C	1578;"	d	file:
stry	src/device-routines.C	1625;"	d	file:
stry	src/device-routines.C	1698;"	d	file:
stry	src/device-routines.C	1724;"	d	file:
stry	src/device-routines.C	1857;"	d	file:
stry	src/device-routines.C	1885;"	d	file:
stry	src/device-routines.C	2018;"	d	file:
stry	src/device-routines.C	2044;"	d	file:
stry	src/device-routines.C	2114;"	d	file:
stry	src/device-routines.C	2134;"	d	file:
stry	src/device-routines.C	230;"	d	file:
stry	src/device-routines.C	2389;"	d	file:
stry	src/device-routines.C	2409;"	d	file:
stry	src/device-routines.C	302;"	d	file:
stry	src/device-routines.C	325;"	d	file:
stry	src/device-routines.C	3308;"	d	file:
stry	src/device-routines.C	3326;"	d	file:
stry	src/device-routines.C	394;"	d	file:
stry	src/device-routines.C	417;"	d	file:
stry	src/device-routines.C	4221;"	d	file:
stry	src/device-routines.C	4237;"	d	file:
stry	src/device-routines.C	474;"	d	file:
stry	src/device-routines.C	494;"	d	file:
stry	src/device-routines.C	5067;"	d	file:
stry	src/device-routines.C	5082;"	d	file:
stry	src/device-routines.C	552;"	d	file:
stry	src/device-routines.C	574;"	d	file:
stry	src/device-routines.C	5916;"	d	file:
stry	src/device-routines.C	5932;"	d	file:
stry	src/device-routines.C	629;"	d	file:
stry	src/device-routines.C	6448;"	d	file:
stry	src/device-routines.C	6466;"	d	file:
stry	src/device-routines.C	650;"	d	file:
stry	src/device-routines.C	6985;"	d	file:
stry	src/device-routines.C	7005;"	d	file:
stry	src/device-routines.C	706;"	d	file:
stry	src/device-routines.C	723;"	d	file:
stry	src/device-routines.C	7327;"	d	file:
stry	src/device-routines.C	7348;"	d	file:
stry	src/device-routines.C	7670;"	d	file:
stry	src/device-routines.C	7689;"	d	file:
stry	src/device-routines.C	7964;"	d	file:
stry	src/device-routines.C	7985;"	d	file:
stry	src/device-routines.C	8271;"	d	file:
stry	src/device-routines.C	8650;"	d	file:
stry	src/device-routines.C	8775;"	d	file:
stry	src/device-routines.C	8790;"	d	file:
stry	src/device-routines.C	8917;"	d	file:
stry	src/device-routines.C	979;"	d	file:
stry	src/device-routines.C	996;"	d	file:
stry	src/ew-cfromfort.C	1049;"	d	file:
stry	src/ew-cfromfort.C	1078;"	d	file:
stry	src/ew-cfromfort.C	1150;"	d	file:
stry	src/ew-cfromfort.C	1179;"	d	file:
stry	src/ew-cfromfort.C	1233;"	d	file:
stry	src/ew-cfromfort.C	1261;"	d	file:
stry	src/ew-cfromfort.C	1315;"	d	file:
stry	src/ew-cfromfort.C	1342;"	d	file:
stry	src/ew-cfromfort.C	1397;"	d	file:
stry	src/ew-cfromfort.C	1424;"	d	file:
stry	src/ew-cfromfort.C	1479;"	d	file:
stry	src/ew-cfromfort.C	768;"	d	file:
stry	src/ew-cfromfort.C	842;"	d	file:
stry	src/ew-cfromfort.C	871;"	d	file:
stry	src/ew-cfromfort.C	942;"	d	file:
stry	src/ew-cfromfort.C	973;"	d	file:
stry	src/rhs4sg.C	56;"	d	file:
stry	src/rhs4sg.C	847;"	d	file:
stry	src/rhs4sg_rev.C	64;"	d	file:
stry	src/rhs4sg_rev.C	862;"	d	file:
stry	src/rhs4sg_revNW.C	64;"	d	file:
stry	src/rhs4sg_revNW.C	866;"	d	file:
stry	src/rhs4sgcurv.C	1402;"	d	file:
stry	src/rhs4sgcurv.C	80;"	d	file:
stry	src/rhs4sgcurv_rev.C	1391;"	d	file:
stry	src/rhs4sgcurv_rev.C	79;"	d	file:
stry	tests/testil/addsgd4fort.C	124;"	d	file:
stry	tests/testil/addsgd4fort.C	22;"	d	file:
stry	tests/testil/addsgd4fort.C	283;"	d	file:
stry	tests/testil/addsgd4fort.C	97;"	d	file:
stry	tests/testil/addsgd4fort_rev.C	100;"	d	file:
stry	tests/testil/addsgd4fort_rev.C	23;"	d	file:
stry	tests/testil/rhs4sg.c	49;"	d	file:
stry	tests/testil/rhs4sg.c	837;"	d	file:
stry	tests/testil/rhs4sg_rev.c	33;"	d	file:
stry	tests/testil/rhs4sg_rev.c	819;"	d	file:
stry	tests/testil/rhs4sgcurv.C	1371;"	d	file:
stry	tests/testil/rhs4sgcurv.C	49;"	d	file:
stry	tests/testil/rhs4sgcurv_rev.C	1360;"	d	file:
stry	tests/testil/rhs4sgcurv_rev.C	48;"	d	file:
strz	src/EW.C	4713;"	d	file:
strz	src/EW.C	4797;"	d	file:
strz	src/device-routines.C	1273;"	d	file:
strz	src/device-routines.C	1579;"	d	file:
strz	src/device-routines.C	1628;"	d	file:
strz	src/device-routines.C	1701;"	d	file:
strz	src/device-routines.C	1727;"	d	file:
strz	src/device-routines.C	1860;"	d	file:
strz	src/device-routines.C	1888;"	d	file:
strz	src/device-routines.C	2021;"	d	file:
strz	src/device-routines.C	2047;"	d	file:
strz	src/device-routines.C	2117;"	d	file:
strz	src/device-routines.C	2135;"	d	file:
strz	src/device-routines.C	233;"	d	file:
strz	src/device-routines.C	2390;"	d	file:
strz	src/device-routines.C	305;"	d	file:
strz	src/device-routines.C	328;"	d	file:
strz	src/device-routines.C	397;"	d	file:
strz	src/device-routines.C	7006;"	d	file:
strz	src/device-routines.C	724;"	d	file:
strz	src/device-routines.C	7328;"	d	file:
strz	src/device-routines.C	7349;"	d	file:
strz	src/device-routines.C	7671;"	d	file:
strz	src/device-routines.C	7965;"	d	file:
strz	src/device-routines.C	8272;"	d	file:
strz	src/device-routines.C	980;"	d	file:
strz	src/ew-cfromfort.C	1052;"	d	file:
strz	src/ew-cfromfort.C	1081;"	d	file:
strz	src/ew-cfromfort.C	1153;"	d	file:
strz	src/ew-cfromfort.C	771;"	d	file:
strz	src/ew-cfromfort.C	845;"	d	file:
strz	src/ew-cfromfort.C	874;"	d	file:
strz	src/ew-cfromfort.C	945;"	d	file:
strz	src/ew-cfromfort.C	976;"	d	file:
strz	src/rhs4sg.C	57;"	d	file:
strz	src/rhs4sg.C	848;"	d	file:
strz	src/rhs4sg_rev.C	65;"	d	file:
strz	src/rhs4sg_rev.C	863;"	d	file:
strz	src/rhs4sg_revNW.C	65;"	d	file:
strz	src/rhs4sg_revNW.C	867;"	d	file:
strz	tests/testil/addsgd4fort.C	100;"	d	file:
strz	tests/testil/addsgd4fort.C	127;"	d	file:
strz	tests/testil/addsgd4fort.C	25;"	d	file:
strz	tests/testil/addsgd4fort.C	286;"	d	file:
strz	tests/testil/addsgd4fort_rev.C	103;"	d	file:
strz	tests/testil/addsgd4fort_rev.C	26;"	d	file:
strz	tests/testil/rhs4sg.c	50;"	d	file:
strz	tests/testil/rhs4sg.c	838;"	d	file:
strz	tests/testil/rhs4sg_rev.c	34;"	d	file:
strz	tests/testil/rhs4sg_rev.c	820;"	d	file:
su	src/device-routines.C	1730;"	d	file:
su	src/device-routines.C	1863;"	d	file:
su	src/device-routines.C	1891;"	d	file:
su	src/device-routines.C	2024;"	d	file:
sum	src/Sarray.C	/^float_sw4 Sarray::sum( int c )$/;"	f	class:Sarray
sum	src/device-routines.C	1731;"	d	file:
sum	src/device-routines.C	1864;"	d	file:
sum	src/device-routines.C	1892;"	d	file:
sum	src/device-routines.C	2025;"	d	file:
sw4_exe_dir	pytest/test_sw4lite.py	/^        sw4_exe_dir=args.sw4_exe_dir$/;"	v
swap_bytes	src/Byteswapper.h	/^   inline void swap_bytes (volatile void *ptr, unsigned int i, unsigned int j)$/;"	f	class:Byteswapper
swap_bytes4	src/Byteswapper.h	/^   inline void swap_bytes4 (volatile void *ptr )$/;"	f	class:Byteswapper
swap_bytes8	src/Byteswapper.h	/^   inline void swap_bytes8 (volatile void *ptr)$/;"	f	class:Byteswapper
sync_device	src/EWCuda.C	/^void EWCuda::sync_device( )$/;"	f	class:EWCuda
sync_stream	src/EWCuda.C	/^void EWCuda::sync_stream( int st )$/;"	f	class:EWCuda
sys	pytest/test_sw4lite.py	/^import os, sys, argparse$/;"	i
taylor_swap	src/dgmodule.f90	/^  SUBROUTINE taylor_swap(/;"	s	module:dgmodule
testing_level	pytest/test_sw4lite.py	/^        testing_level=args.level$/;"	v
testing_level	pytest/test_sw4lite.py	/^    testing_level=0$/;"	v
timeDep	src/double/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	g
timeDep	src/float/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	g
timeDep	tests/testil/sw4.h	/^enum timeDep { iRicker, iGaussian, iRamp, iTriangle, iSawtooth, iSmoothWave, iErf, iRickerInt, iVerySmoothBump, iBrune,$/;"	g
timeStepLoopdGalerkin	src/EW-dg.C	/^void EW::timeStepLoopdGalerkin()$/;"	f	class:EW
timeToWrite	src/CheckPoint.C	/^bool CheckPoint::timeToWrite( float_sw4 time, int cycle, float_sw4 dt )$/;"	f	class:CheckPoint
timesteploop	src/EW.C	/^void EW::timesteploop( vector<Sarray>& U, vector<Sarray>& Um )$/;"	f	class:EW
topographyExists	src/EW.h	/^   bool topographyExists() {return m_topography_exists;}$/;"	f	class:EW
transposeik	src/Sarray.C	/^void Sarray::transposeik( )$/;"	f	class:Sarray
tw_stretching	src/SuperGrid.C	/^float_sw4 SuperGrid::tw_stretching( float_sw4 x ) const$/;"	f	class:SuperGrid
type_defs	src/type_defs.f90	/^module type_defs$/;"	m
u	src/curvilinear-c.C	499;"	d	file:
u	src/curvilinear-c.C	614;"	d	file:
u	src/curvilinear-c.C	655;"	d	file:
u	src/device-routines.C	1269;"	d	file:
u	src/device-routines.C	1289;"	d	file:
u	src/device-routines.C	1575;"	d	file:
u	src/device-routines.C	1620;"	d	file:
u	src/device-routines.C	1693;"	d	file:
u	src/device-routines.C	1719;"	d	file:
u	src/device-routines.C	1852;"	d	file:
u	src/device-routines.C	1880;"	d	file:
u	src/device-routines.C	2013;"	d	file:
u	src/device-routines.C	2039;"	d	file:
u	src/device-routines.C	2109;"	d	file:
u	src/device-routines.C	2131;"	d	file:
u	src/device-routines.C	225;"	d	file:
u	src/device-routines.C	2386;"	d	file:
u	src/device-routines.C	2405;"	d	file:
u	src/device-routines.C	297;"	d	file:
u	src/device-routines.C	320;"	d	file:
u	src/device-routines.C	3304;"	d	file:
u	src/device-routines.C	3322;"	d	file:
u	src/device-routines.C	389;"	d	file:
u	src/device-routines.C	411;"	d	file:
u	src/device-routines.C	4217;"	d	file:
u	src/device-routines.C	4233;"	d	file:
u	src/device-routines.C	468;"	d	file:
u	src/device-routines.C	488;"	d	file:
u	src/device-routines.C	5063;"	d	file:
u	src/device-routines.C	5078;"	d	file:
u	src/device-routines.C	546;"	d	file:
u	src/device-routines.C	568;"	d	file:
u	src/device-routines.C	5912;"	d	file:
u	src/device-routines.C	5928;"	d	file:
u	src/device-routines.C	623;"	d	file:
u	src/device-routines.C	6444;"	d	file:
u	src/device-routines.C	644;"	d	file:
u	src/device-routines.C	6462;"	d	file:
u	src/device-routines.C	6981;"	d	file:
u	src/device-routines.C	7002;"	d	file:
u	src/device-routines.C	700;"	d	file:
u	src/device-routines.C	720;"	d	file:
u	src/device-routines.C	7324;"	d	file:
u	src/device-routines.C	7345;"	d	file:
u	src/device-routines.C	7667;"	d	file:
u	src/device-routines.C	7686;"	d	file:
u	src/device-routines.C	7961;"	d	file:
u	src/device-routines.C	7982;"	d	file:
u	src/device-routines.C	8268;"	d	file:
u	src/device-routines.C	8647;"	d	file:
u	src/device-routines.C	8772;"	d	file:
u	src/device-routines.C	8787;"	d	file:
u	src/device-routines.C	8914;"	d	file:
u	src/device-routines.C	9375;"	d	file:
u	src/device-routines.C	976;"	d	file:
u	src/device-routines.C	993;"	d	file:
u	src/ew-cfromfort.C	1044;"	d	file:
u	src/ew-cfromfort.C	1073;"	d	file:
u	src/ew-cfromfort.C	1145;"	d	file:
u	src/ew-cfromfort.C	1173;"	d	file:
u	src/ew-cfromfort.C	1228;"	d	file:
u	src/ew-cfromfort.C	1255;"	d	file:
u	src/ew-cfromfort.C	1310;"	d	file:
u	src/ew-cfromfort.C	1336;"	d	file:
u	src/ew-cfromfort.C	1392;"	d	file:
u	src/ew-cfromfort.C	1418;"	d	file:
u	src/ew-cfromfort.C	1474;"	d	file:
u	src/ew-cfromfort.C	763;"	d	file:
u	src/ew-cfromfort.C	837;"	d	file:
u	src/ew-cfromfort.C	866;"	d	file:
u	src/ew-cfromfort.C	937;"	d	file:
u	src/ew-cfromfort.C	968;"	d	file:
u	src/rhs4sg.C	53;"	d	file:
u	src/rhs4sg.C	844;"	d	file:
u	src/rhs4sg_rev.C	61;"	d	file:
u	src/rhs4sg_rev.C	859;"	d	file:
u	src/rhs4sg_revNW.C	61;"	d	file:
u	src/rhs4sg_revNW.C	863;"	d	file:
u	src/rhs4sgcurv.C	1398;"	d	file:
u	src/rhs4sgcurv.C	76;"	d	file:
u	src/rhs4sgcurv_rev.C	1387;"	d	file:
u	src/rhs4sgcurv_rev.C	75;"	d	file:
u	tests/testil/addsgd4fort.C	119;"	d	file:
u	tests/testil/addsgd4fort.C	17;"	d	file:
u	tests/testil/addsgd4fort.C	278;"	d	file:
u	tests/testil/addsgd4fort.C	92;"	d	file:
u	tests/testil/addsgd4fort_rev.C	18;"	d	file:
u	tests/testil/addsgd4fort_rev.C	95;"	d	file:
u	tests/testil/rhs4sg.c	46;"	d	file:
u	tests/testil/rhs4sg.c	834;"	d	file:
u	tests/testil/rhs4sg_rev.c	30;"	d	file:
u	tests/testil/rhs4sg_rev.c	816;"	d	file:
u	tests/testil/rhs4sgcurv.C	1367;"	d	file:
u	tests/testil/rhs4sgcurv.C	45;"	d	file:
u	tests/testil/rhs4sgcurv_rev.C	1356;"	d	file:
u	tests/testil/rhs4sgcurv_rev.C	44;"	d	file:
uCart	src/device-routines.C	9290;"	d	file:
uCart	src/device-routines.C	9321;"	d	file:
uCart	src/device-routines.C	9331;"	d	file:
uCart	src/device-routines.C	9364;"	d	file:
uCurv	src/device-routines.C	9291;"	d	file:
uCurv	src/device-routines.C	9322;"	d	file:
uCurv	src/device-routines.C	9332;"	d	file:
uCurv	src/device-routines.C	9365;"	d	file:
uSh	src/device-routines.C	2410;"	d	file:
uSh	src/device-routines.C	3309;"	d	file:
uSh	src/device-routines.C	3327;"	d	file:
uSh	src/device-routines.C	4222;"	d	file:
uSh	src/device-routines.C	7007;"	d	file:
uSh	src/device-routines.C	7329;"	d	file:
uSh	src/device-routines.C	7350;"	d	file:
uSh	src/device-routines.C	7672;"	d	file:
um	src/device-routines.C	1621;"	d	file:
um	src/device-routines.C	1694;"	d	file:
um	src/device-routines.C	1720;"	d	file:
um	src/device-routines.C	1853;"	d	file:
um	src/device-routines.C	1881;"	d	file:
um	src/device-routines.C	2014;"	d	file:
um	src/device-routines.C	2040;"	d	file:
um	src/device-routines.C	2110;"	d	file:
um	src/device-routines.C	226;"	d	file:
um	src/device-routines.C	298;"	d	file:
um	src/device-routines.C	321;"	d	file:
um	src/device-routines.C	390;"	d	file:
um	src/device-routines.C	412;"	d	file:
um	src/device-routines.C	469;"	d	file:
um	src/device-routines.C	489;"	d	file:
um	src/device-routines.C	547;"	d	file:
um	src/device-routines.C	569;"	d	file:
um	src/device-routines.C	624;"	d	file:
um	src/device-routines.C	645;"	d	file:
um	src/device-routines.C	701;"	d	file:
um	src/device-routines.C	9378;"	d	file:
um	src/ew-cfromfort.C	1045;"	d	file:
um	src/ew-cfromfort.C	1074;"	d	file:
um	src/ew-cfromfort.C	1146;"	d	file:
um	src/ew-cfromfort.C	1174;"	d	file:
um	src/ew-cfromfort.C	1229;"	d	file:
um	src/ew-cfromfort.C	1256;"	d	file:
um	src/ew-cfromfort.C	1311;"	d	file:
um	src/ew-cfromfort.C	1337;"	d	file:
um	src/ew-cfromfort.C	1393;"	d	file:
um	src/ew-cfromfort.C	1419;"	d	file:
um	src/ew-cfromfort.C	1475;"	d	file:
um	src/ew-cfromfort.C	764;"	d	file:
um	src/ew-cfromfort.C	838;"	d	file:
um	src/ew-cfromfort.C	867;"	d	file:
um	src/ew-cfromfort.C	938;"	d	file:
um	src/ew-cfromfort.C	969;"	d	file:
um	tests/testil/addsgd4fort.C	120;"	d	file:
um	tests/testil/addsgd4fort.C	18;"	d	file:
um	tests/testil/addsgd4fort.C	279;"	d	file:
um	tests/testil/addsgd4fort.C	93;"	d	file:
um	tests/testil/addsgd4fort_rev.C	19;"	d	file:
um	tests/testil/addsgd4fort_rev.C	96;"	d	file:
unpack_HaloArrayCU_X	src/EW_cuda.C	/^void EW::unpack_HaloArrayCU_X( Sarray& u, int g , int st)$/;"	f	class:EW
unpack_HaloArrayCU_Y	src/EW_cuda.C	/^void EW::unpack_HaloArrayCU_Y( Sarray& u, int g , int st)$/;"	f	class:EW
up	src/device-routines.C	1619;"	d	file:
up	src/device-routines.C	1692;"	d	file:
up	src/device-routines.C	1718;"	d	file:
up	src/device-routines.C	1851;"	d	file:
up	src/device-routines.C	1879;"	d	file:
up	src/device-routines.C	2012;"	d	file:
up	src/device-routines.C	2038;"	d	file:
up	src/device-routines.C	2108;"	d	file:
up	src/device-routines.C	224;"	d	file:
up	src/device-routines.C	296;"	d	file:
up	src/device-routines.C	319;"	d	file:
up	src/device-routines.C	388;"	d	file:
up	src/device-routines.C	410;"	d	file:
up	src/device-routines.C	467;"	d	file:
up	src/device-routines.C	487;"	d	file:
up	src/device-routines.C	545;"	d	file:
up	src/device-routines.C	567;"	d	file:
up	src/device-routines.C	622;"	d	file:
up	src/device-routines.C	643;"	d	file:
up	src/device-routines.C	699;"	d	file:
up	src/device-routines.C	9377;"	d	file:
up	src/ew-cfromfort.C	1043;"	d	file:
up	src/ew-cfromfort.C	1072;"	d	file:
up	src/ew-cfromfort.C	1144;"	d	file:
up	src/ew-cfromfort.C	1172;"	d	file:
up	src/ew-cfromfort.C	1227;"	d	file:
up	src/ew-cfromfort.C	1254;"	d	file:
up	src/ew-cfromfort.C	1309;"	d	file:
up	src/ew-cfromfort.C	1335;"	d	file:
up	src/ew-cfromfort.C	1391;"	d	file:
up	src/ew-cfromfort.C	1417;"	d	file:
up	src/ew-cfromfort.C	1473;"	d	file:
up	src/ew-cfromfort.C	762;"	d	file:
up	src/ew-cfromfort.C	836;"	d	file:
up	src/ew-cfromfort.C	865;"	d	file:
up	src/ew-cfromfort.C	936;"	d	file:
up	src/ew-cfromfort.C	967;"	d	file:
up	tests/testil/addsgd4fort.C	118;"	d	file:
up	tests/testil/addsgd4fort.C	16;"	d	file:
up	tests/testil/addsgd4fort.C	277;"	d	file:
up	tests/testil/addsgd4fort.C	91;"	d	file:
up	tests/testil/addsgd4fort_rev.C	17;"	d	file:
up	tests/testil/addsgd4fort_rev.C	94;"	d	file:
updatememvar	src/rhs4th3fort.f	/^      subroutine updatememvar(/;"	s
urec_size	src/TimeSeries.C	/^int TimeSeries::urec_size()$/;"	f	class:TimeSeries
usingParallelFS	src/EW.h	/^   bool usingParallelFS() const { return m_pfs;}$/;"	f	class:EW
verbose	pytest/test_sw4lite.py	/^        verbose=True$/;"	v
verbose	pytest/test_sw4lite.py	/^    verbose=False$/;"	v
weights_qp	src/dgmodule.f90	/^  subroutine weights_qp(/;"	s	module:dgmodule
writeFile	src/TimeSeries.C	/^void TimeSeries::writeFile( string suffix )$/;"	f	class:TimeSeries
write_array	src/Parallel_IO.C	/^void Parallel_IO::write_array( int* fid, int nc, void* array, off_t pos0,$/;"	f	class:Parallel_IO
write_checkpoint	src/CheckPoint.C	/^void CheckPoint::write_checkpoint( float_sw4 a_time, int a_cycle, vector<Sarray>& a_Um,$/;"	f	class:CheckPoint
write_sac_format	src/TimeSeries.C	/^write_sac_format(int npts, char *ofile, float *y, float btime, float dt, char *var,$/;"	f	class:TimeSeries
write_usgs_format	src/TimeSeries.C	/^void TimeSeries::write_usgs_format(string a_fileName)$/;"	f	class:TimeSeries
writer_barrier	src/Parallel_IO.C	/^void Parallel_IO::writer_barrier( )$/;"	f	class:Parallel_IO
wsac1	src/sacsubc.C	/^void wsac1(char *ofile,float *y,int npts,float btime,float dt,int *nerr)$/;"	f
x	src/curvilinear-c.C	167;"	d	file:
x	src/curvilinear-c.C	187;"	d	file:
x	src/curvilinear-c.C	290;"	d	file:
x	src/curvilinear-c.C	312;"	d	file:
x	src/curvilinear-c.C	373;"	d	file:
x	src/curvilinear-c.C	396;"	d	file:
x	src/curvilinear-c.C	457;"	d	file:
x	src/curvilinear-c.C	493;"	d	file:
x	src/curvilinear-c.C	608;"	d	file:
x	src/curvilinear-c.C	649;"	d	file:
x	src/curvilinear-c.C	64;"	d	file:
x	tests/testil/metricC.C	119;"	d	file:
x	tests/testil/metricC.C	139;"	d	file:
x	tests/testil/metricC.C	16;"	d	file:
x	tests/testil/metricC.C	242;"	d	file:
y	src/curvilinear-c.C	168;"	d	file:
y	src/curvilinear-c.C	188;"	d	file:
y	src/curvilinear-c.C	291;"	d	file:
y	src/curvilinear-c.C	313;"	d	file:
y	src/curvilinear-c.C	374;"	d	file:
y	src/curvilinear-c.C	397;"	d	file:
y	src/curvilinear-c.C	458;"	d	file:
y	src/curvilinear-c.C	494;"	d	file:
y	src/curvilinear-c.C	609;"	d	file:
y	src/curvilinear-c.C	650;"	d	file:
y	src/curvilinear-c.C	65;"	d	file:
y	tests/testil/metricC.C	120;"	d	file:
y	tests/testil/metricC.C	140;"	d	file:
y	tests/testil/metricC.C	17;"	d	file:
y	tests/testil/metricC.C	243;"	d	file:
z	src/curvilinear-c.C	169;"	d	file:
z	src/curvilinear-c.C	189;"	d	file:
z	src/curvilinear-c.C	292;"	d	file:
z	src/curvilinear-c.C	314;"	d	file:
z	src/curvilinear-c.C	375;"	d	file:
z	src/curvilinear-c.C	398;"	d	file:
z	src/curvilinear-c.C	459;"	d	file:
z	src/curvilinear-c.C	495;"	d	file:
z	src/curvilinear-c.C	610;"	d	file:
z	src/curvilinear-c.C	651;"	d	file:
z	src/curvilinear-c.C	66;"	d	file:
z	tests/testil/metricC.C	121;"	d	file:
z	tests/testil/metricC.C	141;"	d	file:
z	tests/testil/metricC.C	18;"	d	file:
z	tests/testil/metricC.C	244;"	d	file:
~CheckPoint	src/CheckPoint.C	/^CheckPoint::~CheckPoint()$/;"	f	class:CheckPoint
~Comminfo	src/Parallel_IO.C	/^Comminfo::~Comminfo()$/;"	f	class:Comminfo
~EWCuda	src/EWCuda.C	/^EWCuda::~EWCuda()$/;"	f	class:EWCuda
~Filter	src/Filter.C	/^Filter::~Filter()$/;"	f	class:Filter
~GridPointSource	src/GridPointSource.C	/^GridPointSource::~GridPointSource()$/;"	f	class:GridPointSource
~Sarray	src/Sarray.h	/^   ~Sarray() {if( m_data != 0 ) delete[] m_data;}$/;"	f	class:Sarray
~Source	src/Source.C	/^Source::~Source()$/;"	f	class:Source
~TimeSeries	src/TimeSeries.C	/^TimeSeries::~TimeSeries()$/;"	f	class:TimeSeries
